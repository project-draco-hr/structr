{
  String stem=s;
  String irreg=irregular.get(s);
  if (irreg != null)   return (stem=irreg);
  if (categoryON_A.contains(s))   return (stem=cut(s,"a") + "on");
  if (categoryUM_A.contains(s))   return (stem=cut(s,"a") + "um");
  if (categoryIX_ICES.contains(s))   return (stem=cut(s,"ices") + "ix");
  if (categoryO_I.contains(s))   return (stem=cut(s,"i") + "o");
  if (categorySE_SES.contains(s))   return (stem=cut(s,"s"));
  if (categoryIS_ES.contains(s) || s.endsWith("theses"))   return (stem=cut(s,"es") + "is");
  if (categoryUS_I.contains(s))   return (stem=cut(s,"i") + "us");
  if (s.endsWith("uses") && (categoryUS_I.contains(cut(s,"uses") + "i") || s.equals("genuses") || s.equals("corpuses")))   return (stem=cut(s,"es"));
  if (categoryEX_ICES.contains(s))   return (stem=cut(s,"ices") + "ex");
  if (s.endsWith("ois") || s.endsWith("itis") || category00.contains(s)|| categoryICS.contains(s))   return (stem=s);
  if (s.endsWith("ina"))   return (stem=cut(s,"en"));
  if (s.endsWith("ae"))   return (stem=cut(s,"e"));
  if (s.endsWith("ata"))   return (stem=cut(s,"ta"));
  if (s.endsWith("trices"))   return (stem=cut(s,"trices") + "trix");
  if (s.endsWith("us") && !s.endsWith("eaus") && !s.endsWith("ieus")&& !noLatin(s)&& !categoryU_US.contains(s))   return (stem=s);
  if (s.endsWith("teeth"))   return (stem=cut(s,"teeth") + "tooth");
  if (s.endsWith("geese"))   return (stem=cut(s,"geese") + "goose");
  if (s.endsWith("feet"))   return (stem=cut(s,"feet") + "foot");
  if (s.endsWith("zoa"))   return (stem=cut(s,"zoa") + "zoon");
  if (s.endsWith("eaux"))   return (stem=cut(s,"x"));
  if (s.endsWith("ieux"))   return (stem=cut(s,"x"));
  if (s.endsWith("nges") && greek(s))   return (stem=cut(s,"nges") + "nx");
  if (s.endsWith("shes") || s.endsWith("ches") && !categoryCHE_CHES.contains(s))   return (stem=cut(s,"es"));
  if (s.endsWith("sses") && !categorySSE_SSES.contains(s) && !s.endsWith("mousses"))   return (stem=cut(s,"es"));
  if (s.endsWith("xes") && !s.equals("axes"))   return (stem=cut(s,"es"));
  if (s.endsWith("nives") || s.endsWith("lives") && !s.endsWith("olives") || s.endsWith("wives"))   return (stem=cut(s,"ves") + "fe");
  if (s.endsWith("alves") && !s.endsWith("valves") || s.endsWith("olves") && !s.endsWith("solves") || s.endsWith("eaves") && !s.endsWith("heaves") && !s.endsWith("weaves") || s.endsWith("arves"))   return (stem=cut(s,"ves") + "f");
  if (s.endsWith("ies") && !categoryIE_IES.contains(s))   return (stem=cut(s,"ies") + "y");
  if (s.endsWith("oes") && !categoryOE_OES.contains(s))   return (stem=cut(s,"es"));
  if (s.endsWith("ses") || s.endsWith("zes"))   return (stem=cut(s,"es"));
  if (s.endsWith("s") && !s.endsWith("ss") && !s.endsWith("is"))   return (stem=cut(s,"s"));
  return stem;
}
