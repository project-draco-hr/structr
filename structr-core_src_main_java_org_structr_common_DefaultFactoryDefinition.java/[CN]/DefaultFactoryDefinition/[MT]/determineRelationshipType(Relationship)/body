{
  if (TransactionCommand.isDeleted(relationship)) {
    return null;
  }
  final String type=GraphObject.type.dbName();
  final String sourceType=relationship.getStartNode().hasProperty(type) ? relationship.getStartNode().getProperty(type).toString() : "";
  final String targetType=relationship.getEndNode().hasProperty(type) ? relationship.getEndNode().getProperty(type).toString() : "";
  final String relType=relationship.getType().name();
  final Class entityType=getClassForCombinedType(sourceType,relType,targetType);
  if (entityType != null) {
    logger.log(Level.FINE,"Class for assembled combined {0}",entityType.getName());
    return entityType;
  }
  if (relationship.hasProperty(type)) {
    Object obj=relationship.getProperty(type);
    logger.log(Level.FINEST,"Type property: {0}",obj);
    if (obj != null) {
      Class relationClass=StructrApp.getConfiguration().getRelationshipEntityClass(obj.toString());
      if (relationClass != null) {
        StructrApp.getConfiguration().setRelationClassForCombinedType(sourceType,relType,targetType,relationClass);
        return relationClass;
      }
    }
  }
  final String combinedTypeName="combinedType";
  if (relationship.hasProperty(combinedTypeName)) {
    Object obj=relationship.getProperty(combinedTypeName);
    logger.log(Level.FINE,"Combined type property: {0}",obj);
    if (obj != null) {
      Class classForCombinedType=getClassForCombinedType(obj.toString());
      if (classForCombinedType != null) {
        return classForCombinedType;
      }
    }
  }
  return getGenericRelationshipType();
}
