{
  if (n1 == null || n2 == null) {
    throw new NullPointerException();
  }
  try {
    boolean desc=DESCENDING.equalsIgnoreCase(sortOrder);
    Comparable c1=n1.getComparableProperty(sortKey);
    Comparable c2=n2.getComparableProperty(sortKey);
    if (c1 == null || c2 == null) {
      if (c1 == null && c2 == null) {
        return 0;
      }
 else       if (c1 == null) {
        return desc ? -1 : 1;
      }
 else {
        return desc ? 1 : -1;
      }
    }
    if (desc) {
      return c2.compareTo(c1);
    }
 else {
      return c1.compareTo(c2);
    }
  }
 catch (  Throwable t) {
    logger.warn("Cannot compare properties {} of type {} to {} of type {}, property {} error.",new Object[]{n1.getProperty(GraphObject.id),n1.getProperty(AbstractNode.type),n2.getProperty(GraphObject.id),n2.getProperty(AbstractNode.type),sortKey});
  }
  return 0;
}
