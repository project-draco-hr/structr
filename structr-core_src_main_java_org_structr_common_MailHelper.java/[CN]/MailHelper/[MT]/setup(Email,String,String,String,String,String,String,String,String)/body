{
  final Properties config=Services.getInstance().getCurrentConfig();
  final String smtpHost=config.getProperty(Services.SMTP_HOST,"localhost");
  final String smtpPort=config.getProperty(Services.SMTP_PORT,"25");
  final String smtpUser=config.getProperty(Services.SMTP_USER);
  final String smtpPassword=config.getProperty(Services.SMTP_PASSWORD);
  final String smtpUseTLS=config.getProperty(Services.SMTP_USE_TLS,"true");
  final String smtpRequireTLS=config.getProperty(Services.SMTP_REQUIRE_TLS,"false");
  mail.setCharset(charset);
  mail.setHostName(smtpHost);
  mail.setSmtpPort(Integer.parseInt(smtpPort));
  mail.setStartTLSEnabled(Boolean.parseBoolean(smtpUseTLS));
  mail.setStartTLSRequired(Boolean.parseBoolean(smtpRequireTLS));
  mail.setCharset(charset);
  mail.setHostName(smtpHost);
  mail.setSmtpPort(Integer.parseInt(smtpPort));
  if (StringUtils.isNotBlank(smtpUser) && StringUtils.isNotBlank(smtpPassword)) {
    mail.setAuthentication(smtpUser,smtpPassword);
  }
  mail.addTo(to,toName);
  mail.setFrom(from,fromName);
  if (StringUtils.isNotBlank(cc)) {
    mail.addCc(cc);
  }
  if (StringUtils.isNotBlank(bcc)) {
    mail.addBcc(bcc);
  }
  if (StringUtils.isNotBlank(bounce)) {
    mail.setBounceAddress(bounce);
  }
  mail.setSubject(subject);
}
