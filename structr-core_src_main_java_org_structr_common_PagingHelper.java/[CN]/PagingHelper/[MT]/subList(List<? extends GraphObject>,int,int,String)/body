{
  if (pageSize <= 0 || page == 0) {
    return Collections.EMPTY_LIST;
  }
  int size=list.size();
  int fromIndex;
  int toIndex;
  if (StringUtils.isNotBlank(offsetId)) {
    int offsetIndex=0;
    int i=0;
    for (    GraphObject obj : list) {
      if (obj.getUuid().equals(offsetId)) {
        offsetIndex=i;
        break;
      }
 else {
        i++;
        continue;
      }
    }
    fromIndex=page > 0 ? offsetIndex : offsetIndex + (page * pageSize);
  }
 else {
    fromIndex=page > 0 ? (page - 1) * pageSize : size + (page * pageSize);
  }
  toIndex=fromIndex + pageSize;
  int finalFromIndex=Math.max(0,fromIndex);
  int finalToIndex=Math.min(size,Math.max(0,toIndex));
  if (finalFromIndex > finalToIndex) {
    finalFromIndex=finalToIndex;
  }
  try {
    return list.subList(finalFromIndex,finalToIndex);
  }
 catch (  Throwable t) {
    logger.warn("Invalid range for sublist in paging, pageSize {}, page {}, offsetId {}: {}",new Object[]{pageSize,page,offsetId,t.getMessage()});
  }
  return Collections.EMPTY_LIST;
}
