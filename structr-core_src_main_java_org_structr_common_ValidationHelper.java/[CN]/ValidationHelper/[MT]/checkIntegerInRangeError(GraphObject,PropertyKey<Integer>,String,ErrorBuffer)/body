{
  final int length=range.length();
  final String leftBound=range.substring(0,1);
  final String rightBound=range.substring(length - 1,length);
  final String[] parts=range.substring(1,length - 1).split(",+");
  final String type=node.getType();
  if (parts.length == 2) {
    final String leftPart=parts[0].trim();
    final String rightPart=parts[1].trim();
    final int left=Integer.parseInt(leftPart);
    final int right=Integer.parseInt(rightPart);
    final Integer value=node.getProperty(key);
    if (value != null) {
      boolean inRange=true;
      if ("[".equals(leftBound)) {
        inRange&=(value >= left);
      }
 else {
        inRange&=(value > left);
      }
      if ("]".equals(rightBound)) {
        inRange&=(value <= right);
      }
 else {
        inRange&=(value < right);
      }
      if (!inRange) {
        errorBuffer.add(type,new RangeToken(key,range));
      }
      return !inRange;
    }
  }
  return false;
}
