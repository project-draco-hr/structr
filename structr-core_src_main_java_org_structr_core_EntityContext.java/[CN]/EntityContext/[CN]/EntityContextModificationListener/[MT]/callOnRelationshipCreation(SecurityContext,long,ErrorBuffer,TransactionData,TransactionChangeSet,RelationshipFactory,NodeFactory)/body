{
  boolean hasError=false;
  for (  Relationship rel : sortRelationships(data.createdRelationships())) {
    AbstractRelationship entity=relFactory.instantiateRelationship(securityContext,rel);
    if (entity != null) {
      hasError|=!entity.beforeCreation(securityContext,errorBuffer);
      changeSet.create(entity);
      for (      StructrTransactionListener listener : EntityContext.getTransactionListeners()) {
        hasError|=!listener.graphObjectCreated(securityContext,transactionKey,errorBuffer,entity);
      }
      try {
        AbstractNode startNode=nodeFactory.instantiateNode(rel.getStartNode());
        RelationshipType relationshipType=entity.getRelType();
        if (startNode != null) {
          changeSet.modifyRelationshipEndpoint(startNode,relationshipType);
        }
        AbstractNode endNode=nodeFactory.instantiateNode(rel.getEndNode());
        if (endNode != null) {
          changeSet.modifyRelationshipEndpoint(endNode,relationshipType);
        }
      }
 catch (      Throwable t) {
      }
    }
  }
  return hasError;
}
