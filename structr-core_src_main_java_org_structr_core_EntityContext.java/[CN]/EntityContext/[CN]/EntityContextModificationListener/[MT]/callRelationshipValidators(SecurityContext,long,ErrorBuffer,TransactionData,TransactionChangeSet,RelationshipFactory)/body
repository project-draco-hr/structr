{
  boolean hasError=false;
  for (  PropertyEntry<Relationship> entry : data.assignedRelationshipProperties()) {
    AbstractRelationship relEntity=relFactory.instantiateRelationship(securityContext,entry.entity());
    if (relEntity != null) {
      PropertyKey key=getPropertyKeyForDatabaseName(relEntity.getClass(),entry.key());
      Object value=entry.value();
      if (!key.isSystemProperty()) {
        changeSet.nonSystemProperty();
        changeSet.modify(relEntity);
      }
      Set<PropertyValidator> validators=EntityContext.getPropertyValidators(securityContext,relEntity.getClass(),key);
      if (validators != null) {
        for (        PropertyValidator validator : validators) {
          hasError|=!(validator.isValid(securityContext,relEntity,key,value,errorBuffer));
        }
      }
      for (      StructrTransactionListener listener : EntityContext.getTransactionListeners()) {
        hasError|=!listener.propertyModified(securityContext,transactionKey,errorBuffer,relEntity,key,entry.previouslyCommitedValue(),value);
      }
    }
  }
  return hasError;
}
