{
  Class namedRelationClass=null;
  Class sourceSuperClass=sourceType;
  Class destSuperClass=destType;
  while ((namedRelationClass == null) && sourceSuperClass != null && destSuperClass != null && !Object.class.equals(sourceSuperClass) && !Object.class.equals(destSuperClass)) {
    namedRelationClass=globalRelationshipClassMap.get(createCombinedRelationshipType(sourceSuperClass,relType,destSuperClass));
    if (namedRelationClass == null) {
      for (      Class interfaceClass : getInterfacesForType(destSuperClass)) {
        namedRelationClass=globalRelationshipClassMap.get(createCombinedRelationshipType(sourceSuperClass,relType,interfaceClass));
        if (namedRelationClass != null) {
          break;
        }
      }
    }
    destSuperClass=destSuperClass.getSuperclass();
  }
  if (namedRelationClass != null) {
    return namedRelationClass;
  }
  return globalRelationshipClassMap.get(createCombinedRelationshipType(sourceType,relType,destType));
}
