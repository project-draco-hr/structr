{
  final Set<String> resources=new LinkedHashSet<>();
  for (  final Object configurationValue : structrConf.values()) {
    for (    final String value : configurationValue.toString().split("[\\s ,;]+")) {
      try {
        final Class candidate=Class.forName(value);
        if (!candidate.getName().startsWith("org.structr")) {
          final String codeLocation=candidate.getProtectionDomain().getCodeSource().getLocation().toString();
          if (codeLocation.startsWith("file:") && codeLocation.endsWith(".jar") || codeLocation.endsWith(".war")) {
            final File file=new File(URI.create(codeLocation));
            if (file.exists()) {
              resources.add(file.getAbsolutePath());
            }
          }
        }
      }
 catch (      Throwable ignore) {
      }
    }
  }
  logger.log(Level.INFO,"Found {0} possible resources: {1}",new Object[]{resources.size(),resources});
  return resources;
}
