{
  final Properties config=getBaseConfiguration();
  final String configTemplateFileName="structr.conf_templ";
  final String configFileName="structr.conf";
  final File configTemplateFile=new File(configTemplateFileName);
  final File configFile=new File(configFileName);
  if (!configFile.exists() && !configTemplateFile.exists()) {
    logger.error("Unable to create config file, {} and {} do not exist, aborting. Please create a {} configuration file and try again.",new Object[]{configFileName,configTemplateFileName});
    System.exit(1);
  }
  if (!configFile.exists() && configTemplateFile.exists()) {
    logger.warn("Configuration file {} not found, copying from template {}. Please adapt newly created {} to your needs.",new Object[]{configFileName,configTemplateFileName});
    try {
      Files.copy(configTemplateFile.toPath(),configFile.toPath());
    }
 catch (    IOException ioex) {
      logger.error("Unable to create config file, copying of template failed.",ioex);
      System.exit(1);
    }
  }
  logger.info("Reading {}..",configFileName);
  try {
    PropertiesConfiguration.setDefaultListDelimiter('\0');
    StructrServices.loadConfiguration(config,new PropertiesConfiguration(configFileName));
  }
 catch (  ConfigurationException ex) {
    logger.error("",ex);
  }
  StructrServices.mergeConfiguration(config,structrConf);
  initialize(config);
}
