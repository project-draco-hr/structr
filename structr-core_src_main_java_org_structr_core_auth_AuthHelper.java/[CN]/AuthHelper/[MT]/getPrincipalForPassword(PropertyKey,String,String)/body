{
  String errorMsg=null;
  Principal principal=null;
  if (Services.getSuperuserUsername().equals(value) && Services.getSuperuserPassword().equals(password)) {
    logger.log(Level.INFO,"############# Authenticated as superadmin! ############");
    principal=new SuperUser();
  }
 else {
    try {
      SearchNodeCommand searchNode=Services.command(SecurityContext.getSuperUserInstance(),SearchNodeCommand.class);
      List<SearchAttribute> attrs=new LinkedList<SearchAttribute>();
      attrs.add(Search.andExactTypeAndSubtypes(Principal.class.getSimpleName()));
      SearchAttributeGroup group=new SearchAttributeGroup(Occur.MUST);
      group.add(Search.orExactProperty(key,value));
      group.add(Search.orExactProperty(AbstractNode.name,value));
      attrs.add(group);
      Result userList=searchNode.execute(attrs);
      if (!userList.isEmpty()) {
        principal=(Principal)userList.get(0);
      }
      if (principal == null) {
        logger.log(Level.INFO,"No user found for {0} {1}",new Object[]{key.dbName(),value});
        errorMsg=STANDARD_ERROR_MSG;
      }
 else {
        if (principal.isBlocked()) {
          logger.log(Level.INFO,"User {0} is blocked",principal);
          errorMsg=STANDARD_ERROR_MSG;
        }
        if (StringUtils.isEmpty(password)) {
          logger.log(Level.INFO,"Empty password for principal {0}",principal);
          errorMsg="Empty password, should not ever happen down here!";
        }
 else {
          String encryptedPasswordValue=DigestUtils.sha512Hex(password);
          String pw=principal.getEncryptedPassword();
          if (pw == null || !encryptedPasswordValue.equals(pw)) {
            logger.log(Level.INFO,"Wrong password for principal {0}",principal);
            errorMsg=STANDARD_ERROR_MSG;
          }
        }
      }
    }
 catch (    FrameworkException fex) {
      fex.printStackTrace();
    }
  }
  if (errorMsg != null) {
    throw new AuthenticationException(errorMsg);
  }
  return principal;
}
