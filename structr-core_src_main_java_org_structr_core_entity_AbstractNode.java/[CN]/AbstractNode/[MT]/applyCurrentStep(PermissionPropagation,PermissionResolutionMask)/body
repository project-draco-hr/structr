{
  final boolean doLog=securityContext.hasParameter("debugLoggingEnabled");
switch (rel.getReadPropagation()) {
case Add:
    mask.addRead();
  if (doLog) {
    System.out.println("                add read");
  }
break;
case Remove:
mask.removeRead();
if (doLog) {
System.out.println("                remove read");
}
break;
default :
break;
}
switch (rel.getWritePropagation()) {
case Add:
mask.addWrite();
if (doLog) {
System.out.println("                add write");
}
break;
case Remove:
mask.removeWrite();
if (doLog) {
System.out.println("                remove write");
}
break;
default :
break;
}
switch (rel.getDeletePropagation()) {
case Add:
mask.addDelete();
if (doLog) {
System.out.println("                add delete");
}
break;
case Remove:
mask.removeDelete();
if (doLog) {
System.out.println("                remove delete");
}
break;
default :
break;
}
switch (rel.getAccessControlPropagation()) {
case Add:
mask.addAccessControl();
if (doLog) {
System.out.println("                add accessControl");
}
break;
case Remove:
mask.removeAccessControl();
if (doLog) {
System.out.println("                remove accessControl");
}
break;
default :
break;
}
mask.handleProperties(rel.getDeltaProperties());
}
