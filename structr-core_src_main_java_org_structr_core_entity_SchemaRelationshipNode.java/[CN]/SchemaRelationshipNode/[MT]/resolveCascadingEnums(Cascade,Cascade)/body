{
  if (delete != null) {
switch (delete) {
case sourceToTarget:
      setProperty(SchemaRelationshipNode.cascadingDeleteFlag,Long.valueOf(Relation.SOURCE_TO_TARGET));
    break;
case targetToSource:
  setProperty(SchemaRelationshipNode.cascadingDeleteFlag,Long.valueOf(Relation.TARGET_TO_SOURCE));
break;
case always:
setProperty(SchemaRelationshipNode.cascadingDeleteFlag,Long.valueOf(Relation.ALWAYS));
break;
case constraintBased:
setProperty(SchemaRelationshipNode.cascadingDeleteFlag,Long.valueOf(Relation.CONSTRAINT_BASED));
break;
}
}
if (autoCreate != null) {
switch (autoCreate) {
case sourceToTarget:
setProperty(SchemaRelationshipNode.autocreationFlag,Long.valueOf(Relation.SOURCE_TO_TARGET));
break;
case targetToSource:
setProperty(SchemaRelationshipNode.autocreationFlag,Long.valueOf(Relation.TARGET_TO_SOURCE));
break;
case always:
setProperty(SchemaRelationshipNode.autocreationFlag,Long.valueOf(Relation.ALWAYS));
break;
case constraintBased:
setProperty(SchemaRelationshipNode.autocreationFlag,Long.valueOf(Relation.CONSTRAINT_BASED));
break;
}
}
}
