{
  try {
    if (!arrayHasLengthAndAllElementsNotNull(sources,1)) {
      return null;
    }
    if (sources[0] instanceof Collection) {
      final List<String> cleanList=new LinkedList<>();
      for (      final Object obj : (Collection)sources[0]) {
        if (StringUtils.isBlank(obj.toString())) {
          cleanList.add("");
        }
 else {
          cleanList.add(cleanString(obj));
        }
      }
      return cleanList;
    }
    if (StringUtils.isBlank(sources[0].toString())) {
      return "";
    }
    return cleanString(sources[0]);
  }
 catch (  final IllegalArgumentException e) {
    logParameterError(entity,sources,ctx.isJavaScriptContext());
    return usage(ctx.isJavaScriptContext());
  }
}
