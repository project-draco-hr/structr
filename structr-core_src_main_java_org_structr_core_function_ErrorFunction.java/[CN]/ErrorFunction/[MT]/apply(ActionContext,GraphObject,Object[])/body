{
  final Class entityType;
  final String type;
  if (entity != null) {
    entityType=entity.getClass();
    type=entity.getType();
  }
 else {
    entityType=GraphObject.class;
    type="Base";
  }
  try {
    if (sources == null) {
      throw new IllegalArgumentException();
    }
switch (sources.length) {
case 1:
      throw new IllegalArgumentException();
case 2:
{
      arrayHasLengthAndAllElementsNotNull(sources,2);
      final PropertyKey key=StructrApp.getConfiguration().getPropertyKeyForJSONName(entityType,sources[0].toString());
      ctx.raiseError(422,new SemanticErrorToken(type,key,sources[1].toString()));
      break;
    }
case 3:
{
    arrayHasLengthAndAllElementsNotNull(sources,3);
    final PropertyKey key=StructrApp.getConfiguration().getPropertyKeyForJSONName(entityType,sources[0].toString());
    ctx.raiseError(422,new SemanticErrorToken(type,key,sources[1].toString(),sources[2]));
    break;
  }
default :
logParameterError(entity,sources,ctx.isJavaScriptContext());
break;
}
}
 catch (final IllegalArgumentException e) {
logParameterError(entity,sources,ctx.isJavaScriptContext());
return usage(ctx.isJavaScriptContext());
}
return null;
}
