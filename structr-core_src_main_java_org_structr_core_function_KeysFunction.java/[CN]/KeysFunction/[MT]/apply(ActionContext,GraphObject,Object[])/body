{
  try {
    if (sources == null) {
      throw new IllegalArgumentException();
    }
    if (sources.length == 2 && sources[0] != null && sources[0] instanceof GraphObject && sources[1] != null) {
      final Set<String> keys=new LinkedHashSet<>();
      final GraphObject source=(GraphObject)sources[0];
      for (      final PropertyKey key : source.getPropertyKeys(sources[1].toString())) {
        keys.add(key.jsonName());
      }
      return new LinkedList<>(keys);
    }
 else     if (sources.length == 1 && sources[0] != null && sources[0] instanceof GraphObjectMap) {
      return new LinkedList<>(((GraphObjectMap)sources[0]).keySet());
    }
 else     if (sources.length == 1 && sources[0] != null && sources[0] instanceof Map) {
      return new LinkedList<>(((Map)sources[0]).keySet());
    }
 else {
      return null;
    }
  }
 catch (  final IllegalArgumentException e) {
    logParameterError(entity,sources,ctx.isJavaScriptContext());
    return usage(ctx.isJavaScriptContext());
  }
}
