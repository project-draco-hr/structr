{
  if (sources == null || sources.length == 0) {
    return null;
  }
  String sortKey="name";
  if (sources.length > 1 && sources[1] instanceof String) {
    sortKey=(String)sources[1];
  }
  if (sources.length >= 1) {
    if (sources[0] instanceof List) {
      final List list=(List)sources[0];
      final Iterator iterator=list.iterator();
      if (iterator.hasNext()) {
        final Object firstElement=iterator.next();
        if (firstElement instanceof GraphObject) {
          final Class type=firstElement.getClass();
          final PropertyKey key=StructrApp.getConfiguration().getPropertyKeyForJSONName(type,sortKey);
          final boolean descending=sources.length == 3 && sources[2] != null && "true".equals(sources[2].toString());
          if (key != null) {
            List<GraphObject> sortCollection=(List<GraphObject>)list;
            Collections.sort(sortCollection,new GraphObjectComparator(key,descending));
            return sortCollection;
          }
        }
 else         if (firstElement instanceof String) {
          final String[] stringArray=(String[])list.toArray(new String[list.size()]);
          Arrays.sort(stringArray);
          return Arrays.asList(stringArray);
        }
      }
    }
  }
 else {
    logParameterError(entity,sources,ctx.isJavaScriptContext());
  }
  return sources[0];
}
