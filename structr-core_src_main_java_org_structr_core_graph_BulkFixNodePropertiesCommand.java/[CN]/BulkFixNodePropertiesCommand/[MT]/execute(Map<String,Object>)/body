{
  final String propertyName=(String)attributes.get("name");
  final String entityTypeName=(String)attributes.get("type");
  if (entityTypeName != null) {
    final Class type=SchemaHelper.getEntityClassForRawType(entityTypeName);
    if (type != null) {
      Iterator<AbstractNode> nodeIterator=null;
      try (final Tx tx=StructrApp.getInstance().tx()){
        nodeIterator=StructrApp.getInstance(securityContext).nodeQuery(type).getAsList().iterator();
        tx.success();
      }
       if (type != null) {
        logger.info("Trying to fix properties of all {} nodes",type.getSimpleName());
        long nodeCount=bulkGraphOperation(securityContext,nodeIterator,100,"FixNodeProperties",new BulkGraphOperation<AbstractNode>(){
          private void fixProperty(          AbstractNode node,          Property propertyToFix){
            Node databaseNode=node.getNode();
            if (databaseNode.hasProperty(propertyToFix.dbName())) {
              PropertyConverter converter=propertyToFix.databaseConverter(securityContext,node);
              if (converter != null) {
                try {
                  Object value=databaseNode.getProperty(propertyToFix.dbName());
                  converter.revert(value);
                }
 catch (                ClassCastException cce) {
                  String databaseName=propertyToFix.dbName();
                  Object databaseValue=databaseNode.getProperty(databaseName);
                  Object correctedValue=propertyToFix.fixDatabaseProperty(databaseValue);
                  if (databaseValue != null && correctedValue != null) {
                    try {
                      databaseNode.setProperty(databaseName,correctedValue);
                    }
 catch (                    Throwable t) {
                      logger.warn("Unable to fix property {} of {} with UUID {} which is of type {}",new Object[]{propertyToFix.dbName(),type.getSimpleName(),node.getUuid(),databaseValue != null ? databaseValue.getClass() : "null"});
                    }
                  }
                }
catch (                Throwable t) {
                  logger.warn("",t);
                }
              }
            }
          }
          @Override public void handleGraphObject(          SecurityContext securityContext,          AbstractNode node){
            if (propertyName != null) {
              PropertyKey key=StructrApp.getConfiguration().getPropertyKeyForDatabaseName(type,propertyName);
              if (key != null) {
                if (key instanceof Property) {
                  fixProperty(node,(Property)key);
                }
              }
            }
 else {
              for (              PropertyKey key : node.getPropertyKeys(PropertyView.All)) {
                if (key instanceof Property) {
                  fixProperty(node,(Property)key);
                }
              }
            }
          }
        }
);
        logger.info("Fixed {} nodes",nodeCount);
        return;
      }
    }
  }
  logger.info("Unable to determine property and/or entity type to fix.");
}
