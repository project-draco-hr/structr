{
  final String propertyName=(String)attributes.get("name");
  final String entityTypeName=(String)attributes.get("type");
  if (entityTypeName != null) {
    final Class type=SchemaHelper.getEntityClassForRawType(entityTypeName);
    if (type != null) {
      final List<AbstractNode> nodes=StructrApp.getInstance(securityContext).nodeQuery(type).getAsList();
      if (type != null) {
        logger.log(Level.INFO,"Trying to fix properties of {0} {1} nodes",new Object[]{nodes.size(),type.getSimpleName()});
        long nodeCount=bulkGraphOperation(securityContext,nodes,100,"FixNodeProperties",new BulkGraphOperation<AbstractNode>(){
          private void fixProperty(          AbstractNode node,          Property propertyToFix){
            Node databaseNode=node.getNode();
            if (databaseNode.hasProperty(propertyToFix.dbName())) {
              PropertyConverter converter=propertyToFix.databaseConverter(securityContext,node);
              if (converter != null) {
                try {
                  Object value=databaseNode.getProperty(propertyToFix.dbName());
                  converter.revert(value);
                }
 catch (                ClassCastException cce) {
                  String databaseName=propertyToFix.dbName();
                  Object databaseValue=databaseNode.getProperty(databaseName);
                  Object correctedValue=propertyToFix.fixDatabaseProperty(databaseValue);
                  if (databaseValue != null && correctedValue != null) {
                    try {
                      databaseNode.setProperty(databaseName,correctedValue);
                    }
 catch (                    Throwable t) {
                      logger.log(Level.WARNING,"Unable to fix property {0} of {1} with UUID {2} which is of type {3}",new Object[]{propertyToFix.dbName(),type.getSimpleName(),node.getUuid(),databaseValue != null ? databaseValue.getClass() : "null"});
                    }
                  }
                }
catch (                Throwable t) {
                  t.printStackTrace();
                }
              }
            }
          }
          @Override public void handleGraphObject(          SecurityContext securityContext,          AbstractNode node){
            if (propertyName != null) {
              PropertyKey key=StructrApp.getConfiguration().getPropertyKeyForDatabaseName(type,propertyName);
              if (key != null) {
                if (key instanceof Property) {
                  fixProperty(node,(Property)key);
                }
              }
            }
 else {
              for (              PropertyKey key : node.getPropertyKeys(PropertyView.All)) {
                if (key instanceof Property) {
                  fixProperty(node,(Property)key);
                }
              }
            }
          }
          @Override public void handleThrowable(          SecurityContext securityContext,          Throwable t,          AbstractNode currentObject){
            t.printStackTrace();
          }
          @Override public void handleTransactionFailure(          SecurityContext securityContext,          Throwable t){
            t.printStackTrace();
          }
        }
);
        logger.log(Level.INFO,"Fixed {0} nodes",nodeCount);
        return;
      }
    }
  }
  logger.log(Level.INFO,"Unable to determine property and/or entity type to fix.");
}
