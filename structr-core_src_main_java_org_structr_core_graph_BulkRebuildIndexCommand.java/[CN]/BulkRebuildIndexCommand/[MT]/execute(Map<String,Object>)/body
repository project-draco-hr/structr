{
  final String mode=(String)attributes.get("mode");
  final String entityType=(String)attributes.get("type");
  final String relType=(String)attributes.get("relType");
  final GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  final SecurityContext superUserContext=SecurityContext.getSuperUserInstance();
  final NodeFactory nodeFactory=new NodeFactory(superUserContext);
  final RelationshipFactory relFactory=new RelationshipFactory(superUserContext);
  if (mode == null || "nodesOnly".equals(mode)) {
    Iterator<AbstractNode> nodeIterator=null;
    try (final Tx tx=StructrApp.getInstance().tx()){
      nodeIterator=Iterables.filter(new TypePredicate<>(entityType),Iterables.map(nodeFactory,Iterables.filter(new StructrAndSpatialPredicate(true,false,false),GlobalGraphOperations.at(graphDb).getAllNodes()))).iterator();
      tx.success();
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Exception while creating all nodes iterator.");
      fex.printStackTrace();
    }
    if (entityType == null) {
      logger.log(Level.INFO,"Node type not set or no entity class found. Starting (re-)indexing all nodes");
    }
 else {
      logger.log(Level.INFO,"Starting (re-)indexing all nodes of type {0}",entityType);
    }
    long count=bulkGraphOperation(securityContext,nodeIterator,100,"RebuildNodeIndex",new BulkGraphOperation<AbstractNode>(){
      @Override public void handleGraphObject(      SecurityContext securityContext,      AbstractNode node){
        node.updateInIndex();
      }
      @Override public void handleThrowable(      SecurityContext securityContext,      Throwable t,      AbstractNode node){
        logger.log(Level.WARNING,"Unable to index node {0}: {1}",new Object[]{node,t.getMessage()});
      }
      @Override public void handleTransactionFailure(      SecurityContext securityContext,      Throwable t){
        logger.log(Level.WARNING,"Unable to index node: {0}",t.getMessage());
      }
      @Override public Predicate<Long> getCondition(){
        return null;
      }
    }
);
    logger.log(Level.INFO,"Done with (re-)indexing {0} nodes",count);
  }
  if (mode == null || "relsOnly".equals(mode)) {
    Iterator<AbstractRelationship> relIterator=null;
    long count=0;
    try (final Tx tx=StructrApp.getInstance().tx()){
      relIterator=Iterables.filter(new TypePredicate<>(relType),Iterables.map(relFactory,Iterables.filter(new StructrAndSpatialPredicate(true,false,false),GlobalGraphOperations.at(graphDb).getAllRelationships()))).iterator();
      ;
      tx.success();
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Exception while creating all nodes iterator.");
      fex.printStackTrace();
    }
    if (relType == null) {
      logger.log(Level.INFO,"Relationship type not set, starting (re-)indexing all relationships");
    }
 else {
      logger.log(Level.INFO,"Starting (re-)indexing all relationships of type {0}",new Object[]{relType});
    }
    count=bulkGraphOperation(securityContext,relIterator,100,"RebuildRelIndex",new BulkGraphOperation<AbstractRelationship>(){
      @Override public void handleGraphObject(      SecurityContext securityContext,      AbstractRelationship rel){
        rel.updateInIndex();
      }
      @Override public void handleThrowable(      SecurityContext securityContext,      Throwable t,      AbstractRelationship rel){
        logger.log(Level.WARNING,"Unable to index relationship {0}: {1}",new Object[]{rel,t.getMessage()});
      }
      @Override public void handleTransactionFailure(      SecurityContext securityContext,      Throwable t){
        logger.log(Level.WARNING,"Unable to index relationship: {0}",t.getMessage());
      }
      @Override public Predicate<Long> getCondition(){
        return null;
      }
    }
);
    logger.log(Level.INFO,"Done with (re-)indexing {0} relationships",count);
  }
}
