{
  final DatabaseService graphDb=(DatabaseService)arguments.get("graphDb");
  final RelationshipFactory relationshipFactory=new RelationshipFactory(securityContext);
  if (graphDb != null) {
    Iterator<AbstractRelationship> relIterator=null;
    final String typeName="type";
    if (properties.containsKey(typeName)) {
      try (final Tx tx=StructrApp.getInstance().tx()){
        relIterator=StructrApp.getInstance(securityContext).relationshipQuery(SchemaHelper.getEntityClassForRawType(typeName)).getAsList().iterator();
        tx.success();
      }
       properties.remove(typeName);
    }
 else {
      try (final Tx tx=StructrApp.getInstance().tx()){
        relIterator=Iterables.map(relationshipFactory,graphDb.getAllRelationships()).iterator();
        tx.success();
      }
     }
    final long count=bulkGraphOperation(securityContext,relIterator,1000,"SetRelationshipProperties",new BulkGraphOperation<AbstractRelationship>(){
      @Override public void handleGraphObject(      SecurityContext securityContext,      AbstractRelationship rel){
        if (rel.getProperty(AbstractRelationship.id) != null) {
          for (          Entry entry : properties.entrySet()) {
            String key=(String)entry.getKey();
            Object val=entry.getValue();
            PropertyKey propertyKey=StructrApp.getConfiguration().getPropertyKeyForDatabaseName(rel.getClass(),key);
            if (propertyKey != null) {
              try {
                rel.setProperty(propertyKey,val);
              }
 catch (              FrameworkException fex) {
                logger.warn("Unable to set relationship property {} of relationship {} to {}: {}",new Object[]{propertyKey,rel.getUuid(),val,fex.getMessage()});
              }
            }
          }
        }
      }
      @Override public void handleThrowable(      SecurityContext securityContext,      Throwable t,      AbstractRelationship rel){
        logger.warn("Unable to set properties of relationship {}: {}",new Object[]{rel.getUuid(),t.getMessage()});
      }
      @Override public void handleTransactionFailure(      SecurityContext securityContext,      Throwable t){
        logger.warn("Unable to set relationship properties: {}",t.getMessage());
      }
    }
);
    logger.info("Finished setting properties on {} relationships",count);
  }
}
