{
  final String nodeType=(String)attributes.get("type");
  final String relType=(String)attributes.get("relType");
  final Boolean allNodes=(Boolean)attributes.get("allNodes");
  final Boolean allRels=(Boolean)attributes.get("allRels");
  final DatabaseService graphDb=(DatabaseService)arguments.get("graphDb");
  if (nodeType != null || Boolean.TRUE.equals(allNodes)) {
    Iterator<Node> nodeIterator=null;
    try (final Tx tx=StructrApp.getInstance().tx()){
      nodeIterator=Iterables.filter(new StructrAndSpatialPredicate(false,false,true),graphDb.getAllNodes()).iterator();
      tx.success();
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Exception while creating all nodes iterator.");
      fex.printStackTrace();
    }
    logger.log(Level.INFO,"Start setting UUID on all nodes of type {0}",new Object[]{nodeType});
    final long count=bulkGraphOperation(securityContext,nodeIterator,1000,"SetNodeProperties",new BulkGraphOperation<Node>(){
      @Override public void handleGraphObject(      final SecurityContext securityContext,      final Node node){
        node.setProperty("id",NodeServiceCommand.getNextUuid());
        if (nodeType != null && !node.hasProperty("type")) {
          node.setProperty("type",nodeType);
        }
      }
      @Override public void handleThrowable(      SecurityContext securityContext,      Throwable t,      Node node){
        logger.log(Level.WARNING,"Unable to set UUID of node {0}: {1}",new Object[]{node,t.getMessage()});
      }
      @Override public void handleTransactionFailure(      SecurityContext securityContext,      Throwable t){
        logger.log(Level.WARNING,"Unable to set UUID on node: {0}",t.getMessage());
      }
    }
);
    logger.log(Level.INFO,"Done with setting UUID on {0} nodes",count);
    return;
  }
  if (relType != null || Boolean.TRUE.equals(allRels)) {
    Iterator<Relationship> relIterator=null;
    try (final Tx tx=StructrApp.getInstance().tx()){
      relIterator=Iterables.filter(new StructrAndSpatialPredicate(false,false,true),graphDb.getAllRelationships()).iterator();
      tx.success();
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Exception while creating all nodes iterator.");
      fex.printStackTrace();
    }
    logger.log(Level.INFO,"Start setting UUID on all rels of type {0}",new Object[]{relType});
    final long count=bulkGraphOperation(securityContext,relIterator,1000,"SetRelationshipUuid",new BulkGraphOperation<Relationship>(){
      @Override public void handleGraphObject(      SecurityContext securityContext,      Relationship rel){
        rel.setProperty("id",NodeServiceCommand.getNextUuid());
      }
      @Override public void handleThrowable(      SecurityContext securityContext,      Throwable t,      Relationship rel){
        logger.log(Level.WARNING,"Unable to set UUID of relationship {0}: {1}",new Object[]{rel,t.getMessage()});
      }
      @Override public void handleTransactionFailure(      SecurityContext securityContext,      Throwable t){
        logger.log(Level.WARNING,"Unable to set UUID on relationship: {0}",t.getMessage());
      }
    }
);
    logger.log(Level.INFO,"Done with setting UUID on {0} relationships",count);
    return;
  }
  logger.log(Level.INFO,"Unable to determine entity type to set UUID.");
}
