{
  final GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  final NodeFactory nodeFactory=new NodeFactory(securityContext);
  if (graphDb != null) {
    final Result<AbstractNode> result=nodeFactory.instantiateAll(GlobalGraphOperations.at(graphDb).getAllNodes());
    long deletedNodes=bulkGraphOperation(securityContext,result.getResults(),1000,"ClearDatabase",new BulkGraphOperation<AbstractNode>(){
      @Override public void handleGraphObject(      SecurityContext securityContext,      AbstractNode node){
        if (node.getProperty(GraphObject.id) != null) {
          try {
            StructrApp.getInstance(securityContext).delete(node);
          }
 catch (          FrameworkException fex) {
            logger.log(Level.WARNING,"Unable to delete node {0}: {1}",new Object[]{node.getUuid(),fex.getMessage()});
          }
        }
      }
      @Override public void handleThrowable(      SecurityContext securityContext,      Throwable t,      AbstractNode node){
        logger.log(Level.WARNING,"Unable to delete node {0}: {1}",new Object[]{node.getUuid(),t.getMessage()});
      }
      @Override public void handleTransactionFailure(      SecurityContext securityContext,      Throwable t){
        logger.log(Level.WARNING,"Unable to clear database: {0}",t.getMessage());
      }
    }
);
    logger.log(Level.INFO,"Finished deleting {0} nodes",deletedNodes);
  }
}
