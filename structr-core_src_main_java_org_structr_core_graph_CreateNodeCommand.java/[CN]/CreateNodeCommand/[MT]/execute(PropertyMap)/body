{
  final DatabaseService graphDb=(DatabaseService)arguments.get("graphDb");
  final Principal user=securityContext.getUser(false);
  T node=null;
  if (graphDb != null) {
    final NodeFactory<T> nodeFactory=new NodeFactory<>(securityContext);
    final PropertyMap properties=new PropertyMap(attributes);
    final Object typeObject=properties.get(AbstractNode.type);
    final Class nodeType=getTypeOrGeneric(typeObject);
    final Set<String> labels=TypeProperty.getLabelsForType(nodeType);
    final CreationContainer tmp=new CreationContainer();
    final Date now=new Date();
    final boolean isCreation=true;
    String uuid=properties.get(GraphObject.id);
    if (uuid == null) {
      uuid=getNextUuid();
    }
    GraphObject.id.setProperty(securityContext,tmp,uuid);
    GraphObject.type.setProperty(securityContext,tmp,nodeType.getSimpleName());
    AbstractNode.createdDate.setProperty(securityContext,tmp,now);
    AbstractNode.lastModifiedDate.setProperty(securityContext,tmp,now);
    if (user != null) {
      final String userId=user.getProperty(GraphObject.id);
      AbstractNode.createdBy.setProperty(securityContext,tmp,userId);
      AbstractNode.lastModifiedBy.setProperty(securityContext,tmp,userId);
    }
    properties.remove(GraphObject.id);
    properties.remove(AbstractNode.type);
    properties.remove(AbstractNode.lastModifiedDate);
    properties.remove(AbstractNode.lastModifiedBy);
    properties.remove(AbstractNode.createdDate);
    properties.remove(AbstractNode.createdBy);
    node=(T)nodeFactory.instantiateWithType(createNode(graphDb,user,nodeType,labels,tmp.getData()),nodeType,null,isCreation);
    if (node != null) {
      TransactionCommand.nodeCreated(user,node);
      for (      final Entry<PropertyKey,Object> attr : properties.entrySet()) {
        final Object value=attr.getValue();
        final PropertyKey key=attr.getKey();
        if (key.isSystemInternal()) {
          node.unlockSystemPropertiesOnce();
        }
        node.setProperty(key,value);
      }
      properties.clear();
      node.addToIndex();
    }
  }
  if (node != null) {
    node.onNodeCreation();
    final Set<Transformation<GraphObject>> transformations=StructrApp.getConfiguration().getEntityCreationTransformations(node.getClass());
    for (    Transformation<GraphObject> transformation : transformations) {
      transformation.apply(securityContext,node);
    }
    if (transformations.isEmpty()) {
      logger.log(Level.FINE,"No entity creation transformation for {0}",node.getClass());
    }
  }
  return node;
}
