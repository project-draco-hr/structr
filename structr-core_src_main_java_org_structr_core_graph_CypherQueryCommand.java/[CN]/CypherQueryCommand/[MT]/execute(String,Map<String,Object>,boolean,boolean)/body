{
  DatabaseService graphDb=(DatabaseService)arguments.get("graphDb");
  RelationshipFactory relFactory=new RelationshipFactory(securityContext);
  NodeFactory nodeFactory=new NodeFactory(securityContext);
  List<GraphObject> resultList=new LinkedList<>();
  NativeResult result=null;
  if (parameters != null) {
    result=graphDb.execute(query,parameters);
  }
 else {
    result=graphDb.execute(query);
  }
  while (result.hasNext()) {
    final Map<String,Object> row=result.next();
    for (    Entry<String,Object> entry : row.entrySet()) {
      String key=entry.getKey();
      Object value=entry.getValue();
      final Object obj=handleObject(nodeFactory,relFactory,key,value,includeHiddenAndDeleted,publicOnly,0);
      if (obj instanceof GraphObject) {
        resultList.add((GraphObject)obj);
      }
 else       if (obj instanceof Collection) {
        for (        final Object item : ((Collection)obj)) {
          if (item instanceof GraphObject) {
            resultList.add((GraphObject)item);
          }
 else {
            logger.log(Level.WARNING,"Unable to handle Cypher query result object of type {0}, ignoring.",item.getClass().getName());
          }
        }
      }
 else {
        logger.log(Level.WARNING,"Unable to handle Cypher query result object of type {0}, ignoring.",obj.getClass().getName());
      }
    }
  }
  return resultList;
}
