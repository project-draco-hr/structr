{
  boolean valid=true;
  if ((status & STATE_PROPAGATED_MODIFICATION) == STATE_PROPAGATED_MODIFICATION && object instanceof AbstractNode) {
    AbstractNode srcNode=(AbstractNode)object;
    for (    AbstractNode node : srcNode.getNodesForModificationPropagation()) {
      modificationQueue.propagatedModification(node);
    }
  }
switch (status & 0x000f) {
case 15:
case 14:
case 13:
case 12:
case 11:
case 10:
case 9:
case 8:
    break;
case 7:
  break;
case 6:
valid&=object.beforeCreation(securityContext,errorBuffer);
break;
case 5:
break;
case 4:
valid&=object.beforeCreation(securityContext,errorBuffer);
break;
case 3:
valid&=object.beforeDeletion(securityContext,errorBuffer,removedProperties);
break;
case 2:
valid&=object.beforeModification(securityContext,errorBuffer);
break;
case 1:
valid&=object.beforeDeletion(securityContext,errorBuffer,removedProperties);
break;
case 0:
break;
default :
break;
}
modified=false;
return valid;
}
