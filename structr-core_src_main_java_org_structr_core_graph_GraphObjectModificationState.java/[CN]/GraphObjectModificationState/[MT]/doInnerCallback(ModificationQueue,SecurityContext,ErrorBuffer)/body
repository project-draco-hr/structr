{
  boolean valid=true;
  if ((status & STATE_PROPAGATING_MODIFICATION) == STATE_PROPAGATING_MODIFICATION && object instanceof AbstractNode) {
    Set<AbstractNode> nodes=((AbstractNode)object).getNodesForModificationPropagation();
    if (nodes != null) {
      for (      AbstractNode node : nodes) {
        modificationQueue.propagatedModification(node);
      }
    }
  }
switch (status & 0x000f) {
case 15:
case 14:
case 13:
case 12:
case 11:
case 10:
case 9:
case 8:
    break;
case 7:
  break;
case 6:
valid&=object.onCreation(securityContext,errorBuffer);
break;
case 5:
break;
case 4:
valid&=object.onCreation(securityContext,errorBuffer);
break;
case 3:
valid&=object.onDeletion(securityContext,errorBuffer,removedProperties);
break;
case 2:
valid&=object.onModification(securityContext,errorBuffer,modificationQueue);
break;
case 1:
valid&=object.onDeletion(securityContext,errorBuffer,removedProperties);
break;
case 0:
break;
default :
break;
}
modified=false;
return valid;
}
