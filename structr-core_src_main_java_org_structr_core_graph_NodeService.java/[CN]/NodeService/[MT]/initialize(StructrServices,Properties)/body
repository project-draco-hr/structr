{
  final String databaseDriver=config.getProperty(Structr.DATABASE_DRIVER,"org.structr.bolt.BoltDatabaseService");
  graphDb=(DatabaseService)Class.forName(databaseDriver).newInstance();
  if (graphDb != null) {
    graphDb.initialize(config);
    filesPath=config.getProperty(Services.FILES_PATH);
    File files=new File(filesPath);
    if (!files.exists()) {
      files.mkdir();
    }
    logger.info("Database ready.");
    try (final Transaction tx=graphDb.beginTx()){
      nodeIndex=graphDb.nodeIndex();
      relIndex=graphDb.relationshipIndex();
      tx.success();
    }
 catch (    Throwable t) {
      logger.warn("Error while initializing indexes.",t);
    }
    isInitialized=true;
    final boolean firstInitialization=graphDb.getGlobalProperties().getProperty("initialized") == null;
    if (graphDb.needsIndexRebuild() || firstInitialization) {
      logger.info("Scheduling index rebuild to happen after startup..");
      services.registerInitializationCallback(new InitializationCallback(){
        @Override public void initializationDone(){
          Services.getInstance().command(SecurityContext.getSuperUserInstance(),BulkRebuildIndexCommand.class).execute(Collections.EMPTY_MAP);
        }
        @Override public int priority(){
          return 10;
        }
      }
);
      services.registerInitializationCallback(new InitializationCallback(){
        @Override public void initializationDone(){
          Services.getInstance().command(SecurityContext.getSuperUserInstance(),BulkCreateLabelsCommand.class).execute(Collections.EMPTY_MAP);
          graphDb.getGlobalProperties().setProperty("initialized",true);
        }
        @Override public int priority(){
          return 20;
        }
      }
);
    }
  }
}
