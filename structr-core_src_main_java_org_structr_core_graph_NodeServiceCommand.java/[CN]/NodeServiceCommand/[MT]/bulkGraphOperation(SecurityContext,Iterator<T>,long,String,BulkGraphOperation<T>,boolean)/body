{
  final org.neo4j.helpers.Predicate<Long> condition=operation.getCondition();
  final App app=StructrApp.getInstance(securityContext);
  final AtomicLong objectCount=operation.getCounter();
  boolean active=true;
  while (active) {
    active=false;
    try (final Tx tx=app.tx()){
      while (iterator.hasNext() && (condition == null || condition.accept(objectCount.get()))) {
        T node=iterator.next();
        active=true;
        try {
          operation.handleGraphObject(securityContext,node);
        }
 catch (        Throwable t) {
          operation.handleThrowable(securityContext,t,node);
        }
        if ((objectCount.incrementAndGet() % commitCount) == 0) {
          break;
        }
      }
      tx.success();
    }
 catch (    Throwable t) {
      operation.handleTransactionFailure(securityContext,t);
    }
    if (description != null) {
      logger.log(Level.INFO,"{0}: {1} objects processed",new Object[]{description,objectCount.get()});
    }
  }
}
