{
  final String nestedPath=path + dir.getName() + "/";
  final ZipEntry dirEntry=new ZipEntry(nestedPath);
  zos.putNextEntry(dirEntry);
  final File[] contents=dir.listFiles();
  if (contents != null) {
    for (    File file : contents) {
      if (file.isDirectory()) {
        exportDirectory(zos,file,nestedPath,filesToInclude);
      }
 else {
        final String fileName=file.getName();
        final String relativePath=nestedPath + fileName;
        boolean includeFile=true;
        if (filesToInclude != null) {
          includeFile=false;
          if (filesToInclude.contains(fileName)) {
            includeFile=true;
          }
        }
        if (includeFile) {
          ZipEntry fileEntry=new ZipEntry(relativePath);
          fileEntry.setTime(file.lastModified());
          zos.putNextEntry(fileEntry);
          FileInputStream fis=new FileInputStream(file);
          IOUtils.copy(fis,zos);
          fis.close();
          zos.flush();
          zos.closeEntry();
        }
      }
    }
  }
  zos.closeEntry();
}
