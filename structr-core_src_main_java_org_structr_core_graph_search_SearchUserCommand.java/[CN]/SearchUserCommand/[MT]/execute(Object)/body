{
  final NodeFactory nodeFactory=new NodeFactory(securityContext);
switch (parameters.length) {
case 1:
{
      final Index<Node> index=getIndexFromArguments(NodeIndex.user,arguments);
      if (parameters[0] instanceof String) {
        final String userName=(String)parameters[0];
        for (        final Node n : index.get(AbstractNode.name.dbName(),userName)) {
          final AbstractNode s=nodeFactory.instantiate(n);
          if (s.getType().equals(Principal.class.getSimpleName())) {
            return s;
          }
        }
      }
    }
  break;
case 3:
{
  final String userNickName=(String)parameters[0];
  final PropertyKey key=(PropertyKey)parameters[1];
  final NodeIndex idx=(NodeIndex)parameters[2];
  final Index<Node> index=getIndexFromArguments(idx,arguments);
  IndexHits<Node> indexHits=null;
synchronized (index) {
    indexHits=index.query(key.dbName(),"\"" + userNickName + "\"");
  }
  try {
    for (    final Node n : indexHits) {
      final Object u=nodeFactory.instantiate(n);
      if (u != null) {
        return u;
      }
    }
  }
  finally {
    indexHits.close();
  }
}
break;
default :
break;
}
return null;
}
