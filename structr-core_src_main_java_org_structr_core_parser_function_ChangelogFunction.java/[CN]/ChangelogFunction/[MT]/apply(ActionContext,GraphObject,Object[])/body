{
  if (arrayHasMinLengthAndMaxLengthAndAllElementsNotNull(sources,1,2)) {
    final SecurityContext securityContext=SecurityContext.getSuperUserInstance();
    GraphObject dataObject;
    if (sources[0] instanceof GraphObject) {
      dataObject=(GraphObject)sources[0];
    }
 else {
      return usage(ctx.isJavaScriptContext());
    }
    final List list=new ArrayList();
    final String[] entries=dataObject.getProperty(GraphObject.structrChangeLog).split("\n");
    if (entries.length > 0) {
      final boolean resolveTargets=(sources.length >= 2 && Boolean.TRUE.equals(sources[1]));
      final JsonParser parser=new JsonParser();
      for (      String entry : entries) {
        final JsonObject jsonObj=parser.parse(entry).getAsJsonObject();
        final String verb=jsonObj.get("verb").getAsString();
        final TreeMap<String,Object> obj=new TreeMap<>();
        obj.put("verb",verb);
        obj.put("time",jsonObj.get("time").getAsLong());
        obj.put("userId",jsonObj.get("userId").getAsString());
        obj.put("userName",jsonObj.get("userName").getAsString());
        if (verb.equals("create") || verb.equals("delete")) {
          obj.put("target",jsonObj.get("target").getAsString());
          if (resolveTargets) {
            obj.put("targetObj",StructrApp.getInstance(securityContext).get(jsonObj.get("target").getAsString()));
          }
          list.add(obj);
        }
 else         if (verb.equals("link") || verb.equals("unlink")) {
          obj.put("rel",jsonObj.get("rel").getAsString());
          obj.put("target",jsonObj.get("target").getAsString());
          if (resolveTargets) {
            obj.put("targetObj",StructrApp.getInstance(securityContext).get(jsonObj.get("target").getAsString()));
          }
          list.add(obj);
        }
 else         if (verb.equals("change")) {
          obj.put("key",jsonObj.get("key").getAsString());
          final JsonElement prev=jsonObj.get("prev");
          obj.put("prev",(prev.isJsonNull() ? null : prev.getAsString()));
          final JsonElement val=jsonObj.get("key");
          obj.put("val",(val.isJsonNull() ? null : val.getAsString()));
          list.add(obj);
        }
 else {
          logger.log(Level.WARNING,"Unknown verb in changelog: '{0}'",(verb == null ? "null" : verb));
        }
      }
    }
    return list;
  }
 else {
    return usage(ctx.isJavaScriptContext());
  }
}
