{
  if (sources != null) {
    final SecurityContext securityContext=entity != null ? entity.getSecurityContext() : ctx.getSecurityContext();
    final ConfigurationProvider config=StructrApp.getConfiguration();
    PropertyMap propertyMap;
    Class type=null;
    if (sources.length >= 1 && sources[0] != null) {
      type=config.getNodeEntityClass(sources[0].toString());
    }
    if (type == null) {
      throw new FrameworkException(422,"Unknown type '" + sources[0].toString() + "' in create() method!");
    }
    if (sources.length == 2 && sources[1] instanceof Map) {
      propertyMap=PropertyMap.inputTypeToJavaType(securityContext,type,(Map)sources[1]);
    }
 else {
      propertyMap=new PropertyMap();
      final Integer parameter_count=sources.length;
      if (parameter_count % 2 == 0) {
        throw new FrameworkException(400,"Invalid number of parameters: " + parameter_count + ". Should be uneven: "+ (ctx.isJavaScriptContext() ? ERROR_MESSAGE_CREATE_JS : ERROR_MESSAGE_CREATE));
      }
      for (Integer c=1; c < parameter_count; c+=2) {
        final PropertyKey key=config.getPropertyKeyForJSONName(type,sources[c].toString());
        if (key != null) {
          final PropertyConverter inputConverter=key.inputConverter(securityContext);
          Object value=sources[c + 1];
          if (inputConverter != null) {
            value=inputConverter.convert(value);
          }
          propertyMap.put(key,value);
        }
      }
    }
    return StructrApp.getInstance(securityContext).create(type,propertyMap);
  }
  return "";
}
