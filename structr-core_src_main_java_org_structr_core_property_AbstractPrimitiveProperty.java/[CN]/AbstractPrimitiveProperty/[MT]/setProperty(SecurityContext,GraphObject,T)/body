{
  PropertyConverter converter=databaseConverter(securityContext,obj);
  final Object convertedValue;
  if (converter != null) {
    convertedValue=converter.convert(value);
  }
 else {
    convertedValue=value;
  }
  final PropertyContainer propertyContainer=obj.getPropertyContainer();
  if (propertyContainer != null) {
    if (!TransactionCommand.inTransaction()) {
      logger.log(Level.SEVERE,"setProperty outside of transaction");
      return;
    }
    try {
      if (!unvalidated) {
        if (obj instanceof AbstractNode) {
          TransactionCommand.nodeModified((AbstractNode)obj,AbstractPrimitiveProperty.this,propertyContainer.hasProperty(dbName()) ? propertyContainer.getProperty(dbName()) : null);
        }
 else         if (obj instanceof AbstractRelationship) {
          TransactionCommand.relationshipModified((AbstractRelationship)obj,AbstractPrimitiveProperty.this,propertyContainer.hasProperty(dbName()) ? propertyContainer.getProperty(dbName()) : null);
        }
      }
      if (convertedValue == null) {
        propertyContainer.removeProperty(dbName());
      }
 else {
        if (!AbstractPrimitiveProperty.this.equals(AbstractNode.lastModifiedDate)) {
          propertyContainer.setProperty(dbName(),convertedValue);
          propertyContainer.setProperty(AbstractNode.lastModifiedDate.dbName(),System.currentTimeMillis());
        }
 else {
          logger.log(Level.FINE,"Tried to set lastModifiedDate explicitly (action was denied)");
        }
      }
      if (isIndexedProperty()) {
        if (!isPassivelyIndexedProperty()) {
          index(obj,convertedValue);
        }
      }
    }
 catch (    Throwable t) {
      t.printStackTrace();
    }
 finally {
    }
  }
}
