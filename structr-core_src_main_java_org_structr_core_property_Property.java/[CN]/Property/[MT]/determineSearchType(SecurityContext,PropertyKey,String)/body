{
  if (StringUtils.startsWith(requestParameter,"[") && StringUtils.endsWith(requestParameter,"]")) {
    Matcher matcher=rangeQueryPattern.matcher(requestParameter);
    if (matcher.matches()) {
      if (matcher.groupCount() == 2) {
        String rangeStart=matcher.group(1);
        String rangeEnd=matcher.group(2);
        PropertyConverter inputConverter=key.inputConverter(securityContext);
        Object rangeStartConverted=rangeStart;
        Object rangeEndConverted=rangeEnd;
        if (inputConverter != null) {
          rangeStartConverted=inputConverter.convert(rangeStartConverted);
          rangeEndConverted=inputConverter.convert(rangeEndConverted);
        }
        return new RangeSearchAttribute(key,rangeStartConverted,rangeEndConverted,Occur.MUST);
      }
      return null;
    }
  }
  if (requestParameter.contains(",") && requestParameter.contains(";")) {
    throw new FrameworkException(422,"Mixing of AND and OR not allowed in request parameters");
  }
  if (requestParameter.contains(";")) {
    return Search.orExactProperty(securityContext,key,extractSearchableAttribute(securityContext,requestParameter));
  }
 else {
    return Search.andExactProperty(securityContext,key,extractSearchableAttribute(securityContext,requestParameter));
  }
}
