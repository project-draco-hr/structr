{
  super.setProperty(securityContext,obj,value);
  RelationshipFactory.invalidateCache();
  NodeFactory.invalidateCache();
  if (obj instanceof NodeInterface) {
    final Class type=StructrApp.getConfiguration().getNodeEntityClass(value);
    final DatabaseService db=StructrApp.getInstance().getDatabaseService();
    final Set<Label> intersection=new LinkedHashSet<>();
    final Set<Label> toRemove=new LinkedHashSet<>();
    final Set<Label> toAdd=new LinkedHashSet<>();
    final Node dbNode=((NodeInterface)obj).getNode();
    for (    final Label label : dbNode.getLabels()) {
      toRemove.add(label);
    }
    for (    final Class supertype : SearchCommand.typeAndAllSupertypes(type)) {
      final String supertypeName=supertype.getName();
      if (supertypeName.startsWith("org.structr.") || supertypeName.startsWith("com.structr.")) {
        toAdd.add(db.forName(Label.class,supertype.getSimpleName()));
      }
    }
    intersection.addAll(toAdd);
    intersection.retainAll(toRemove);
    toAdd.removeAll(intersection);
    toRemove.removeAll(intersection);
    for (    final Label remove : toRemove) {
      dbNode.removeLabel(remove);
    }
    for (    final Label add : toAdd) {
      dbNode.addLabel(add);
    }
  }
  return null;
}
