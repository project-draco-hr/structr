{
  final String entityName=entity != null ? entity.getProperty(AbstractNode.name) : null;
  final String entityDescription=entity != null ? (StringUtils.isNotBlank(entityName) ? "\"" + entityName + "\":" : "") + entity.getUuid() : "anonymous";
  final Context scriptingContext=Context.enter();
  try {
    scriptingContext.setLanguageVersion(Context.VERSION_1_8);
    Scriptable scope=scriptingContext.initStandardObjects();
    final StructrScriptable scriptable=new StructrScriptable(actionContext,entity,scriptingContext);
    scriptable.setParentScope(scope);
    scope.put("Structr",scope,scriptable);
    actionContext.clear();
    Object extractedValue=scriptingContext.evaluateString(scope,embedInFunction(actionContext,script),"script source [" + entityDescription + "], line ",1,null);
    if (scriptable.hasException()) {
      throw scriptable.getException();
    }
    final String output=actionContext.getOutput();
    if (output != null && !output.isEmpty()) {
      extractedValue=output;
    }
    if (extractedValue == null || extractedValue == Undefined.instance) {
      extractedValue=scriptable.unwrap(scope.get("_structrMainResult",scope));
    }
    if (extractedValue == null || extractedValue == Undefined.instance) {
      extractedValue="";
    }
    return extractedValue;
  }
 catch (  final FrameworkException fex) {
    throw fex;
  }
catch (  final Throwable t) {
    t.printStackTrace();
    throw new FrameworkException(422,t.getMessage());
  }
 finally {
    Context.exit();
  }
}
