{
  if (rawValue == null) {
    return null;
  }
  String value;
  if (rawValue instanceof String) {
    value=(String)rawValue;
    if (!actionContext.returnRawValue()) {
      final Map<String,String> replacements=new LinkedHashMap<>();
      for (      final String expression : extractScripts(value)) {
        final Object extractedValue=evaluate(actionContext,entity,expression);
        String partValue=extractedValue != null ? formatToDefaultDateOrString(extractedValue) : "";
        if (partValue != null) {
          replacements.put(expression,partValue);
        }
 else {
          if (!value.equals(expression)) {
            replacements.put(expression,"");
          }
        }
      }
      for (      final Map.Entry<String,String> entry : replacements.entrySet()) {
        final String group=entry.getKey();
        final String replacement=entry.getValue();
        value=value.replace(group,replacement);
      }
    }
  }
 else   if (rawValue instanceof Boolean) {
    value=Boolean.toString((Boolean)rawValue);
  }
 else {
    value=rawValue.toString();
  }
  if (Functions.NULL_STRING.equals(value)) {
    return null;
  }
  return value;
}
