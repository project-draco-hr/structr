{
  if (value == null) {
    errorBuffer.add(new EmptyPropertyToken(object.getType(),key));
    return false;
  }
  if (key != null) {
    List<? extends GraphObject> result=null;
    boolean nodeExists=false;
    try {
      if (key instanceof UuidProperty) {
        long t0=System.nanoTime();
        result=Collections.EMPTY_LIST;
        GraphObject obj=StructrApp.getInstance().get(value.toString());
        if (obj != null) {
          result=Arrays.asList(obj);
        }
        long t1=System.nanoTime() - t0;
        logger.log(Level.FINE,"get(): {0} ns, {1} results",new Object[]{t1,result.size()});
      }
 else {
        result=Collections.EMPTY_LIST;
        if (object instanceof NodeInterface) {
          long t0=System.nanoTime();
          result=StructrApp.getInstance().nodeQuery().and(key,value).getAsList();
          long t1=System.nanoTime() - t0;
          logger.log(Level.FINE,"instanceOf NodeInterface => nodeQuery: {0} ns, {1} result(s)",new Object[]{t1,result.size()});
        }
 else         if (object instanceof RelationshipInterface) {
          long t0=System.nanoTime();
          result=StructrApp.getInstance().relationshipQuery().and(key,value).getAsList();
          long t1=System.nanoTime() - t0;
          logger.log(Level.FINE,"instanceOf RelationshipInterface => nodeQuery: {0} ns, {1} result(s)",new Object[]{t1,result.size()});
        }
 else {
          logger.log(Level.SEVERE,"GraphObject is neither NodeInterface nor RelationshipInterface");
        }
      }
      nodeExists=!result.isEmpty();
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Unable to fetch list of nodes for uniqueness check",fex);
    }
    if (nodeExists) {
      for (      final GraphObject foundNode : result) {
        if (foundNode.getId() != object.getId()) {
          errorBuffer.add(new UniqueToken(object.getType(),key,foundNode.getUuid()));
          return false;
        }
      }
    }
  }
  return true;
}
