{
  String[] fields=expression.split("[ \\t]+");
  if (fields.length == CronService.NUM_FIELDS) {
    CronEntry cronEntry=new CronEntry(task);
    String secondsField=fields[0];
    String minutesField=fields[1];
    String hoursField=fields[2];
    String daysField=fields[3];
    String monthsField=fields[4];
    String weeksField=fields[5];
    try {
      CronField seconds=parseField(secondsField,0,59);
      cronEntry.setSeconds(seconds);
    }
 catch (    Throwable t) {
      logger.warn("Invalid cron expression for task {}, field 'seconds': {}",new Object[]{task,t.getMessage()});
    }
    try {
      CronField minutes=parseField(minutesField,0,59);
      cronEntry.setMinutes(minutes);
    }
 catch (    Throwable t) {
      logger.warn("Invalid cron expression for task {}, field 'minutes': {}",new Object[]{task,t.getMessage()});
    }
    try {
      CronField hours=parseField(hoursField,0,23);
      cronEntry.setHours(hours);
    }
 catch (    Throwable t) {
      logger.warn("Invalid cron expression for task {}, field 'hours': {}",new Object[]{task,t.getMessage()});
    }
    try {
      CronField days=parseField(daysField,1,31);
      cronEntry.setDays(days);
    }
 catch (    Throwable t) {
      logger.warn("Invalid cron expression for task {}, field 'days': {}",new Object[]{task,t.getMessage()});
    }
    try {
      CronField weeks=parseField(weeksField,0,6);
      cronEntry.setWeeks(weeks);
    }
 catch (    Throwable t) {
      logger.warn("Invalid cron expression for task {}, field 'weeks': {}",new Object[]{task,t.getMessage()});
    }
    try {
      CronField months=parseField(monthsField,1,12);
      cronEntry.setMonths(months);
    }
 catch (    Throwable t) {
      logger.warn("Invalid cron expression for task {}, field 'months': {}",new Object[]{task,t.getMessage()});
    }
    return cronEntry;
  }
 else {
    logger.warn("Invalid cron expression for task {}: invalid number of fields (must be {}).",new Object[]{task,CronService.NUM_FIELDS});
  }
  return null;
}
