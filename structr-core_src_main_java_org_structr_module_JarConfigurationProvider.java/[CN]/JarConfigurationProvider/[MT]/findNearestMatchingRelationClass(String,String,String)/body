{
  Map<Integer,Class> candidates=new TreeMap<>();
  Class sourceType=getNodeEntityClass(sourceTypeName);
  Class targetType=getNodeEntityClass(targetTypeName);
  for (  final Class candidate : getRelationClassCanditatesForRelType(relType)) {
    Relation rel=instantiate(candidate);
    int distance=getDistance(rel.getSourceType(),sourceType,-1) + getDistance(rel.getTargetType(),targetType,-1);
    if (distance >= 2000) {
      candidates.put(distance - 2000,candidate);
    }
 else {
    }
  }
  if (candidates.isEmpty()) {
    return null;
  }
 else {
    Entry<Integer,Class> candidateEntry=candidates.entrySet().iterator().next();
    Class c=candidateEntry.getValue();
    combinedTypeRelationClassCache.put(getCombinedType(sourceTypeName,relType,targetTypeName),c);
    return c;
  }
}
