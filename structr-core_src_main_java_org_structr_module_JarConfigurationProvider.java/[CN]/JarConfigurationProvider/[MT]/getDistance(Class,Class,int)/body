{
  if (distance >= 1000) {
    return distance;
  }
  distance++;
  if (type == null) {
    return Integer.MIN_VALUE;
  }
  if (type.equals(Object.class)) {
    return Integer.MIN_VALUE;
  }
  if (type.equals(candidateType)) {
    return distance + 1000;
  }
  if (type.equals(NodeInterface.class)) {
    return Integer.MIN_VALUE;
  }
  if (!(candidateType.isAssignableFrom(type))) {
    return Integer.MIN_VALUE;
  }
  distance++;
  Class[] interfaces=type.getInterfaces();
  for (  Class iface : interfaces) {
    if (iface.equals(candidateType)) {
      return distance + 1000;
    }
  }
  distance++;
  Class superClass=type.getSuperclass();
  if (superClass != null) {
    int d=getDistance(candidateType,superClass,distance);
    if (d >= 1000) {
      return d;
    }
  }
  return distance;
}
