{
  if (distance >= 1000) {
    return distance;
  }
  distance++;
  if (sourceType == null || targetType == null || relType == null) {
    return Integer.MIN_VALUE;
  }
  System.out.print(".");
  if (sourceType.equals(Object.class) || targetType.equals(Object.class)) {
    return Integer.MIN_VALUE;
  }
  System.out.print(".");
  System.out.print(rel.getClass().getSimpleName() + "<" + distance+ ">");
  final String relTypeName=rel.name();
  if (!relTypeName.equals(relType)) {
    return Integer.MIN_VALUE;
  }
  System.out.print(".");
  if (sourceType.equals(rel.getSourceType()) && targetType.equals(rel.getTargetType())) {
    System.out.print("MATCH<" + distance + ">!");
    return distance + 1000;
  }
  if (sourceType.equals(AbstractNode.class) && targetType.equals(AbstractNode.class)) {
    return Integer.MIN_VALUE;
  }
  System.out.print(".");
  if (!(rel.getSourceType().isAssignableFrom(sourceType))) {
    return Integer.MIN_VALUE;
  }
  if (!(rel.getTargetType().isAssignableFrom(targetType))) {
    return Integer.MIN_VALUE;
  }
  System.out.print(".");
  distance++;
  Class[] sourceInterfaces=sourceType.getInterfaces();
  for (  Class sourceInterface : sourceInterfaces) {
    System.out.print("." + sourceInterface.getSimpleName() + "<"+ distance+ ">"+ "(SI).");
    if (sourceInterface.equals(rel.getSourceType()) && targetType.equals(rel.getTargetType())) {
      System.out.print("MATCH<" + distance + ">!");
      return distance + 1000;
    }
  }
  distance++;
  Class[] targetInterfaces=targetType.getInterfaces();
  for (  Class targetInterface : targetInterfaces) {
    System.out.println("." + targetInterface.getSimpleName() + "<"+ distance+ ">"+ "(TI).");
    if (sourceType.equals(rel.getSourceType()) && targetInterface.equals(rel.getTargetType())) {
      System.out.print("MATCH<" + distance + ">!");
      return distance + 1000;
    }
  }
  distance++;
  Class sourceSuperclass=sourceType.getSuperclass();
  if (sourceSuperclass != null) {
    System.out.println("." + sourceSuperclass.getSimpleName() + "<"+ distance+ ">");
    int d=matchRelationClass(rel,sourceSuperclass,relType,targetType,distance);
    if (d >= 1000) {
      return d;
    }
  }
  distance++;
  Class targetSuperclass=targetType.getSuperclass();
  if (targetSuperclass != null) {
    System.out.println("." + targetSuperclass.getSimpleName() + "<"+ distance+ ">");
    int d=matchRelationClass(rel,sourceType,relType,targetSuperclass,distance);
    if (d >= 1000) {
      return d;
    }
  }
  return distance;
}
