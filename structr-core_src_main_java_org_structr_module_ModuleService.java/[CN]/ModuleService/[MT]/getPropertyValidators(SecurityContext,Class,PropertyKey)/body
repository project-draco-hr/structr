{
  Set<PropertyValidator> validators=new LinkedHashSet<>();
  Map<PropertyKey,Set<PropertyValidator>> validatorMap=null;
  Class localType=type;
  while (localType != null && !localType.equals(Object.class)) {
    validatorMap=getPropertyValidatorMapForType(localType);
    Set<PropertyValidator> classValidators=validatorMap.get(propertyKey);
    if (classValidators != null) {
      validators.addAll(validatorMap.get(propertyKey));
    }
    for (    Class interfaceClass : getInterfacesForType(localType)) {
      Set<PropertyValidator> interfaceValidators=getPropertyValidatorMapForType(interfaceClass).get(propertyKey);
      if (interfaceValidators != null) {
        validators.addAll(interfaceValidators);
      }
    }
    localType=localType.getSuperclass();
  }
  return validators;
}
