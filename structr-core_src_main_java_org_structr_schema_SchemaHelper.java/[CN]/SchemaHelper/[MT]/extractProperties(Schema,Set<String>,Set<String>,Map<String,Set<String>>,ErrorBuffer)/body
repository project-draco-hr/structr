{
  final PropertyContainer propertyContainer=entity.getPropertyContainer();
  final StringBuilder src=new StringBuilder();
  for (  String propertyName : SchemaHelper.getProperties(propertyContainer)) {
    if (!propertyName.startsWith("__") && propertyContainer.hasProperty(propertyName)) {
      String rawType=propertyContainer.getProperty(propertyName).toString();
      String dbName=null;
      if (rawType.contains("|")) {
        dbName=rawType.substring(0,rawType.indexOf("|"));
        rawType=rawType.substring(rawType.indexOf("|") + 1);
      }
      boolean notNull=false;
      if (rawType.startsWith("+")) {
        rawType=rawType.substring(1);
        notNull=true;
      }
      String defaultValue=null;
      if (rawType.contains(":")) {
        defaultValue=rawType.substring(rawType.indexOf(":") + 1);
        rawType=rawType.substring(0,rawType.indexOf(":"));
      }
      PropertyParser parser=SchemaHelper.getParserForRawValue(errorBuffer,entity.getClassName(),propertyName,dbName,rawType,notNull,defaultValue);
      if (parser != null) {
        src.append(parser.getPropertySource(errorBuffer));
        validators.addAll(parser.getGlobalValidators());
        enums.addAll(parser.getEnumDefinitions());
        addPropertyToView(PropertyView.Public,propertyName.substring(1),views);
        addPropertyToView(PropertyView.Ui,propertyName.substring(1),views);
      }
    }
  }
  for (  final String rawViewName : getViews(propertyContainer)) {
    if (propertyContainer.hasProperty(rawViewName)) {
      final String value=propertyContainer.getProperty(rawViewName).toString();
      final String[] parts=value.split("[,\\s]+");
      final String viewName=rawViewName.substring(2);
      Set<String> view=views.get(viewName);
      if (view == null) {
        view=new LinkedHashSet<>();
        views.put(viewName,view);
      }
 else {
        view.clear();
      }
      for (int i=0; i < parts.length; i++) {
        view.add(parts[i].trim());
      }
    }
  }
  return src.toString();
}
