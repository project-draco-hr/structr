{
  final Set<String> dynamicViews=new LinkedHashSet<>();
  final NodeExtender nodeExtender=new NodeExtender();
  boolean success=true;
  try {
    for (    final SchemaNode schemaNode : StructrApp.getInstance().nodeQuery(SchemaNode.class).getAsList()) {
      nodeExtender.addClass(schemaNode.getClassName(),schemaNode.getSource(errorBuffer));
      dynamicViews.addAll(schemaNode.getViews());
    }
    for (    final SchemaRelationship schemaRelationship : StructrApp.getInstance().relationshipQuery(SchemaRelationship.class).getAsList()) {
      nodeExtender.addClass(schemaRelationship.getClassName(),schemaRelationship.getSource(errorBuffer));
      dynamicViews.addAll(schemaRelationship.getViews());
    }
    for (    final Class newType : nodeExtender.compile(errorBuffer).values()) {
      Services.getInstance().getConfigurationProvider().registerEntityType(newType);
    }
    success=!errorBuffer.hasError();
    if (success) {
      Services.getInstance().getConfigurationProvider().registerDynamicViews(dynamicViews);
    }
  }
 catch (  Throwable t) {
    success=false;
  }
  return success;
}
