{
  Object value=constants.get(key);
  if (value == null) {
    if (data instanceof HttpServletRequest) {
      value=((HttpServletRequest)data).getParameter(key);
    }
    if (data instanceof Map) {
      value=((Map)data).get(key);
    }
    if (data != null) {
      if (data instanceof GraphObject) {
        value=((GraphObject)data).evaluate(securityContext,key,defaultValue);
      }
 else {
switch (key) {
case "size":
          if (data instanceof Collection) {
            return ((Collection)data).size();
          }
        if (data.getClass().isArray()) {
          return ((Object[])data).length;
        }
      break;
  }
}
}
 else {
switch (key) {
case "request":
  return securityContext.getRequest();
case "response":
if (securityContext != null) {
  final HttpServletResponse response=securityContext.getResponse();
  if (response != null) {
    try {
      return response.getOutputStream();
    }
 catch (    IOException ioex) {
      ioex.printStackTrace();
    }
  }
}
return null;
case "now":
return DatePropertyParser.format(new Date(),DateProperty.DEFAULT_FORMAT);
case "me":
return securityContext.getUser(false);
case "element":
case "this":
return entity;
case "locale":
return locale != null ? locale.toString() : null;
}
}
}
if (value == null && defaultValue != null) {
return Function.numberOrString(defaultValue);
}
return value;
}
