{
  final StringBuilder buf=new StringBuilder();
  final App app=StructrApp.getInstance();
  try (final Tx tx=app.tx()){
    for (    final JavaScriptSource jsLibraryFile : app.nodeQuery(JavaScriptSource.class).and(JavaScriptSource.useAsJavascriptLibrary,true).getAsList()) {
      final String contentType=jsLibraryFile.getContentType();
      if (contentType != null) {
        final String lowerCaseContentType=contentType.toLowerCase();
        if ("text/javascript".equals(lowerCaseContentType) || "application/javascript".equals(lowerCaseContentType)) {
          buf.append(jsLibraryFile.getJavascriptLibraryCode());
        }
 else {
          logger.log(Level.INFO,"Ignoring file {0} for use as a Javascript library, content type {1} not allowed. Use text/javascript or application/javascript.",new Object[]{jsLibraryFile.getName(),contentType});
        }
      }
 else {
        logger.log(Level.INFO,"Ignoring file {0} for use as a Javascript library, content type not set. Use text/javascript or application/javascript.",new Object[]{jsLibraryFile.getName(),contentType});
      }
    }
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
  }
  return buf.toString();
}
