{
  if (depth > 20) {
    return;
  }
  for (  final Map.Entry<String,Object> entry : source.entrySet()) {
    final String key=entry.getKey();
    final Object value=entry.getValue();
    if (value instanceof Map) {
      final Map<String,Object> map=(Map<String,Object>)value;
      final GraphObjectMap obj=new GraphObjectMap();
      destination.put(new StringProperty(key),obj);
      recursivelyConvertMapToGraphObjectMap(obj,map,depth + 1);
    }
 else     if (value instanceof Collection) {
      final List list=new LinkedList();
      final Collection collection=(Collection)value;
      for (      final Object obj : collection) {
        if (obj instanceof Map) {
          final GraphObjectMap container=new GraphObjectMap();
          list.add(container);
          recursivelyConvertMapToGraphObjectMap(container,(Map<String,Object>)obj,depth + 1);
        }
 else {
          list.add(obj);
        }
      }
      destination.put(new StringProperty(key),list);
    }
 else {
      destination.put(new StringProperty(key),value);
    }
  }
}
