{
  super.deserialize(source);
  final Object _exclusiveMinimum=source.get(JsonSchema.KEY_EXCLUSIVE_MINIMUM);
  if (_exclusiveMinimum != null && Boolean.TRUE.equals(_exclusiveMinimum)) {
    this.exclusiveMinimum=true;
  }
  final Object _exclusiveMaximum=source.get(JsonSchema.KEY_EXCLUSIVE_MAXIMUM);
  if (_exclusiveMaximum != null && Boolean.TRUE.equals(_exclusiveMaximum)) {
    this.exclusiveMaximum=true;
  }
  final Object _minimum=source.get(JsonSchema.KEY_MINIMUM);
  if (_minimum != null && _minimum instanceof Number) {
    this.minimum=((Number)_minimum).longValue();
  }
  final Object _maximum=source.get(JsonSchema.KEY_MAXIMUM);
  if (_maximum != null && _maximum instanceof Number) {
    this.maximum=((Number)_maximum).longValue();
  }
}
