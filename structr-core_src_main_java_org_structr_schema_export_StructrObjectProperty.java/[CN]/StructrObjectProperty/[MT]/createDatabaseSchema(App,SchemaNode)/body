{
  final String reference=getReference();
  if (reference != null) {
    final String direction=getDirection();
    String relationship=getRelationship();
    final StructrDefinition def=resolveJsonPointer(reference);
    if (def != null) {
      final SchemaNode otherNode=def.getSchemaNode();
      if ("out".equals(direction)) {
        if (StringUtils.isEmpty(relationship)) {
          relationship=schemaNode.getName() + "_" + otherNode.getName();
        }
        final SchemaRelationshipNode rel=getRelationship(app,schemaNode,otherNode,relationship);
        rel.setProperty(SchemaRelationshipNode.targetJsonName,getName());
        rel.setProperty(SchemaRelationshipNode.targetMultiplicity,"1");
      }
 else       if ("in".equals(direction)) {
        if (StringUtils.isEmpty(relationship)) {
          relationship=otherNode.getName() + "_" + schemaNode.getName();
        }
        final SchemaRelationshipNode rel=getRelationship(app,otherNode,schemaNode,relationship);
        rel.setProperty(SchemaRelationshipNode.sourceJsonName,getName());
        rel.setProperty(SchemaRelationshipNode.sourceMultiplicity,"1");
      }
 else {
        throw new IllegalStateException("Invalid direction " + direction + " in schema.");
      }
    }
  }
  return null;
}
