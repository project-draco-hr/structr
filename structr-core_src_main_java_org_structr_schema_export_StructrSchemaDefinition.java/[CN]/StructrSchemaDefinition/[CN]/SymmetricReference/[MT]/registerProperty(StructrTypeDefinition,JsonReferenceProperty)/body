{
  final StructrTypeDefinition _targetType=(StructrTypeDefinition)_sourceType.resolveJsonPointer(_property.getReference());
  Direction directionFromProperty=_property.getDirection();
  boolean directionChanged=false;
  if (directionFromProperty == null) {
    if (this.direction != null) {
switch (this.direction) {
case in:
        directionFromProperty=Direction.out;
      _property.setDirection(Direction.out);
    break;
case out:
  directionFromProperty=Direction.in;
_property.setDirection(Direction.in);
break;
}
}
 else {
directionFromProperty=Direction.out;
_property.setDirection(directionFromProperty);
}
directionChanged=true;
}
 else {
if (this.direction == null) {
this.direction=directionFromProperty;
directionChanged=true;
}
 else if (!this.direction.equals(direction)) {
this.direction=directionFromProperty;
directionChanged=true;
}
}
if (directionChanged) {
switch (directionFromProperty) {
case out:
this.outProperty=_property;
this.sourceType=_sourceType;
this.targetType=_targetType;
break;
case in:
this.inProperty=_property;
this.sourceType=_targetType;
this.targetType=_sourceType;
break;
}
}
syncCascadingFlags(outProperty,inProperty);
}
