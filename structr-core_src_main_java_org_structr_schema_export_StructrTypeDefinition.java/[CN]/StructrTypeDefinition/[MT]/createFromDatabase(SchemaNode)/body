{
  this.name=schemaNode.getProperty(AbstractNode.name);
  final Set<String> requiredProperties=new TreeSet<>();
  readLocalProperties(requiredProperties,schemaNode);
  readRemoteProperties(requiredProperties,schemaNode);
  readViews(schemaNode);
  readMethods(schemaNode);
  if (!requiredProperties.isEmpty()) {
    put(JsonSchema.KEY_REQUIRED,requiredProperties);
  }
  final String extendsClass=schemaNode.getProperty(SchemaNode.extendsClass);
  if (extendsClass != null) {
    final String typeName=extendsClass.substring(extendsClass.lastIndexOf(".") + 1);
    if (extendsClass.startsWith("org.structr.dynamic.")) {
      put(JsonSchema.KEY_EXTENDS,"#/definitions/" + typeName);
    }
 else {
      put(JsonSchema.KEY_EXTENDS,JsonSchema.SCHEMA_BASE + "definitions/" + typeName);
    }
  }
}
