{
  final StringBuilder buf=new StringBuilder();
  try (final BufferedReader reader=new BufferedReader(new InputStreamReader(source))){
    String line=reader.readLine();
    boolean beforeCypher=false;
    boolean inCypher=false;
    while (line != null) {
      final String trimmedLine=line.trim().replaceAll("[\\s]+","");
      if (!inCypher && "//graph".equals(trimmedLine)) {
        break;
      }
      if (inCypher && "----".equals(trimmedLine)) {
        inCypher=false;
        beforeCypher=false;
      }
      if (inCypher) {
        buf.append(line);
        buf.append("\n");
      }
      if ("[source,cypher]".equals(trimmedLine)) {
        beforeCypher=true;
      }
      if (beforeCypher && "----".equals(trimmedLine)) {
        inCypher=true;
        beforeCypher=false;
      }
      line=reader.readLine();
    }
  }
 catch (  IOException ioex) {
    ioex.printStackTrace();
  }
  return buf.toString();
}
