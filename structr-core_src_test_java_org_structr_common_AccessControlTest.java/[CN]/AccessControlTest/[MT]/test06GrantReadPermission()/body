{
  clearResourceAccess();
  try {
    List<TestUser> users=createTestNodes(TestUser.class,2);
    TestUser user1=(TestUser)users.get(0);
    TestUser user2=(TestUser)users.get(1);
    Result result=null;
    Class type=TestOne.class;
    final TestOne t1=createTestNode(TestOne.class,user1);
    try (final Tx tx=app.tx()){
      t1.grant(Permission.read,user2);
      tx.success();
    }
     SecurityContext user2Context=SecurityContext.getInstance(user2,AccessMode.Backend);
    try (final Tx tx=app.tx()){
      result=StructrApp.getInstance(user2Context).nodeQuery(type).getResult();
      assertEquals(1,result.size());
      assertEquals(t1.getUuid(),result.get(0).getUuid());
    }
     try (final Tx tx=app.tx()){
      t1.revoke(Permission.read,user2);
      tx.success();
    }
     try (final Tx tx=app.tx()){
      result=StructrApp.getInstance(user2Context).nodeQuery(type).getResult();
      assertTrue(result.isEmpty());
    }
   }
 catch (  FrameworkException ex) {
    logger.warn("",ex);
    fail("Unexpected exception");
  }
}
