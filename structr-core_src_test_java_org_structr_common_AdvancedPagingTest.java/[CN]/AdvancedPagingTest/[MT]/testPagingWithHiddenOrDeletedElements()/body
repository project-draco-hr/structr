{
  try {
    createTestNodes(TestOne.class,10);
  }
 catch (  FrameworkException fex) {
    fail("Unexpected exception.");
  }
  try (final Tx tx=app.tx()){
    final List<TestOne> testOnes=app.nodeQuery(TestOne.class).getAsList();
    final TestOne test1=testOnes.get(3);
    final TestOne test2=testOnes.get(4);
    final TestOne test3=testOnes.get(7);
    test1.setProperty(AbstractNode.hidden,true);
    test2.setProperty(AbstractNode.deleted,true);
    test3.setProperty(AbstractNode.hidden,true);
    test3.setProperty(AbstractNode.deleted,true);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fail("Unexpected exception.");
  }
  try (final Tx tx=app.tx()){
    final Result<TestOne> result=app.nodeQuery(TestOne.class).getResult();
    assertEquals("Result count should not include deleted or hidden nodes",7,(int)result.getRawResultCount());
    assertEquals("Actual result size should be equal to result count",7,(int)result.getResults().size());
    tx.success();
  }
 catch (  FrameworkException fex) {
    fail("Unexpected exception.");
  }
}
