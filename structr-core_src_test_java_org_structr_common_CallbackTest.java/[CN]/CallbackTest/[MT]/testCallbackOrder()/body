{
  try {
    TestEight test=(TestEight)Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        return (TestEight)Services.command(securityContext,CreateNodeCommand.class).execute(new NodeAttribute(AbstractNode.type,TestEight.class.getSimpleName()));
      }
    }
);
    assertTrue("onCreationTimestamp should be != 0",test.getOnCreationTimestamp() != 0L);
    assertEquals("onModificationTimestamp should be == 0",0L,test.getOnModificationTimestamp());
    assertEquals("onDeletionTimestamp should be == 0",0L,test.getOnDeletionTimestamp());
    assertTrue("afterCreationTimestamp should be != 0",test.getAfterCreationTimestamp() != 0L);
    assertEquals("afterModificationTimestamp should be == 0",0L,test.getAfterModificationTimestamp());
    assertEquals("afterDeletionTimestamp should be == 0",0L,test.getAfterDeletionTimestamp());
  }
 catch (  FrameworkException ex) {
    Logger.getLogger(CallbackTest.class.getName()).log(Level.SEVERE,null,ex);
  }
}
