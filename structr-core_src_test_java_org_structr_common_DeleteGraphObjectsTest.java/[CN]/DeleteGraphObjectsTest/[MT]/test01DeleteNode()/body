{
  try {
    final PropertyMap props=new PropertyMap();
    final String type="UnknownTestType";
    final String name="GenericNode-name";
    NodeInterface node=null;
    String uuid=null;
    props.put(AbstractNode.type,type);
    props.put(AbstractNode.name,name);
    try (final TransactionCommand cmd=app.beginTx()){
      node=app.create(NodeInterface.class,props);
      app.commitTx();
    }
     assertTrue(node != null);
    try (final TransactionCommand cmd=app.beginTx()){
      uuid=node.getUuid();
    }
     try (final TransactionCommand cmd=app.beginTx()){
      app.delete(node);
      app.commitTx();
    }
     try (final TransactionCommand cmd=app.beginTx()){
      Result result=app.nodeQuery(NodeInterface.class).uuid(uuid).getResult();
      assertEquals("Node should have been deleted",0,result.size());
    }
 catch (    FrameworkException fe) {
    }
  }
 catch (  FrameworkException ex) {
    ex.printStackTrace();
    logger.log(Level.SEVERE,ex.toString());
    fail("Unexpected exception");
  }
}
