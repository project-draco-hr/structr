{
  try {
    final TestOne testOne=createTestNode(TestOne.class);
    final TestSix testSix=createTestNode(TestSix.class);
    SixOneOneToOne rel=null;
    assertNotNull(testOne);
    assertNotNull(testSix);
    try (final TransactionCommand cmd=app.beginTx()){
      rel=app.create(testSix,testOne,SixOneOneToOne.class);
      app.commitTx();
    }
     assertNotNull(rel);
    try {
      rel.getRelationship().delete();
      fail("Should have raised an org.neo4j.graphdb.NotInTransactionException");
    }
 catch (    org.neo4j.graphdb.NotInTransactionException e) {
    }
    assertNotNull(rel);
    try (final TransactionCommand cmd=app.beginTx()){
      app.delete(rel);
      app.commitTx();
    }
     try (final TransactionCommand cmd=app.beginTx()){
      String uuid=rel.getUuid();
      assertNull("UUID of deleted relationship should be null",uuid);
    }
   }
 catch (  FrameworkException ex) {
    ex.printStackTrace();
    logger.log(Level.SEVERE,ex.toString());
    fail("Unexpected exception");
  }
}
