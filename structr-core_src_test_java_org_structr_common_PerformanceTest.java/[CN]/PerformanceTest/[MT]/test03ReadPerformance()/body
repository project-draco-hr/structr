{
  try {
    int number=1000;
    int loop=1000;
    createTestNodes(TestOne.class,number);
    long t0=System.nanoTime();
    for (int i=0; i < loop; i++) {
      try (final Tx tx=app.tx()){
        final List<TestOne> res=app.nodeQuery(TestOne.class).getAsList();
        for (        final TestOne t : res) {
          final String name=t.getProperty(AbstractNode.name);
        }
        tx.success();
      }
     }
    long t1=System.nanoTime();
    DecimalFormat decimalFormat=new DecimalFormat("0.000000000",DecimalFormatSymbols.getInstance(Locale.ENGLISH));
    double time=(t1 - t0) / 1000000000.0;
    double rate=number * loop / ((t1 - t0) / 1000000000.0);
    logger.info("Read {}x {} nodes in {} seconds ({} per s)",new Object[]{loop,number,decimalFormat.format(time),decimalFormat.format(rate)});
    assertTrue("Invalid read performance result",rate > 10000);
  }
 catch (  FrameworkException ex) {
    logger.error(ex.toString());
    fail("Unexpected exception");
  }
}
