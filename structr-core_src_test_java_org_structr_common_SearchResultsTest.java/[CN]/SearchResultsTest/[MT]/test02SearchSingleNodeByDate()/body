{
  try {
    PropertyMap props=new PropertyMap();
    PropertyKey key=TestOne.aDate;
    Date date=new Date();
    Class type=TestOne.class;
    props.put(key,date);
    AbstractNode node=createTestNode(type,props);
    boolean includeDeletedAndHidden=true;
    boolean publicOnly=false;
    List<SearchAttribute> searchAttributes=new LinkedList<>();
    searchAttributes.add(Search.andExactType(type));
    searchAttributes.add(Search.andExactProperty(securityContext,key,date));
    Result result=searchNodeCommand.execute(includeDeletedAndHidden,publicOnly,searchAttributes);
    assertEquals(1,result.size());
    assertTrue(result.get(0).equals(node));
  }
 catch (  FrameworkException ex) {
    logger.log(Level.SEVERE,ex.toString());
    fail("Unexpected exception");
  }
}
