{
  CollectionProperty instance=TestSix.manyToOneTestOnes;
  TestSix testSix1=null;
  TestSix testSix2=null;
  TestOne testOne1=null;
  TestOne testOne2=null;
  try {
    testSix1=createTestNode(TestSix.class);
    testSix2=createTestNode(TestSix.class);
    testOne1=createTestNode(TestOne.class);
    testOne2=createTestNode(TestOne.class);
  }
 catch (  FrameworkException fex) {
    fail("Unable to create test nodes");
  }
  assertNotNull(testSix1);
  assertNotNull(testSix2);
  assertNotNull(testOne1);
  assertNotNull(testOne2);
  List<TestOne> twoTestOnesToList=new LinkedList<TestOne>();
  twoTestOnesToList.add(testOne1);
  twoTestOnesToList.add(testOne2);
  List<TestOne> oneTestOneToList=new LinkedList<TestOne>();
  oneTestOneToList.add(testOne1);
  instance.setProperty(securityContext,testSix1,twoTestOnesToList);
  List<TestOne> vrfy1=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy1);
  assertEquals(2,vrfy1.size());
  assertEquals(vrfy1.get(0).getUuid(),testOne1.getUuid());
  assertEquals(vrfy1.get(1).getUuid(),testOne2.getUuid());
  instance.setProperty(securityContext,testSix2,twoTestOnesToList);
  List<TestOne> vrfy2=instance.getProperty(securityContext,testSix2,true);
  assertNotNull(vrfy2);
  assertEquals(2,vrfy2.size());
  assertEquals(vrfy2.get(0).getUuid(),testOne1.getUuid());
  assertEquals(vrfy2.get(1).getUuid(),testOne2.getUuid());
  List vrfy3=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy3);
  assertEquals(0,vrfy3.size());
  instance.setProperty(securityContext,testSix1,twoTestOnesToList);
  List vrfy4=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy4);
  assertEquals(2,vrfy4.size());
  instance.setProperty(securityContext,testSix1,null);
  List vrfy5=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy5);
  assertEquals(0,vrfy5.size());
  instance.setProperty(securityContext,testSix1,twoTestOnesToList);
  List vrfy6=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy6);
  assertEquals(2,vrfy6.size());
  instance.setProperty(securityContext,testSix1,Collections.EMPTY_LIST);
  List vrfy7=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy7);
  assertEquals(0,vrfy7.size());
  instance.setProperty(securityContext,testSix1,oneTestOneToList);
  List<TestOne> vrfy8=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy8);
  assertEquals(1,vrfy8.size());
  assertEquals(vrfy8.get(0).getUuid(),testOne1.getUuid());
  instance.setProperty(securityContext,testSix1,twoTestOnesToList);
  List<TestOne> vrfy9=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy9);
  assertEquals(2,vrfy9.size());
  assertEquals(vrfy9.get(0).getUuid(),testOne1.getUuid());
  assertEquals(vrfy9.get(1).getUuid(),testOne2.getUuid());
  instance.setProperty(securityContext,testSix1,oneTestOneToList);
  List<TestOne> vrfy10=instance.getProperty(securityContext,testSix1,true);
  assertNotNull(vrfy10);
  assertEquals(1,vrfy10.size());
  assertEquals(vrfy10.get(0).getUuid(),testOne1.getUuid());
}
