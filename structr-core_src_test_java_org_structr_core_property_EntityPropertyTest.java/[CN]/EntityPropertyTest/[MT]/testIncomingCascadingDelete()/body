{
  try {
    final TestSix s1=createTestNode(TestSix.class);
    final TestThree t1=createTestNode(TestThree.class);
    final TestThree t2=createTestNode(TestThree.class);
    final TestThree t3=createTestNode(TestThree.class);
    Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        s1.setProperty(TestSix.oneToManyTestThreesCascadeIn,toList(t1,t2,t3));
        s1.setProperty(AbstractNode.name,"s1");
        t1.setProperty(AbstractNode.name,"t1");
        t2.setProperty(AbstractNode.name,"t2");
        t3.setProperty(AbstractNode.name,"t3");
        return null;
      }
    }
);
    final List<TestThree> result1=s1.getProperty(TestSix.oneToManyTestThreesCascadeIn);
    assertEquals("Result has wrong size.",3,result1.size());
    assertEquals(t1,result1.get(0));
    assertEquals(t2,result1.get(1));
    assertEquals(t3,result1.get(2));
{
      Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
        @Override public Object execute() throws FrameworkException {
          Services.command(securityContext,DeleteNodeCommand.class).execute(t2);
          return null;
        }
      }
);
      try {
        t2.setPropertyTransactional(TestThree.name,"t2_deleted");
        fail("Node t2 has been deleted, accessing it should throw an exception.");
      }
 catch (      FrameworkException fex) {
      }
      try {
        s1.setPropertyTransactional(TestSix.name,"s1");
        fail("Node s1 has been deleted, accessing it should throw an exception.");
      }
 catch (      FrameworkException fex) {
      }
      try {
        t1.setPropertyTransactional(TestThree.name,"t1_new");
      }
 catch (      FrameworkException fex) {
        fail("Node t1 has not been deleted, ccessing it should not throw an exception.");
      }
      try {
        t3.setPropertyTransactional(TestThree.name,"t3_new");
      }
 catch (      FrameworkException fex) {
        fail("Node t3 has been deleted, accessing it should throw an exception.");
      }
    }
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    fail("Unexpected exception");
  }
}
