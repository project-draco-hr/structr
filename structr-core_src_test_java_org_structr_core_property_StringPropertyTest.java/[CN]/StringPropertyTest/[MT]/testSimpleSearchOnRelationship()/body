{
  try {
    final TestOne testOne=createTestNode(TestOne.class);
    final TestFour testFour=createTestNode(TestFour.class);
    final Property<String> key=OneFourOneToOne.stringProperty;
    assertNotNull(testOne);
    assertNotNull(testFour);
    final OneFourOneToOne testEntity=createTestRelationship(testOne,testFour,OneFourOneToOne.class);
    assertNotNull(testEntity);
    Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        testEntity.setProperty(key,"test");
        return null;
      }
    }
);
    assertEquals("test",testEntity.getProperty(key));
    Result<TestFour> result=Services.command(securityContext,SearchRelationshipCommand.class).execute(Search.andExactRelType(OneFourOneToOne.class),Search.andExactProperty(securityContext,key,"test"));
    assertEquals(result.size(),1);
    assertEquals(result.get(0),testEntity);
  }
 catch (  FrameworkException fex) {
    fail("Unable to store array");
  }
}
