{
  final ScriptEngine engine=new ScriptEngineManager().getEngineByName("rhino");
  try (final Tx tx=app.tx()){
    final ActionContext actionContext=new ActionContext();
    final TestOne entity=createTestNode(TestOne.class);
    final List<TestThree> testThrees=createTestNodes(TestThree.class,10);
    final StructrScriptable scriptable=new StructrScriptable(securityContext,actionContext,entity);
    final String allIdsConcatenated=concatIds(testThrees);
    engine.put("Structr",scriptable);
    engine.put("securityContext",securityContext);
    engine.put("actionContext",actionContext);
    assertEquals("Invalid JavaScript evaluation result",1,engine.eval("Structr.find('TestOne').length;"));
    assertEquals("Invalid JavaScript evaluation result",10,engine.eval("Structr.find('TestThree').length;"));
    assertEquals("Invalid JavaScript evaluation result",allIdsConcatenated,engine.eval("var conc = ''; Structr.find('TestThree').forEach(function(s) { conc += s.id; }); conc.toString();"));
    engine.eval("var o = Structr.find('TestThree')[0]; o.name = 'Object'; o.xy = 2;");
    assertEquals("Invalid JavaScript evaluation result","Object",engine.eval("Structr.find('TestThree')[0].name"));
    assertNull("Invalid JavaScript evaluation result",engine.eval("Structr.find('TestThree')[0].xy"));
    tx.success();
  }
 catch (  ScriptException|FrameworkException fex) {
    fex.printStackTrace();
    fail("Unexpected exception.");
  }
}
