{
  final Random random=new Random();
  TestOne testOne=null;
  try (final Tx tx=app.tx()){
    final List<TestSix> testSixs=createTestNodes(TestSix.class,10);
    testOne=app.create(TestOne.class);
    for (    final TestSix t : testSixs) {
      t.setProperty(TestSix.index,random.nextInt(1000));
    }
    testOne.setProperty(TestOne.manyToManyTestSixs,testSixs);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    fail("Unexpected exception.");
  }
  try (final Tx tx=app.tx()){
    final ActionContext actionContext=new ActionContext(securityContext);
    Scripting.evaluate(actionContext,testOne,"${{" + "	var x = {}; " + "	x['test'] = Structr.create('TestOne'); "+ "	Structr.log(JSON.stringify(x);"+ "}}");
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    fail("Unexpected exception.");
  }
}
