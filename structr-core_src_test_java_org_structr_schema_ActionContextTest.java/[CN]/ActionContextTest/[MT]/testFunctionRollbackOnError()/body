{
  final ActionContext ctx=new ActionContext(securityContext,null);
  TestOne testNodeOldScripting=null;
  try (final Tx tx=app.tx()){
    testNodeOldScripting=createTestNode(TestOne.class);
    testNodeOldScripting.setProperty(TestOne.aString,"InitialString");
    testNodeOldScripting.setProperty(TestOne.anInt,42);
    tx.success();
  }
 catch (  FrameworkException ex) {
    logger.log(Level.WARNING,"",ex);
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    Scripting.replaceVariables(ctx,testNodeOldScripting,"${ ( set(this, 'aString', 'NewString'), set(this, 'anInt', 'NOT_AN_INTEGER') ) }");
    fail("StructrScript: setting anInt to 'NOT_AN_INTEGER' should cause an Exception");
    tx.success();
  }
 catch (  FrameworkException expected) {
  }
  try {
    try (final Tx tx=app.tx()){
      assertEquals("StructrScript: String should still have initial value!","InitialString",Scripting.replaceVariables(ctx,testNodeOldScripting,"${(get(this, 'aString'))}"));
      tx.success();
    }
   }
 catch (  FrameworkException ex) {
    logger.log(Level.WARNING,"",ex);
    fail("Unexpected exception");
  }
  TestOne testNodeJavaScript=null;
  try (final Tx tx=app.tx()){
    testNodeJavaScript=createTestNode(TestOne.class);
    testNodeJavaScript.setProperty(TestOne.aString,"InitialString");
    testNodeJavaScript.setProperty(TestOne.anInt,42);
    tx.success();
  }
 catch (  FrameworkException ex) {
    logger.log(Level.WARNING,"",ex);
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    Scripting.replaceVariables(ctx,testNodeJavaScript,"${{ var t1 = Structr.get('this'); t1.aString = 'NewString'; t1.anInt = 'NOT_AN_INTEGER'; }}");
    fail("StructrScript: setting anInt to 'NOT_AN_INTEGER' should cause an Exception");
    tx.success();
  }
 catch (  FrameworkException expected) {
  }
  try {
    try (final Tx tx=app.tx()){
      assertEquals("JavaScript: String should still have initial value!","InitialString",Scripting.replaceVariables(ctx,testNodeJavaScript,"${{ var t1 = Structr.get('this'); Structr.print(t1.aString); }}"));
      tx.success();
    }
   }
 catch (  FrameworkException ex) {
    logger.log(Level.WARNING,"",ex);
    fail("Unexpected exception");
  }
}
