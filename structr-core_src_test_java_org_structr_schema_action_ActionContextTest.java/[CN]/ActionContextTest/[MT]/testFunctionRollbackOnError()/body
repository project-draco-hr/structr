{
  try {
    try (final Tx tx=app.tx()){
      final ActionContext ctx=new ActionContext(securityContext,null);
      TestOne t1=createTestNode(TestOne.class);
      t1.setProperty(TestOne.aString,"InitialString");
      t1.setProperty(TestOne.anInt,42);
      try {
        Scripting.replaceVariables(ctx,t1,"${ ( set(this, 'aString', 'NewString'), set(this, 'anInt', 'error') ) }");
        fail("StructrScript: setting anInt to 'error' should cause an Exception");
      }
 catch (      FrameworkException fx) {
      }
      assertEquals("StructrScript: String should still have initial value!","InitialString",Scripting.replaceVariables(ctx,t1,"${(get(this, 'aString'))}"));
      t1.setProperty(TestOne.aString,"InitialString");
      t1.setProperty(TestOne.anInt,42);
      try {
        Scripting.replaceVariables(ctx,t1,"${{ var t1 = Structr.get('this'); t1.aString = 'NewString'; t1.anInt = 'error'; }}");
        fail("JavaScript: setting anInt to 'error' should cause an Exception");
      }
 catch (      FrameworkException fx) {
      }
      assertEquals("JavaScript: String should still have initial value!","InitialString",Scripting.replaceVariables(ctx,t1,"${{ var t1 = Structr.get('this'); Structr.print(t1.aString); }}"));
      tx.success();
    }
   }
 catch (  FrameworkException ex) {
    ex.printStackTrace();
    fail("Unexpected exception");
  }
}
