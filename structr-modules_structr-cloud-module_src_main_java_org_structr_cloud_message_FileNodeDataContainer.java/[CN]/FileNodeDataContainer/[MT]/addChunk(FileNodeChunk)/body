{
  if (this.fileSize > 0) {
    if (chunk.getFileSize() != this.fileSize) {
      throw new IllegalStateException("File size mismatch while adding chunk. Expected " + fileSize + ", received "+ chunk.getFileSize());
    }
  }
 else {
    this.fileSize=chunk.getFileSize();
  }
  if (chunk.getSequenceNumber() != this.sequenceNumber) {
    throw new IllegalStateException("Sequence number mismatch while adding chunk. Expected " + sequenceNumber + ", received "+ chunk.getSequenceNumber());
  }
 else {
    sequenceNumber++;
  }
  try {
    if (temporaryFile == null) {
      temporaryFile=java.io.File.createTempFile("structr","file");
      outputStream=new FileOutputStream(temporaryFile);
    }
    if (outputStream != null) {
      outputStream.write(chunk.getBinaryContent());
    }
  }
 catch (  Throwable t) {
    logger.log(Level.WARNING,"",t);
  }
}
