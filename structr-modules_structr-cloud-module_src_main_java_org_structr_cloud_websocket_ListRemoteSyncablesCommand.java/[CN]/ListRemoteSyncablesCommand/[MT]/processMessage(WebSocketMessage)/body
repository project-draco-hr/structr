{
  final Map<String,Object> properties=webSocketData.getNodeData();
  final String username=(String)properties.get("username");
  final String password=(String)properties.get("password");
  final String host=(String)properties.get("host");
  final String key=(String)properties.get("key");
  final String type=(String)properties.get("type");
  final Long port=(Long)properties.get("port");
  if (host != null && port != null && username != null && password != null && key != null) {
    final App app=StructrApp.getInstance();
    try (final Tx tx=app.tx()){
      final StructrWebSocket webSocket=getWebSocket();
      final List<SyncableInfo> syncables=CloudService.doRemote(webSocket.getSecurityContext(),new SingleTransmission<>(new ListSyncables(type)),new HostInfo(username,password,host,port.intValue()),new WebsocketProgressListener(getWebSocket(),key,callback));
      if (syncables != null) {
        final List<GraphObject> result=new LinkedList<>();
        for (        final SyncableInfo info : syncables) {
          final GraphObjectMap map=new GraphObjectMap();
          map.put(GraphObject.id,info.getId());
          map.put(NodeInterface.name,info.getName());
          map.put(File.size,info.getSize());
          map.put(GraphObject.type,info.getType());
          map.put(GraphObject.visibleToPublicUsers,info.isVisibleToPublicUsers());
          map.put(GraphObject.visibleToAuthenticatedUsers,info.isVisibleToAuthenticatedUsers());
          map.put(GraphObject.lastModifiedDate,info.getLastModified());
          map.put(isSynchronized,isSynchronized(info));
          result.add(map);
        }
        webSocketData.setResult(result);
        webSocket.send(webSocketData,true);
      }
      tx.success();
    }
 catch (    FrameworkException fex) {
      getWebSocket().send(MessageBuilder.status().code(400).message(fex.getMessage()).build(),true);
    }
  }
 else {
    getWebSocket().send(MessageBuilder.status().code(400).message("The PULL command needs sourceId, username, password, host, port and key!").build(),true);
  }
}
