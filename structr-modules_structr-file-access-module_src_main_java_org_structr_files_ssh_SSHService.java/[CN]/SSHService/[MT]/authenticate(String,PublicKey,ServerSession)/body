{
  boolean isValid=false;
  if (key == null) {
    return isValid;
  }
  try (final Tx tx=StructrApp.getInstance().tx()){
    final Principal principal=StructrApp.getInstance().nodeQuery(Principal.class).andName(username).getFirst();
    if (principal != null) {
      securityContext=SecurityContext.getInstance(principal,AccessMode.Backend);
      final String pubKeyData=principal.getProperty(Principal.publicKey);
      if (pubKeyData != null) {
        final PublicKey pubKey=PublicKeyEntry.parsePublicKeyEntry(pubKeyData).resolvePublicKey(PublicKeyEntryResolver.FAILING);
        isValid=KeyUtils.compareKeys(pubKey,key);
      }
      final String[] pubKeysData=principal.getProperty(Principal.publicKeys);
      if (pubKeysData != null) {
        for (        final String k : pubKeysData) {
          if (k != null) {
            final PublicKey pubKey=PublicKeyEntry.parsePublicKeyEntry(k).resolvePublicKey(PublicKeyEntryResolver.FAILING);
            if (KeyUtils.compareKeys(pubKey,key)) {
              isValid=true;
              break;
            }
          }
        }
      }
    }
    tx.success();
  }
 catch (  Throwable t) {
    logger.warn("",t);
    isValid=false;
  }
  try {
    if (isValid) {
      session.setAuthenticated();
    }
  }
 catch (  IOException ex) {
    logger.error("Unable to authenticate session",ex);
  }
  return isValid;
}
