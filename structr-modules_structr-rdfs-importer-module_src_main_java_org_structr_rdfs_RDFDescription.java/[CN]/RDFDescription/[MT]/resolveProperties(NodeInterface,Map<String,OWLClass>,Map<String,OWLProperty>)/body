{
  final ConfigurationProvider config=StructrApp.getConfiguration();
  final NodeList children=getElement().getChildNodes();
  final int length=children.getLength();
  for (int i=0; i < length; i++) {
    final Node node=children.item(i);
    if (node instanceof Element) {
      final Element childElement=(Element)node;
      final String tagName=childElement.getTagName();
      final OWLProperty prop=propertiesByName.get(tagName);
      if (prop != null) {
        final Class type=nodeInterface.getClass();
        final String keyName=prop.getStructrName(false);
        Object value=getValue(childElement);
        try {
          PropertyKey key=config.getPropertyKeyForJSONName(type,keyName,false);
          if (key == null) {
            final OWLClass owlClass=owlClassesByName.get(type.getSimpleName());
            if (owlClass != null) {
              final OWLClass inverse=owlClass.getInverse();
              if (inverse != null) {
                final Class inverseType=config.getNodeEntityClass(inverse.getStructrName(true));
                if (inverseType != null) {
                  key=config.getPropertyKeyForJSONName(inverseType,keyName,false);
                }
              }
            }
          }
          if (key != null) {
            final PropertyConverter converter=key.inputConverter(SecurityContext.getSuperUserInstance());
            if (converter != null) {
              value=converter.convert(value);
            }
            nodeInterface.setProperty(key,value);
          }
 else {
            System.out.println("Description: no property key found for " + keyName + " of "+ type.getSimpleName());
          }
        }
 catch (        Throwable t) {
          t.printStackTrace();
        }
      }
 else {
        System.out.println("Property for " + tagName + " not found!");
      }
    }
  }
}
