{
  assertNotStale();
  final RelationshipRelationshipMapper mapper=new RelationshipRelationshipMapper(db);
  List<Relationship> list=getList(direction,relationshipType);
  if (list == null) {
    final SessionTransaction tx=db.getCurrentTransaction();
    final Map<String,Object> map=new HashMap<>();
    map.put("id",entity.id());
switch (direction) {
case BOTH:
      list=Iterables.toList(Iterables.map(mapper,tx.getRelationships("MATCH (n)-[r:" + relationshipType.name() + "]-(m) WHERE ID(n) = {id} RETURN r",map)));
    break;
case OUTGOING:
  list=Iterables.toList(Iterables.map(mapper,tx.getRelationships("MATCH (n)-[r:" + relationshipType.name() + "]->(m) WHERE ID(n) = {id} RETURN r",map)));
break;
case INCOMING:
list=Iterables.toList(Iterables.map(mapper,tx.getRelationships("MATCH (n)<-[r:" + relationshipType.name() + "]-(m) WHERE ID(n) = {id} RETURN r",map)));
break;
}
setList(direction,relationshipType,list);
}
return list;
}
