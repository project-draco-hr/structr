{
  final BoltDatabaseService s=new BoltDatabaseService();
  final Properties config=new Properties();
  try {
    config.put(Structr.DATABASE_PATH,Files.createTempDirectory("structr-test").toFile().getAbsolutePath());
  }
 catch (  IOException ioex) {
    ioex.printStackTrace();
  }
  config.setProperty(Structr.DATABASE_CONNECTION_URL,Structr.TEST_DATABASE_URL);
  s.initialize(config);
  long id=0L;
  try (final Transaction tx=s.beginTx()){
    final Node node=s.createNode(Collections.EMPTY_SET,Collections.EMPTY_MAP);
    id=node.getId();
    tx.success();
  }
   try (final Transaction tx=s.beginTx()){
    final Node node=s.getNodeById(id);
    Assert.assertNotNull(node);
    node.setProperty("name","Test");
    tx.success();
  }
   try (final Transaction tx=s.beginTx()){
    final Node node=s.getNodeById(id);
    Assert.assertNotNull(node);
    node.setProperty("name","Fail");
  }
   try (final Transaction tx=s.beginTx()){
    final Node node=s.getNodeById(id);
    Assert.assertNotNull(node);
    Assert.assertEquals("Invalid setProperty result","Test",node.getProperty("name"));
    tx.success();
  }
   try (final Transaction tx=s.beginTx()){
    final Node node=s.getNodeById(id);
    Assert.assertNotNull(node);
    node.removeProperty("name");
    tx.success();
  }
   try (final Transaction tx=s.beginTx()){
    final Node node=s.getNodeById(id);
    Assert.assertNotNull(node);
    Assert.assertNull("Invalid removeProperty result",node.getProperty("name"));
    node.setProperty("key1","value1");
    node.setProperty("key2",2);
    final Iterable<String> keys=node.getPropertyKeys();
    final List<String> list=Iterables.toList(keys);
    Assert.assertEquals("Invalid getPropertyKeys result",2,list.size());
    Assert.assertEquals("Invalid getPropertyKeys result","key1",list.get(0));
    Assert.assertEquals("Invalid getPropertyKeys result","key2",list.get(1));
    tx.success();
  }
   s.shutdown();
}
