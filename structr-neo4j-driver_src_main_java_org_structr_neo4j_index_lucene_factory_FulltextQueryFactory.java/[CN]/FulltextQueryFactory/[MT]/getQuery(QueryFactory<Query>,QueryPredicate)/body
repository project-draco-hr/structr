{
  final boolean isExactMatch=predicate.isExactMatch();
  if (isExactMatch) {
    String value=getReadValue(predicate).toString();
    if (StringUtils.isEmpty(value)) {
      value=getReadValue(null).toString();
    }
    if (value.matches("[\\s]+")) {
      value="\"" + value + "\"";
    }
    return new TermQuery(new Term(predicate.getName(),value));
  }
 else {
    String value=getInexactValue(predicate).toString();
    if (value.startsWith("\"") && value.endsWith("\"")) {
      value=StringUtils.stripStart(StringUtils.stripEnd(value,"\""),"\"");
      String[] words=StringUtils.split(value," ");
      PhraseQuery query=new PhraseQuery();
      for (      String word : words) {
        query.add(new Term(predicate.getName(),word));
      }
      return query;
    }
    BooleanQuery query=new BooleanQuery();
    String[] words=StringUtils.split(value," ");
    for (    String word : words) {
      query.add(new WildcardQuery(new Term(predicate.getName(),word)),Occur.SHOULD);
      query.add(new WildcardQuery(new Term(predicate.getName(),"*" + escape(word) + "*")),Occur.SHOULD);
    }
    return query;
  }
}
