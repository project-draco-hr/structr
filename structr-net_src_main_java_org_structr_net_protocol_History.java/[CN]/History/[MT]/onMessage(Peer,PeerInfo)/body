{
  if (peer.getUuid().equals(recipient)) {
    final Repository repository=peer.getRepository();
    if (!repository.contains(objectId)) {
      repository.objectCreated(objectId,type,getSender(),userId,creationTime,lastModified,data);
    }
 else {
      final RepositoryObject obj=repository.getObject(objectId);
      if (obj != null) {
        final String transactionId=UUID.randomUUID().toString().replaceAll("\\-","");
        for (        final Entry<String,Object> entry : data.entrySet()) {
          obj.setProperty(lastModified,transactionId,entry.getKey(),entry.getValue());
        }
        repository.complete(transactionId);
      }
    }
  }
}
