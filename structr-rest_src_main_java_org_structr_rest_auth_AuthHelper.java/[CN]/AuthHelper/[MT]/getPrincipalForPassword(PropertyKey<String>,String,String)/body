{
  String errorMsg=null;
  Principal principal=null;
  final String superuserName=StructrApp.getConfigurationValue(Services.SUPERUSER_USERNAME);
  final String superUserPwd=StructrApp.getConfigurationValue(Services.SUPERUSER_PASSWORD);
  if (superuserName.equals(value) && superUserPwd.equals(password)) {
    principal=new SuperUser();
  }
 else {
    try {
      principal=StructrApp.getInstance().nodeQuery(Principal.class).and().or(key,value).or(AbstractUser.name,value).getFirst();
      if (principal == null) {
        logger.log(Level.INFO,"No principal found for {0} {1}",new Object[]{key.dbName(),value});
        errorMsg=STANDARD_ERROR_MSG;
      }
 else {
        if (principal.getProperty(Principal.blocked)) {
          logger.log(Level.INFO,"Principal {0} is blocked",principal);
          errorMsg=STANDARD_ERROR_MSG;
        }
        if (StringUtils.isEmpty(password)) {
          logger.log(Level.INFO,"Empty password for principal {0}",principal);
          errorMsg="Empty password, should never happen here!";
        }
 else {
          if (!principal.isValidPassword(password)) {
            errorMsg=STANDARD_ERROR_MSG;
          }
        }
      }
    }
 catch (    FrameworkException fex) {
      fex.printStackTrace();
    }
  }
  if (errorMsg != null) {
    throw new AuthenticationException(errorMsg);
  }
  return principal;
}
