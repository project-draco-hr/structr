{
  SecurityContext securityContext;
  Principal user=checkSessionAuthentication(request);
  if (user == null) {
    user=getUser(request,true);
  }
  if (user == null) {
    securityContext=SecurityContext.getInstance(user,request,AccessMode.Frontend);
  }
 else {
    if (user instanceof SuperUser) {
      securityContext=SecurityContext.getSuperUserInstance(request);
    }
 else {
      securityContext=SecurityContext.getInstance(user,request,AccessMode.Backend);
    }
  }
  securityContext.setAuthenticator(this);
  final String origin=request.getHeader("Origin");
  if (!StringUtils.isBlank(origin)) {
    final Services services=Services.getInstance();
    response.setHeader("Access-Control-Allow-Origin",origin);
    final String maxAge=services.getConfigurationValue(Services.ACCESS_CONTROL_MAX_AGE);
    if (StringUtils.isNotBlank(maxAge)) {
      response.setHeader("Access-Control-MaxAge",maxAge);
    }
    final String allowMethods=services.getConfigurationValue(Services.ACCESS_CONTROL_ALLOW_METHODS);
    if (StringUtils.isNotBlank(allowMethods)) {
      response.setHeader("Access-Control-Allow-Methods",allowMethods);
    }
    final String allowHeaders=services.getConfigurationValue(Services.ACCESS_CONTROL_ALLOW_HEADERS);
    if (StringUtils.isNotBlank(allowHeaders)) {
      response.setHeader("Access-Control-Allow-Headers",allowHeaders);
    }
    final String allowCredentials=services.getConfigurationValue(Services.ACCESS_CONTROL_ALLOW_CREDENTIALS);
    if (StringUtils.isNotBlank(allowCredentials)) {
      response.setHeader("Access-Control-Allow-Credentials",allowCredentials);
    }
    final String exposeHeaders=services.getConfigurationValue(Services.ACCESS_CONTROL_EXPOSE_HEADERS);
    if (StringUtils.isNotBlank(exposeHeaders)) {
      response.setHeader("Access-Control-Expose-Headers",exposeHeaders);
    }
  }
  examined=true;
  return securityContext;
}
