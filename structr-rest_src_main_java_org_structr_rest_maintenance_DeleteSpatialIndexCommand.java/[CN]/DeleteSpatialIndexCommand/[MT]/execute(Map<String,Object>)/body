{
  final GraphDatabaseService graphDb=Services.getService(NodeService.class).getGraphDb();
  final List<Node> toDelete=new LinkedList<Node>();
  for (  final Node node : GlobalGraphOperations.at(graphDb).getAllNodes()) {
    try {
      if (node.hasProperty("bbox") && node.hasProperty("gtype") && node.hasProperty("id")&& node.hasProperty("latitude")&& node.hasProperty("longitude")) {
        toDelete.add(node);
      }
    }
 catch (    Throwable t) {
    }
  }
  Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
    @Override public Object execute() throws FrameworkException {
      for (      Node node : toDelete) {
        logger.log(Level.INFO,"Deleting node {0}",node);
        try {
          for (          Relationship rel : node.getRelationships()) {
            rel.delete();
          }
          node.delete();
        }
 catch (        Throwable t) {
          t.printStackTrace();
        }
      }
      return null;
    }
  }
);
}
