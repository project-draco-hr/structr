{
  final GraphObjectMap result=new GraphObjectMap();
  final SimpleDateFormat format=new SimpleDateFormat(dateFormat);
  final GraphObject firstEntry=entries.get(0);
  final GraphObject lastEntry=entries.get(entries.size() - 1);
  final Date firstDate=firstEntry.getProperty(timestampProperty);
  final Date lastDate=lastEntry.getProperty(timestampProperty);
  final long startTimestamp=firstDate.getTime();
  final long endTimestamp=lastDate.getTime();
  final long interval=findInterval(dateFormat);
  final long start=alignDateOnFormat(dateFormat,startTimestamp);
  final TreeMap<Long,Integer> countMap=toCountMap(entries);
  for (long current=start; current <= endTimestamp; current+=interval) {
    final Map<Long,Integer> counts=countMap.subMap(current,true,current + interval,false);
    final String formattedDate=format.format(current);
    long sum=0;
    for (    final Integer count : counts.values()) {
      sum+=count;
    }
    result.put(new LongProperty(Long.toString(current)),sum);
  }
  return new Result(result,false);
}
