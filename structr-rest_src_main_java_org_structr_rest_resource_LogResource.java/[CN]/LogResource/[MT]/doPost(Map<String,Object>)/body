{
  final HttpServletRequest request=securityContext.getRequest();
  if (request != null) {
    if ("true".equals(request.getParameter("initialize"))) {
      final String filesPath=Services.getInstance().getConfigurationValue(Services.FILES_PATH);
      try (final Context context=new Context(1000)){
        collectFilesAndStore(context,new File(filesPath + SUBJECTS).toPath(),0);
      }
 catch (      FrameworkException fex) {
        fex.printStackTrace();
      }
      return new RestMethodResult(200);
    }
    final String subjectId=(String)propertySet.get(subjectProperty.jsonName());
    final String objectId=(String)propertySet.get(objectProperty.jsonName());
    final String action=(String)propertySet.get(actionProperty.jsonName());
    final String message=(String)propertySet.get(messageProperty.jsonName());
    if (subjectId != null && objectId != null && action != null) {
      final App app=StructrApp.getInstance(securityContext);
      LogEvent event=null;
      try (final Tx tx=app.tx()){
        final PropertyMap properties=new PropertyMap();
        properties.put(LogEvent.timestampProperty,new Date());
        properties.put(LogEvent.actionProperty,action);
        properties.put(LogEvent.subjectProperty,subjectId);
        properties.put(LogEvent.objectProperty,objectId);
        properties.put(LogEvent.messageProperty,message);
        event=app.create(LogEvent.class,properties);
        tx.success();
      }
       final RestMethodResult result=new RestMethodResult(201);
      result.addContent(event);
      return result;
    }
 else {
      final ErrorBuffer errorBuffer=new ErrorBuffer();
      if (StringUtils.isEmpty(subjectId)) {
        errorBuffer.add("LogFile",new EmptyPropertyToken(subjectProperty));
      }
      if (StringUtils.isEmpty(objectId)) {
        errorBuffer.add("LogFile",new EmptyPropertyToken(objectProperty));
      }
      if (StringUtils.isEmpty(action)) {
        errorBuffer.add("LogFile",new EmptyPropertyToken(actionProperty));
      }
      throw new FrameworkException(422,errorBuffer);
    }
  }
  throw new FrameworkException(500,"No request object present, aborting.");
}
