{
  if (state.doCorrelate()) {
    final List<LogEvent> correlationResult=StructrApp.getInstance(securityContext).nodeQuery(LogEvent.class).and(LogEvent.actionProperty,state.correlationAction).getAsList();
    for (    final LogEvent entry : correlationResult) {
      final String pathSubjectId=state.inverse() ? entry.getSubjectId() : entry.getObjectId();
      final String pathObjectId=state.inverse() ? entry.getObjectId() : entry.getSubjectId();
      final String entryMessage=entry.getMessage();
      if (state.correlationPattern != null) {
        final Matcher matcher=state.correlationPattern.matcher(entryMessage);
        if (matcher.matches()) {
          state.addCorrelationEntry(matcher.group(1),entryMessage);
        }
      }
 else {
        state.addCorrelationEntry(key(pathSubjectId,pathObjectId),entryMessage);
      }
    }
  }
  logger.log(Level.FINE,"No. of correlations: {0}",state.getCorrelations().entrySet().size());
  final List<LogEvent> result=StructrApp.getInstance(securityContext).nodeQuery(LogEvent.class).and(LogEvent.actionProperty,state.logAction).andRange(LogEvent.timestampProperty,new Date(state.beginTimestamp),new Date(state.endTimestamp)).getAsList();
  processData(state,result);
}
