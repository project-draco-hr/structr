{
  int count=0;
  for (  final LogEvent event : result) {
    if ((++count % 100000) == 0) {
      System.out.println(count);
    }
    final String pathSubjectId=state.inverse() ? event.getSubjectId() : event.getObjectId();
    final String pathObjectId=state.inverse() ? event.getObjectId() : event.getSubjectId();
    final long timestamp=event.getTimestamp();
    final String entryAction=event.getAction();
    final String entryMessage=event.getMessage();
    if (timestamp <= state.beginTimestamp()) {
      state.beginTimestamp(timestamp);
    }
    if (timestamp >= state.endTimestamp()) {
      state.endTimestamp(timestamp);
    }
    if (state.overview()) {
      state.countAction(entryAction);
    }
 else {
      if (state.correlates(key(pathSubjectId,pathObjectId),entryMessage)) {
        final Map<String,Object> map=new HashMap<>();
        map.put(subjectProperty.jsonName(),pathSubjectId);
        map.put(objectProperty.jsonName(),pathObjectId);
        map.put(actionProperty.jsonName(),entryAction);
        map.put(timestampProperty.jsonName(),timestamp);
        map.put(messageProperty.jsonName(),entryMessage);
        state.addEntry(map);
      }
    }
  }
}
