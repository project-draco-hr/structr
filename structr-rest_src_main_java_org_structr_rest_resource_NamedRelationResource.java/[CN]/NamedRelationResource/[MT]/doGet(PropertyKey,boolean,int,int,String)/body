{
  final List<GraphObject> relationResults=new LinkedList<GraphObject>();
  if (wrappedResource != null) {
    final List<? extends GraphObject> results=wrappedResource.doGet(sortKey,sortDescending,pageSize,page,offsetId).getResults();
    for (    final GraphObject obj : results) {
      if (obj instanceof AbstractNode) {
        relationResults.addAll(namedRelation.getRelationships(obj));
      }
    }
    final List<SearchAttribute> filterAttributes=extractSearchableAttributes(securityContext,namedRelation.getEntityClass(),request);
    if (!filterAttributes.isEmpty()) {
      final Predicate<GraphObject> predicate=new Predicate<GraphObject>(){
        @Override public boolean evaluate(        final SecurityContext securityContext,        final GraphObject... objs){
          if (objs.length > 0) {
            final GraphObject obj=objs[0];
            for (            final SearchAttribute attr : filterAttributes) {
              final String value=attr.getStringValue();
              final PropertyKey key=attr.getKey();
              final Object val=obj.getProperty(key);
              if (val != null && val.equals(value)) {
                return true;
              }
            }
          }
          return false;
        }
      }
;
      for (final Iterator<GraphObject> it=relationResults.iterator(); it.hasNext(); ) {
        if (!predicate.evaluate(securityContext,it.next())) {
          it.remove();
        }
      }
    }
  }
 else {
    final List<SearchAttribute> searchAttributes=new LinkedList<SearchAttribute>();
    searchAttributes.add(Search.andExactRelType(namedRelation));
    searchAttributes.addAll(extractSearchableAttributes(securityContext,namedRelation.getEntityClass(),request));
    relationResults.addAll(Services.command(securityContext,SearchRelationshipCommand.class).execute(searchAttributes).getResults());
  }
  return PagingHelper.subResult(new Result(relationResults,null,isCollectionResource(),isPrimitiveArray()),pageSize,page,offsetId);
}
