{
  if (StringUtils.startsWith(searchValue,"[") && StringUtils.endsWith(searchValue,"]")) {
    Matcher matcher=rangeQueryPattern.matcher(searchValue);
    if (matcher.matches()) {
      if (matcher.groupCount() == 2) {
        String rangeStart=matcher.group(1);
        String rangeEnd=matcher.group(2);
        try {
          PropertyConverter inputConverter=key.inputConverter(securityContext);
          Object rangeStartConverted=rangeStart;
          Object rangeEndConverted=rangeEnd;
          if (inputConverter != null) {
            rangeStartConverted=inputConverter.convert(rangeStartConverted);
            rangeEndConverted=inputConverter.convert(rangeEndConverted);
          }
          rangeStartConverted=key.getSearchStringValue(rangeStartConverted);
          rangeEndConverted=key.getSearchStringValue(rangeEndConverted);
          return new RangeSearchAttribute(key,rangeStartConverted,rangeEndConverted,SearchOperator.AND);
        }
 catch (        Throwable t) {
          t.printStackTrace();
        }
      }
      return null;
    }
 else {
      final String strippedValue=StringUtils.stripEnd(StringUtils.stripStart(searchValue,"["),"]");
      return Search.andMatchExactValues(key,strippedValue,SearchOperator.OR);
    }
  }
 else   if (StringUtils.startsWith(searchValue,"(") && StringUtils.endsWith(searchValue,")")) {
    final String strippedValue=StringUtils.stripEnd(StringUtils.stripStart(searchValue,"("),")");
    return Search.andMatchExactValues(key,strippedValue,SearchOperator.AND);
  }
 else {
    PropertyConverter inputConverter=key.inputConverter(securityContext);
    Object convertedSearchValue=searchValue;
    if (inputConverter != null) {
      try {
        convertedSearchValue=inputConverter.convert(searchValue);
      }
 catch (      Throwable t) {
        logger.log(Level.WARNING,"Unable to convert search value for key {0}",key);
      }
    }
    return Search.andExactProperty(key,convertedSearchValue);
  }
}
