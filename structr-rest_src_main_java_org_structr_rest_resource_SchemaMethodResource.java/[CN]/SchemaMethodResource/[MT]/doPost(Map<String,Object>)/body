{
  if (wrappedResource != null && wrappedResource instanceof TypeResource) {
    final App app=StructrApp.getInstance(securityContext);
    final TypeResource other=(TypeResource)wrappedResource;
    final Class type=other.getEntityClass();
    if (type != null) {
      try (final Tx tx=app.tx()){
        final Method method=StructrApp.getConfiguration().getExportedMethodsForType(type).get(methodName);
        if (method != null) {
          final SchemaNode schemaNode=app.nodeQuery(SchemaNode.class).andName(method.getDeclaringClass().getSimpleName()).getFirst();
          if (schemaNode != null) {
            final SchemaMethod schemaMethod=app.nodeQuery(SchemaMethod.class).and(SchemaMethod.name,method.getName()).and(SchemaMethod.schemaNode,schemaNode).getFirst();
            if (schemaMethod != null) {
              final String source=schemaMethod.getProperty(SchemaMethod.source);
              if (StringUtils.isNotBlank(source)) {
                final Object obj=Actions.execute(securityContext,null,"${" + source + "}",propertySet);
                if (obj instanceof RestMethodResult) {
                  return (RestMethodResult)obj;
                }
 else {
                  final RestMethodResult result=new RestMethodResult(200);
                  StaticRelationshipResource.unwrapTo(obj,result);
                  return result;
                }
              }
            }
          }
        }
        tx.success();
      }
     }
  }
 else   if (wrappedResource != null && wrappedResource instanceof TypedIdResource) {
    return StaticRelationshipResource.invokeMethod((TypedIdResource)wrappedResource,propertySet,methodName);
  }
  throw new IllegalPathException("Type and method name do not match the given path.");
}
