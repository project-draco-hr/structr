{
  List<GraphObjectMap> resultList=new LinkedList<>();
  for (  String rawType : StructrApp.getConfiguration().getNodeEntities().keySet()) {
    Class type=SchemaHelper.getEntityClassForRawType(rawType);
    GraphObjectMap schema=new GraphObjectMap();
    resultList.add(schema);
    if (type != null) {
      String url="/".concat(CaseHelper.toUnderscore(rawType,true));
      schema.setProperty(new StringProperty("url"),url);
      schema.setProperty(new StringProperty("type"),type.getSimpleName());
      schema.setProperty(new StringProperty("className"),type.getName());
      schema.setProperty(new StringProperty("isRel"),AbstractRelationship.class.isAssignableFrom(type));
      schema.setProperty(new LongProperty("flags"),SecurityContext.getResourceFlags(rawType));
      try {
        SchemaNode schemaNode=StructrApp.getInstance().nodeQuery(SchemaNode.class).andName(type.getSimpleName()).getFirst();
        if (schemaNode != null) {
          final List<SchemaNodeLocalization> nodeLocalizations=schemaNode.localizations.getProperty(securityContext,schemaNode,false);
          final List<Map<String,Object>> localizationsMap=new ArrayList<>(nodeLocalizations.size());
          for (          final SchemaNodeLocalization loc : nodeLocalizations) {
            final HashMap tmpMap=new HashMap(3);
            tmpMap.put("id",loc.getProperty(SchemaNodeLocalization.id));
            tmpMap.put("locale",loc.getProperty(SchemaNodeLocalization.locale));
            tmpMap.put("name",loc.getProperty(SchemaNodeLocalization.name));
            localizationsMap.add(tmpMap);
          }
          schema.setProperty(new GenericProperty("localizations"),localizationsMap);
        }
      }
 catch (      FrameworkException ex) {
        Logger.getLogger(SchemaTypeResource.class.getName()).log(Level.SEVERE,"Error looking up SchemaNode - cannot display labels for properties!",ex);
      }
    }
  }
  return new Result(resultList,resultList.size(),false,false);
}
