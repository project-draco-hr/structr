{
  List<GraphObjectMap> resultList=new LinkedList<>();
  Class type=typeResource.getEntityClass();
  if (type != null) {
    SchemaNode schemaNode=null;
    try {
      schemaNode=StructrApp.getInstance().nodeQuery(SchemaNode.class).andName(type.getSimpleName()).getFirst();
    }
 catch (    FrameworkException ex) {
      Logger.getLogger(SchemaTypeResource.class.getName()).log(Level.SEVERE,"Error looking up SchemaNode - cannot display labels for properties!",ex);
    }
    if (propertyView != null) {
      for (      final Map.Entry<String,Object> entry : getPropertiesForView(type,propertyView,schemaNode).entrySet()) {
        final GraphObjectMap property=new GraphObjectMap();
        for (        final Map.Entry<String,Object> prop : ((Map<String,Object>)entry.getValue()).entrySet()) {
          property.setProperty(new GenericProperty(prop.getKey()),prop.getValue());
        }
        resultList.add(property);
      }
    }
 else {
      final GraphObjectMap schema=new GraphObjectMap();
      resultList.add(schema);
      String url="/".concat(CaseHelper.toUnderscore(rawType,false));
      schema.setProperty(new StringProperty("url"),url);
      schema.setProperty(new StringProperty("type"),type.getSimpleName());
      schema.setProperty(new StringProperty("className"),type.getName());
      schema.setProperty(new BooleanProperty("isRel"),AbstractRelationship.class.isAssignableFrom(type));
      schema.setProperty(new LongProperty("flags"),SecurityContext.getResourceFlags(rawType));
      if (schemaNode != null) {
        final List<SchemaNodeLocalization> nodeLocalizations=schemaNode.localizations.getProperty(securityContext,schemaNode,false);
        final List<GraphObjectMap> localizationsMap=new ArrayList<>(nodeLocalizations.size());
        for (        final SchemaNodeLocalization loc : nodeLocalizations) {
          final GraphObjectMap tmpMap=new GraphObjectMap();
          tmpMap.setProperty(new UuidProperty(),loc.getProperty(SchemaNodeLocalization.id));
          tmpMap.setProperty(new StringProperty("locale"),loc.getProperty(SchemaNodeLocalization.locale));
          tmpMap.setProperty(new StringProperty("name"),loc.getProperty(SchemaNodeLocalization.name));
          localizationsMap.add(tmpMap);
        }
        schema.setProperty(new GenericProperty("localizations"),localizationsMap);
      }
      Set<String> propertyViews=new LinkedHashSet<>(StructrApp.getConfiguration().getPropertyViews());
      Map<String,Map<String,Object>> views=new TreeMap();
      schema.setProperty(new GenericProperty("views"),views);
      for (      String view : propertyViews) {
        views.put(view,getPropertiesForView(type,view,schemaNode));
      }
    }
  }
  return new Result(resultList,resultList.size(),false,false);
}
