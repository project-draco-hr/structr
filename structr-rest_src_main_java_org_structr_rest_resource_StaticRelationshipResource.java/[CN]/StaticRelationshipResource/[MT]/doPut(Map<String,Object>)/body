{
  final List<? extends GraphObject> results=typedIdResource.doGet(null,false,NodeFactory.DEFAULT_PAGE_SIZE,NodeFactory.DEFAULT_PAGE,null).getResults();
  final App app=StructrApp.getInstance(securityContext);
  if (results != null) {
    if (propertyKey != null && propertyKey instanceof RelationProperty) {
      final GraphObject sourceEntity=typedIdResource.getEntity();
      if (sourceEntity != null) {
        if (propertyKey.isReadOnly()) {
          logger.log(Level.INFO,"Read-only property on {1}: {0}",new Object[]{sourceEntity.getClass(),typeResource.getRawType()});
          return new RestMethodResult(HttpServletResponse.SC_FORBIDDEN);
        }
        final List<GraphObject> nodes=new LinkedList<>();
        for (        final Object obj : propertySet.values()) {
          nodes.add(app.getNodeById(obj.toString()));
        }
        sourceEntity.setProperty(propertyKey,nodes);
      }
    }
  }
  return new RestMethodResult(HttpServletResponse.SC_OK);
}
