{
  final Map<String,ServletHolder> servlets=new LinkedHashMap<>();
  final String servletNameList=properties.getProperty(SERVLETS,"");
  if (servletNameList != null) {
    for (    String servletName : servletNameList.split("[ \\t]+")) {
      final String servletClassName=properties.getProperty(servletName.concat(".class"));
      if (servletClassName != null) {
        final String servletPath=properties.getProperty(servletName.concat(".path"));
        if (servletPath != null) {
          final HttpServiceServlet servlet=(HttpServiceServlet)Class.forName(servletClassName).newInstance();
          servlet.getConfig().initializeFromProperties(properties,servletName,resourceProviders);
          if (servletPath.endsWith("*")) {
            servlets.put(servletPath,new ServletHolder(servlet));
          }
 else {
            servlets.put(servletPath + "/*",new ServletHolder(servlet));
          }
        }
 else {
          logger.log(Level.WARNING,"Unable to register servlet {0}, missing {0}.path",servletName);
        }
      }
 else {
        logger.log(Level.WARNING,"Unable to register servlet {0}, missing {0}.class",servletName);
      }
    }
  }
 else {
    logger.log(Level.WARNING,"No servlets configured for HttpService.");
  }
  return servlets;
}
