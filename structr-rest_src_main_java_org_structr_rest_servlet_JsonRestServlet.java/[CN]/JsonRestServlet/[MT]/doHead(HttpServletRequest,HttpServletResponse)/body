{
  SecurityContext securityContext=null;
  Authenticator authenticator=null;
  RestMethodResult result=null;
  try {
    try (final TransactionCommand cmd=StructrApp.getInstance().beginTx()){
      authenticator=getAuthenticator();
      securityContext=authenticator.initializeAndExamineRequest(request,response);
      cmd.commitTx();
    }
     request.setCharacterEncoding("UTF-8");
    response.setCharacterEncoding("UTF-8");
    response.setContentType("application/json; charset=UTF-8");
    List<Resource> chain=ResourceHelper.parsePath(securityContext,request,resourceMap,propertyView,defaultIdProperty);
    Resource resource=ResourceHelper.optimizeNestedResourceChain(chain,defaultIdProperty);
    String resourceSignature=resource.getResourceSignature();
    try (final TransactionCommand cmd=StructrApp.getInstance().beginTx()){
      authenticator.checkResourceAccess(request,resourceSignature,propertyView.get(securityContext));
      cmd.commitTx();
    }
     try (final TransactionCommand cmd=StructrApp.getInstance().beginTx()){
      result=resource.doHead();
      cmd.commitTx();
    }
     try (final TransactionCommand cmd=StructrApp.getInstance().beginTx()){
      result.commitResponse(gson.get(),response);
      cmd.commitTx();
    }
   }
 catch (  FrameworkException frameworkException) {
    response.setStatus(frameworkException.getStatus());
    gson.get().toJson(frameworkException,response.getWriter());
    response.getWriter().println();
  }
catch (  JsonSyntaxException jsex) {
    logger.log(Level.WARNING,"JsonSyntaxException in HEAD",jsex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in HEAD: " + jsex.getMessage()));
  }
catch (  JsonParseException jpex) {
    logger.log(Level.WARNING,"JsonParseException in HEAD",jpex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in HEAD: " + jpex.getMessage()));
  }
catch (  Throwable t) {
    logger.log(Level.WARNING,"Exception in HEAD",t);
    int code=HttpServletResponse.SC_INTERNAL_SERVER_ERROR;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in HEAD: " + t.getMessage()));
  }
 finally {
    try {
      response.getWriter().flush();
      response.getWriter().close();
    }
 catch (    Throwable t) {
      logger.log(Level.WARNING,"Unable to flush and close response: {0}",t.getMessage());
    }
    securityContext.cleanUp();
  }
}
