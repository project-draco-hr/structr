{
  final String projectNodeId=createSchemaNode("Project",new Pair("_name","+String!"));
  final String taskNodeId=createSchemaNode("Task",new Pair("_name","+String"));
  createSchemaRelationships(projectNodeId,taskNodeId,"TASK","1","*","project","tasks",Relation.NONE,Relation.SOURCE_TO_TARGET);
  RestAssured.given().contentType("application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(201)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).body("{name:Project1,tasks:[{name:Task1}]}").expect().statusCode(422).when().post("/projects");
  RestAssured.given().contentType("application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(201)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).body("{name:Task2,project:{name:Project2}}").expect().statusCode(422).when().post("/tasks");
}
