{
  List<TestOne> testOnes=new LinkedList<>();
  try (final Tx tx=StructrApp.getInstance().tx()){
    createEntityAsSuperUser("/resource_access","{'signature': 'TestOne', 'flags': 4095}");
    List<TestUser> users=createTestNodes(TestUser.class,2);
    users.get(0).setProperty(TestUser.name,"user1");
    users.get(0).setProperty(TestUser.password,"user1");
    users.get(1).setProperty(TestUser.name,"user2");
    users.get(1).setProperty(TestUser.password,"user2");
    users.get(1).setProperty(TestUser.isAdmin,true);
    testOnes=createTestNodes(TestOne.class,3);
    int i=0;
    for (    TestOne t : testOnes) {
      i++;
      t.setProperty(TestOne.name,"t-one-" + i);
      t.setProperty(TestOne.owner,users.get(0));
      t.setProperty(TestOne.visibleToAuthenticatedUsers,true);
    }
    tx.success();
  }
 catch (  FrameworkException ex) {
    logger.log(Level.WARNING,"",ex);
    fail(ex.getMessage());
  }
  RestAssured.given().contentType("application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(200)).header("X-User","user1").header("X-Password","user1").expect().statusCode(200).body("result",hasSize(1)).body("result_count",equalTo(3)).when().get("/test_ones?pageSize=1&page=1");
  RestAssured.given().contentType("application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(200)).header("X-User","user2").header("X-Password","user2").expect().statusCode(200).body("result",hasSize(1)).body("result_count",equalTo(3)).when().get("/test_ones?pageSize=1&page=1");
  try (final Tx tx=StructrApp.getInstance().tx()){
    testOnes.get(0).setProperty(TestOne.name,"deleted");
    testOnes.get(0).setProperty(TestOne.deleted,true);
    tx.success();
  }
 catch (  FrameworkException ex) {
    logger.log(Level.WARNING,"",ex);
    fail(ex.getMessage());
  }
  RestAssured.given().contentType("application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(200)).header("X-User","user2").header("X-Password","user2").expect().statusCode(200).body("result",hasSize(1)).body("result_count",equalTo(3)).when().get("/test_ones?sort=name&pageSize=1&page=1");
}
