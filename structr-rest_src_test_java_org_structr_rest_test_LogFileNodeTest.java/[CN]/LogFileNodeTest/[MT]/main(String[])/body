{
  final Random random=new Random(System.currentTimeMillis());
  final List<String> subjectIds=new ArrayList<>();
  final List<String> objectIds=new ArrayList<>();
  final int num=10;
  for (int i=0; i < num; i++) {
    final String id1=StringUtils.replace(UUID.randomUUID().toString(),"-","");
    final String id2=StringUtils.replace(UUID.randomUUID().toString(),"-","");
    subjectIds.add(id1);
    objectIds.add(id2);
    System.out.println(id1);
    System.out.println(id2);
  }
  for (int i=0; i < num; i++) {
    for (int j=i + 1; j < num; j++) {
      final String id1=subjectIds.get(i);
      final String id2=objectIds.get(j);
      for (int k=0; k < 100; k++) {
        final String action=ACTIONS[random.nextInt(5)];
        RestAssured.given().contentType("application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).header("X-User","admin").header("X-Password","admin").body("{ 'subject': '" + id1 + "', 'object': '"+ id2+ "', 'action': '"+ action+ "', 'message': '"+ id1+ id2+ "' }").expect().statusCode(200).when().post("http://localhost:8082/structr/rest/log");
      }
    }
  }
}
