{
  try {
    final StructrConf config=Services.getBaseConfiguration();
    config.setProperty(Services.CONFIGURED_SERVICES,"NodeService LogService FtpService HttpService");
    config.setProperty(Services.CONFIGURATION,JarConfigurationProvider.class.getName());
    config.setProperty(HttpService.APPLICATION_TITLE,"Structr UI");
    config.setProperty(HttpService.SERVLETS,"JsonRestServlet WebSocketServlet CsvServlet HtmlServlet");
    config.setProperty("JsonRestServlet.class",JsonRestServlet.class.getName());
    config.setProperty("JsonRestServlet.path","/structr/rest/*");
    config.setProperty("JsonRestServlet.resourceprovider",UiResourceProvider.class.getName());
    config.setProperty("JsonRestServlet.authenticator",UiAuthenticator.class.getName());
    config.setProperty("JsonRestServlet.user.class",User.class.getName());
    config.setProperty("JsonRestServlet.user.autocreate","false");
    config.setProperty("JsonRestServlet.defaultview",PropertyView.Public);
    config.setProperty("JsonRestServlet.outputdepth","3");
    config.setProperty("WebSocketServlet.class",WebSocketServlet.class.getName());
    config.setProperty("WebSocketServlet.path","/structr/ws/*");
    config.setProperty("WebSocketServlet.resourceprovider",UiResourceProvider.class.getName());
    config.setProperty("WebSocketServlet.authenticator",UiAuthenticator.class.getName());
    config.setProperty("WebSocketServlet.user.class",User.class.getName());
    config.setProperty("WebSocketServlet.user.autocreate","false");
    config.setProperty("WebSocketServlet.defaultview",PropertyView.Public);
    config.setProperty("CsvServlet.class",CsvServlet.class.getName());
    config.setProperty("CsvServlet.path","/structr/csv/*");
    config.setProperty("CsvServlet.resourceprovider",UiResourceProvider.class.getName());
    config.setProperty("CsvServlet.authenticator",UiAuthenticator.class.getName());
    config.setProperty("CsvServlet.user.class",User.class.getName());
    config.setProperty("CsvServlet.user.autocreate","false");
    config.setProperty("CsvServlet.defaultview",PropertyView.Public);
    config.setProperty("CsvServlet.outputdepth","3");
    config.setProperty("UploadServlet.class",UploadServlet.class.getName());
    config.setProperty("UploadServlet.path","/structr/upload");
    config.setProperty("UploadServlet.resourceprovider",UiResourceProvider.class.getName());
    config.setProperty("UploadServlet.authenticator",UiAuthenticator.class.getName());
    config.setProperty("UploadServlet.user.class",User.class.getName());
    config.setProperty("UploadServlet.user.autocreate","false");
    config.setProperty("UploadServlet.defaultview",PropertyView.Public);
    config.setProperty("UploadServlet.outputdepth","3");
    config.setProperty("HtmlServlet.class",HtmlServlet.class.getName());
    config.setProperty("HtmlServlet.path","/structr/html/*");
    config.setProperty("HtmlServlet.resourceprovider",UiResourceProvider.class.getName());
    config.setProperty("HtmlServlet.authenticator",UiAuthenticator.class.getName());
    config.setProperty("HtmlServlet.user.class",User.class.getName());
    config.setProperty("HtmlServlet.user.autocreate","false");
    config.setProperty("HtmlServlet.defaultview",PropertyView.Public);
    config.setProperty("HtmlServlet.outputdepth","3");
    config.setProperty(HttpService.RESOURCE_HANDLERS,"StructrUiHandler");
    config.setProperty("StructrUiHandler.contextPath","/structr");
    config.setProperty("StructrUiHandler.resourceBase","src/main/resources/structr");
    config.setProperty("StructrUiHandler.directoriesListed",Boolean.toString(false));
    config.setProperty("StructrUiHandler.welcomeFiles","index.html");
    final Services services=Services.getInstance(config);
    do {
      try {
        Thread.sleep(100);
      }
 catch (      Throwable t) {
      }
    }
 while (!services.isInitialized());
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
