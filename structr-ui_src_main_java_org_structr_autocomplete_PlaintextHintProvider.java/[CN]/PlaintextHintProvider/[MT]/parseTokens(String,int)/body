{
  final int length=cursorPosition != -1 && cursorPosition < source.length() ? cursorPosition : source.length();
  final List<String> tokens=new ArrayList<>();
  final StringBuilder buf=new StringBuilder();
  boolean currentIsLetter=false;
  boolean lastWasLetter=false;
  for (int i=0; i < length; i++) {
    final char c=source.charAt(i);
    lastWasLetter=currentIsLetter;
    currentIsLetter=Character.isDigit(c) || Character.isLetter(c) || c == '_';
    if (lastWasLetter != currentIsLetter) {
      tokens.add(buf.toString().trim());
      buf.setLength(0);
    }
    buf.append(c);
  }
  tokens.add(buf.toString().trim());
  int len=tokens.size();
  for (int i=1; i < len; i++) {
    final String token=tokens.get(i);
    final String before=tokens.get(i - 1);
    if (i + 1 < len) {
      final String after=tokens.get(i + 1);
      if (".".equals(token) && !".".equals(before) && !".".equals(after)) {
        tokens.remove(i);
        len-=1;
      }
    }
  }
  return tokens;
}
