{
  final TypeDefinitionFactory factory=TypeDefinitionFactory.newInstance();
  final String typeName=type.getSimpleName();
  MutableTypeDefinition result=null;
  try {
    final GraphObject obj=type.newInstance();
    if (obj != null) {
      final CMISInfo info=obj.getCMISInfo();
      if (info != null) {
        final BaseTypeId baseTypeId=info.getBaseTypeId();
        if (baseTypeId != null) {
switch (baseTypeId) {
case CMIS_DOCUMENT:
            result=getDocumentTypeDefinition(typeName,includePropertyDefinitions,false);
          break;
case CMIS_FOLDER:
        result=getFolderTypeDefinition(typeName,includePropertyDefinitions,false);
      break;
case CMIS_ITEM:
    result=getItemTypeDefinition(typeName,includePropertyDefinitions,false);
  break;
case CMIS_POLICY:
result=getPolicyTypeDefinition(typeName,includePropertyDefinitions,false);
break;
case CMIS_RELATIONSHIP:
result=getRelationshipTypeDefinition(typeName,includePropertyDefinitions,false);
break;
case CMIS_SECONDARY:
result=getSecondaryTypeDefinition(typeName,includePropertyDefinitions,false);
break;
}
if (result != null) {
for (final PropertyKey key : StructrApp.getConfiguration().getPropertySet(type,PropertyView.All)) {
if (key.isDynamic() || key.isCMISProperty()) {
final PropertyType dataType=key.getDataType();
if (dataType != null) {
final String propertyId=key.jsonName();
final String displayName=propertyId;
final String description=StringUtils.capitalize(propertyId);
final Class declaringClass=key.getDeclaringClass();
final boolean isInherited=!type.getSimpleName().equals(declaringClass.getSimpleName());
final Cardinality cardinality=Cardinality.SINGLE;
final Updatability updatability=Updatability.READWRITE;
final boolean required=key.isNotNull();
final boolean queryable=key.isIndexed();
final boolean orderable=key.isIndexed();
result.addPropertyDefinition(factory.createPropertyDefinition(propertyId,displayName,description,dataType,cardinality,updatability,isInherited,required,queryable,orderable));
}
}
}
}
}
}
}
}
 catch (final IllegalAccessException|InstantiationException iex) {
iex.printStackTrace();
}
return result;
}
