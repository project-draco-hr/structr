{
  final List<TypeDefinitionContainer> results=new LinkedList<>();
  if (typeId != null) {
    final BaseTypeId baseTypeId=getBaseTypeId(typeId);
    if (baseTypeId != null) {
      final TypeDefinition typeDefinition=getTypeDefinition(repositoryId,typeId,extension);
      final TypeDefinitionContainer container=getTypeDefinitionContainer(typeDefinition,includePropertyDefinitions);
      results.add(container);
    }
 else {
      final Class type=StructrApp.getConfiguration().getNodeEntityClass(typeId);
      if (type != null) {
        final TypeDefinition typeDefinition=extendTypeDefinition(type,includePropertyDefinitions);
        if (typeDefinition != null) {
          results.add(getTypeDefinitionContainer(typeDefinition,includePropertyDefinitions));
        }
 else {
          throw new CmisObjectNotFoundException("Type with ID " + typeId + " does not exist");
        }
      }
 else {
        throw new CmisObjectNotFoundException("Type with ID " + typeId + " does not exist");
      }
    }
  }
 else {
    results.add(getTypeDefinitionContainer(getDocumentTypeDefinition(BaseTypeId.CMIS_DOCUMENT.value(),includePropertyDefinitions,true),includePropertyDefinitions));
    results.add(getTypeDefinitionContainer(getFolderTypeDefinition(BaseTypeId.CMIS_FOLDER.value(),includePropertyDefinitions,true),includePropertyDefinitions));
    results.add(getTypeDefinitionContainer(getItemTypeDefinition(BaseTypeId.CMIS_ITEM.value(),includePropertyDefinitions,true),includePropertyDefinitions));
    results.add(getTypeDefinitionContainer(getPolicyTypeDefinition(BaseTypeId.CMIS_POLICY.value(),includePropertyDefinitions,true),includePropertyDefinitions));
    results.add(getTypeDefinitionContainer(getRelationshipTypeDefinition(BaseTypeId.CMIS_RELATIONSHIP.value(),includePropertyDefinitions,true),includePropertyDefinitions));
    results.add(getTypeDefinitionContainer(getSecondaryTypeDefinition(BaseTypeId.CMIS_SECONDARY.value(),includePropertyDefinitions,true),includePropertyDefinitions));
  }
  return results;
}
