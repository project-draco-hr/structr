{
  if (arrayHasMinLengthAndMaxLengthAndAllElementsNotNull(sources,1,2)) {
    try {
      final String source=sources[0].toString();
      final String selector=sources[1].toString();
      final List<Map<String,Object>> objects=new MicroformatParser().parse(source,selector);
      final List<GraphObjectMap> elements=new LinkedList<>();
      for (      final Map<String,Object> map : objects) {
        final GraphObjectMap obj=new GraphObjectMap();
        elements.add(obj);
        recursivelyConvertMapToGraphObjectMap(obj,map,0);
      }
      return elements;
    }
 catch (    Throwable t) {
      logException(t,"{0}: Exception for parameter: {1}",new Object[]{getName(),getParametersAsString(sources)});
    }
    return "";
  }
 else {
    logParameterError(sources,ctx.isJavaScriptContext());
  }
  return usage(ctx.isJavaScriptContext());
}
