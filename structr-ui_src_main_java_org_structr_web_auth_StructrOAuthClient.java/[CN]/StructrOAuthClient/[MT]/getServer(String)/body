{
  String configuredOauthServers=StructrApp.getConfigurationValue(CONFIGURED_OAUTH_SERVERS,"twitter facebook google github stackoverflow");
  String[] authServers=configuredOauthServers.split(" ");
  for (  String authServer : authServers) {
    if (authServer.equals(name)) {
      String authLocation=StructrApp.getConfigurationValue("oauth." + authServer + ".authorization_location",null);
      String tokenLocation=StructrApp.getConfigurationValue("oauth." + authServer + ".token_location",null);
      String clientId=StructrApp.getConfigurationValue("oauth." + authServer + ".client_id",null);
      String clientSecret=StructrApp.getConfigurationValue("oauth." + authServer + ".client_secret",null);
      String redirectUri=StructrApp.getConfigurationValue("oauth." + authServer + ".redirect_uri",null);
      if (clientId != null && clientSecret != null && redirectUri != null) {
        Class serverClass=getServerClassForName(name);
        Class tokenResponseClass=getTokenResponseClassForName(name);
        StructrOAuthClient oauthServer;
        try {
          oauthServer=(StructrOAuthClient)serverClass.newInstance();
          oauthServer.init(authLocation,tokenLocation,clientId,clientSecret,redirectUri,tokenResponseClass);
          logger.info("Using OAuth server {}",oauthServer);
          return oauthServer;
        }
 catch (        Throwable t) {
          logger.error("Could not instantiate auth server",t);
        }
      }
    }
  }
  return null;
}
