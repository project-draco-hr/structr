{
  if (hasDataForKey(key)) {
    return getDataNode(key);
  }
  if ("this".equals(key)) {
    logger.log(Level.WARNING,"Deprecated use of this keyword in RenderContext, unhappily returning the deprecated result..");
    return getDataObject();
  }
  Object value=super.evaluate(securityContext,entity,key,data,defaultValue);
  if (value == null) {
    if (data != null) {
switch (key) {
case "link":
        if (data instanceof AbstractNode) {
          ResourceLink rel=((AbstractNode)data).getOutgoingRelationship(ResourceLink.class);
          if (rel != null) {
            return rel.getTargetNode();
          }
        }
    }
  }
 else {
switch (key) {
case "current":
      return getDetailsDataObject();
case "template":
    if (entity instanceof DOMNode) {
      return ((DOMNode)entity).getClosestTemplate(getPage());
    }
  break;
case "page":
return getPage();
case "parent":
if (entity instanceof DOMNode) {
return ((DOMNode)entity).getParentNode();
}
break;
case "children":
if (entity instanceof DOMNode) {
final Template template=((DOMNode)entity).getClosestTemplate(getPage());
if (template != null) {
return template.getChildNodes();
}
}
break;
case "link":
if (entity instanceof NodeInterface) {
final ResourceLink rel=((NodeInterface)entity).getOutgoingRelationship(ResourceLink.class);
if (rel != null) {
return rel.getTargetNode();
}
}
break;
case "host":
return securityContext.getRequest().getServerName();
case "port":
return securityContext.getRequest().getServerPort();
case "path_info":
return securityContext.getRequest().getPathInfo();
case "result_count":
case "result_size":
Result sizeResult=this.getResult();
if (sizeResult != null) {
return sizeResult.getRawResultCount();
}
break;
case "page_size":
Result pageSizeResult=this.getResult();
if (pageSizeResult != null) {
return pageSizeResult.getPageSize();
}
break;
case "page_count":
Result pageCountResult=this.getResult();
if (pageCountResult != null) {
Integer pageCount=result.getPageCount();
if (pageCount != null) {
return pageCount;
}
 else {
return 1;
}
}
break;
case "page_no":
Result pageNoResult=this.getResult();
if (pageNoResult != null) {
return pageNoResult.getPage();
}
break;
}
}
}
return value;
}
