{
  final String DEFAULT_VALUE_SEP="!";
  final String[] parts=refKey.split("[\\.]+");
  String referenceKey=parts[parts.length - 1];
  String defaultValue=null;
  if (StringUtils.contains(referenceKey,DEFAULT_VALUE_SEP)) {
    String[] ref=StringUtils.split(referenceKey,DEFAULT_VALUE_SEP);
    referenceKey=ref[0];
    if (ref.length > 1) {
      defaultValue=ref[1];
    }
 else {
      defaultValue="";
    }
  }
  Page _page=this.getPage();
  GraphObject _data=null;
  for (int i=0; (i < parts.length); i++) {
    String part=parts[i];
    if (_data != null) {
      Object value=_data.getProperty(StructrApp.getConfiguration().getPropertyKeyForJSONName(_data.getClass(),part));
      if (value instanceof GraphObject) {
        _data=(GraphObject)value;
        continue;
      }
      if (i > 0 && "size".equals(part)) {
        Object val=_data.getProperty(StructrApp.getConfiguration().getPropertyKeyForJSONName(_data.getClass(),parts[i - 1]));
        if (val instanceof List) {
          return ((List)val).size();
        }
      }
      if ("link".equals(part) && _data instanceof AbstractNode) {
        ResourceLink rel=((AbstractNode)_data).getOutgoingRelationship(ResourceLink.class);
        if (rel != null) {
          _data=rel.getTargetNode();
          break;
        }
        continue;
      }
      if (value == null) {
        return null;
      }
    }
    if (this.hasDataForKey(part)) {
      _data=this.getDataNode(part);
      continue;
    }
    if ("request".equals(part)) {
      HttpServletRequest request=this.getRequest();
      if (request != null) {
        if (StringUtils.contains(refKey,"!")) {
          return StringUtils.defaultIfBlank(request.getParameter(referenceKey),defaultValue);
        }
 else {
          return StringUtils.defaultString(request.getParameter(referenceKey));
        }
      }
    }
    if ("now".equals(part)) {
      return AbstractNode.createdDate.inputConverter(securityContext).revert(new Date());
    }
    if ("me".equals(part)) {
      Principal me=(Principal)securityContext.getUser(false);
      if (me != null) {
        _data=me;
        continue;
      }
    }
    if ("true".equals(part)) {
      return true;
    }
    if ("false".equals(part)) {
      return false;
    }
    if (_data == null) {
      if ("id".equals(part)) {
        GraphObject detailsObject=this.getDetailsDataObject();
        if (detailsObject != null) {
          return detailsObject.getUuid();
        }
      }
      if ("current".equals(part)) {
        GraphObject detailsObject=this.getDetailsDataObject();
        if (detailsObject != null) {
          _data=detailsObject;
          continue;
        }
      }
      if ("this".equals(part)) {
        _data=this.getDataObject();
        continue;
      }
      if ("element".equals(part)) {
        _data=entity;
        continue;
      }
      if ("page".equals(part)) {
        _data=_page;
        continue;
      }
      if ("link".equals(part)) {
        ResourceLink rel=entity.getOutgoingRelationship(ResourceLink.class);
        if (rel != null) {
          _data=rel.getTargetNode();
          continue;
        }
      }
      if ("parent".equals(part)) {
        _data=(DOMNode)((DOMNode)entity).getParentNode();
        continue;
      }
      if ("owner".equals(part)) {
        Ownership rel=entity.getIncomingRelationship(PrincipalOwnsNode.class);
        if (rel != null) {
          _data=rel.getSourceNode();
        }
        continue;
      }
      if ("result_count".equals(part) || "result_size".equals(part)) {
        Result result=this.getResult();
        if (result != null) {
          return result.getRawResultCount();
        }
      }
      if ("page_size".equals(part)) {
        Result result=this.getResult();
        if (result != null) {
          return result.getPageSize();
        }
      }
      if ("page_count".equals(part)) {
        Result result=this.getResult();
        Integer pageCount=result.getPageCount();
        if (pageCount != null) {
          return pageCount;
        }
 else {
          return 1;
        }
      }
      if ("page_no".equals(part)) {
        Result result=this.getResult();
        if (result != null) {
          return result.getPage();
        }
      }
    }
  }
  if (_data != null) {
    PropertyKey referenceKeyProperty=StructrApp.getConfiguration().getPropertyKeyForJSONName(_data.getClass(),referenceKey);
    Object value=_data.getProperty(referenceKeyProperty);
    PropertyConverter converter=referenceKeyProperty.inputConverter(securityContext);
    if (value != null && converter != null) {
      value=converter.revert(value);
    }
    return value != null ? value : defaultValue;
  }
  return null;
}
