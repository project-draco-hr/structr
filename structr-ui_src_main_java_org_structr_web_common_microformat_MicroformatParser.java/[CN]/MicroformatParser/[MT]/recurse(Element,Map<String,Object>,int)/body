{
  final Tag tag=element.tag();
  final Set<String> classes=element.classNames();
  final String link=element.attr("href");
  final Object content=extractChildContent(element);
  if (!classes.isEmpty()) {
    removeEmpty(classes);
    if (tag.isBlock()) {
      if (depth == 0) {
        values.put("type",classes);
        for (        final Element child : element.children()) {
          recurse(child,values,depth + 1);
        }
      }
 else {
        final Map<String,Object> childMap=new LinkedHashMap<>();
        values.put(classes.iterator().next(),childMap);
        if (content != null) {
          childMap.put("name",content);
        }
        for (        final Element child : element.children()) {
          recurse(child,childMap,depth + 1);
        }
      }
    }
 else     if (tag.isInline()) {
      if (classes.contains("url") && StringUtils.isNotBlank(link)) {
        values.put("url",link);
        classes.remove("url");
      }
      if (content != null) {
        for (        final String type : classes) {
          values.put(type,content);
        }
      }
    }
  }
}
