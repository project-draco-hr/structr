{
  checkWriteAccess();
  String text=getProperty(content);
  if (text != null) {
    int len=text.length();
    if (offset < 0 || offset > len) {
      throw new DOMException(DOMException.INDEX_SIZE_ERR,INDEX_SIZE_ERR_MESSAGE);
    }
 else {
      final String firstPart=text.substring(0,offset);
      final String secondPart=text.substring(offset);
      final Document document=getOwnerDocument();
      final HtmlElement parent=getParent();
      if (document != null && parent != null) {
        try {
          return Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction<Text>(){
            @Override public Text execute() throws FrameworkException {
              setProperty(content,firstPart);
              return document.createTextNode(secondPart);
            }
          }
);
        }
 catch (        FrameworkException fex) {
          throw new DOMException(DOMException.INVALID_STATE_ERR,fex.toString());
        }
      }
 else {
        throw new DOMException(DOMException.INVALID_STATE_ERR,CANNOT_SPLIT_TEXT_WITHOUT_PARENT);
      }
    }
  }
  throw new DOMException(DOMException.INDEX_SIZE_ERR,INDEX_SIZE_ERR_MESSAGE);
}
