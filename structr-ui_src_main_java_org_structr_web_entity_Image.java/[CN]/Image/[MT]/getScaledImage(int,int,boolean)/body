{
  Iterable<Thumbnails> thumbnailRelationships=getThumbnailRelationships();
  final List<Image> oldThumbnails=new LinkedList();
  Image thumbnail=null;
  final Image originalImage=this;
  Integer origWidth=originalImage.getWidth();
  Integer origHeight=originalImage.getHeight();
  Long currentChecksum=originalImage.getProperty(Image.checksum);
  final Long newChecksum;
  if (currentChecksum == null || currentChecksum == 0) {
    newChecksum=FileHelper.getChecksum(originalImage);
  }
 else {
    newChecksum=currentChecksum;
  }
  if ((origWidth != null) && (origHeight != null) && thumbnailRelationships != null) {
    for (    final Thumbnails r : thumbnailRelationships) {
      Integer w=(Integer)r.getProperty(Image.width);
      Integer h=(Integer)r.getProperty(Image.height);
      if ((w != null) && (h != null)) {
        if (((w == maxWidth) && (h <= maxHeight)) || ((w <= maxWidth) && (h == maxHeight)) || ((origWidth <= w) && (origHeight <= h))) {
          thumbnail=(Image)r.getTargetNode();
          Long storedChecksum=r.getProperty(Image.checksum);
          if (storedChecksum != null && storedChecksum.equals(newChecksum)) {
            return thumbnail;
          }
 else {
            oldThumbnails.add(thumbnail);
          }
        }
      }
    }
  }
  logger.log(Level.FINE,"Creating thumbnail for {0}",getName());
  final App app=StructrApp.getInstance(securityContext);
  try {
    originalImage.setProperty(File.checksum,newChecksum);
    Thumbnail thumbnailData=ImageHelper.createThumbnail(originalImage,maxWidth,maxHeight,cropToFit);
    if (thumbnailData != null) {
      Integer tnWidth=thumbnailData.getWidth();
      Integer tnHeight=thumbnailData.getHeight();
      byte[] data=null;
      try {
        data=thumbnailData.getBytes();
        final String thumbnailName=originalImage.getName() + "_thumb_" + tnWidth+ "x"+ tnHeight;
        thumbnail=ImageHelper.createImage(securityContext,data,"image/" + Thumbnail.FORMAT,Image.class,thumbnailName,true);
      }
 catch (      IOException ex) {
        logger.log(Level.WARNING,"Could not create thumbnail image",ex);
      }
      if (thumbnail != null && data != null) {
        Thumbnails thumbnailRelationship=app.create(originalImage,thumbnail,Thumbnails.class);
        thumbnailRelationship.setProperty(AbstractRelationship.cascadeDelete,Relation.SOURCE_TO_TARGET);
        long size=data.length;
        thumbnail.setProperty(File.size,size);
        thumbnail.setProperty(Image.width,tnWidth);
        thumbnail.setProperty(Image.height,tnHeight);
        thumbnail.setProperty(AbstractNode.hidden,originalImage.getProperty(AbstractNode.hidden));
        thumbnail.setProperty(AbstractNode.visibleToAuthenticatedUsers,originalImage.getProperty(AbstractNode.visibleToAuthenticatedUsers));
        thumbnail.setProperty(AbstractNode.visibleToPublicUsers,originalImage.getProperty(AbstractNode.visibleToPublicUsers));
        thumbnail.setProperty(AbstractNode.owner,originalImage.getProperty(AbstractNode.owner));
        thumbnailRelationship.setProperty(Image.width,tnWidth);
        thumbnailRelationship.setProperty(Image.height,tnHeight);
        thumbnailRelationship.setProperty(Image.checksum,newChecksum);
        for (        Image tn : oldThumbnails) {
          tn.setProperty(deleted,true);
        }
      }
    }
 else {
      logger.log(Level.FINE,"Could not create thumbnail for image {0} ({1})",new Object[]{getName(),getUuid()});
    }
  }
 catch (  FrameworkException fex) {
    logger.log(Level.WARNING,"Unable to create thumbnail",fex);
  }
  return thumbnail;
}
