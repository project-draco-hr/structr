{
  HttpServletRequest request=renderContext.getRequest();
  Page page=renderContext.getPage();
  double startSearchResultView=System.nanoTime();
  String searchString=(String)request.getParameter("search");
  if (StringUtils.isNotBlank(searchString)) {
    for (    Page resultPage : getResultPages(securityContext,page)) {
      List<AbstractRelationship> rels=resultPage.getChildRelationships();
      for (      AbstractRelationship rel : rels) {
        DOMElement subNode=(DOMElement)rel.getTargetNode();
        if (subNode.isNotDeleted() && subNode.isNotDeleted()) {
          subNode.render(securityContext,renderContext,depth + 1);
        }
      }
    }
  }
  double endSearchResultView=System.nanoTime();
  logger.log(Level.FINE,"Get graph objects for search {0} in {1} seconds",new java.lang.Object[]{searchString,decimalFormat.format((endSearchResultView - startSearchResultView) / 1000000000.0)});
}
