{
  try {
    final EditMode edit=renderContext.getEditMode(securityContext.getUser(false));
    if (EditMode.DEPLOYMENT.equals(edit)) {
      final AsyncBuffer buf=renderContext.getBuffer();
      renderDeploymentExportComments(buf,true);
      buf.append(escapeForHtmlAttributes(getProperty(Content.content)));
      return;
    }
    if (isDeleted() || isHidden() || !displayForLocale(renderContext)|| !displayForConditions(renderContext)) {
      return;
    }
    final String id=getUuid();
    final boolean inBody=renderContext.inBody();
    final AsyncBuffer out=renderContext.getBuffer();
    String _contentType=getProperty(contentType);
    String _content=getPropertyWithVariableReplacement(renderContext,Content.content);
    if (!(EditMode.RAW.equals(edit) || EditMode.WIDGET.equals(edit)) && (_contentType == null || ("text/plain".equals(_contentType)))) {
      _content=escapeForHtml(_content);
    }
    if (EditMode.CONTENT.equals(edit) && inBody && this.isGranted(Permission.write,securityContext)) {
      if ("text/javascript".equals(_contentType)) {
        out.append("// data-structr-type='").append(getType()).append("'\n// data-structr-id='").append(id).append("'\n");
      }
 else       if ("text/css".equals(_contentType)) {
        out.append("/* data-structr-type='").append(getType()).append("'*/\n/* data-structr-id='").append(id).append("'*/\n");
      }
 else {
        final String cleanedContent=StringUtils.remove(StringUtils.remove(org.apache.commons.lang3.StringUtils.replace(getProperty(Content.content),"\n","\\\\n"),"<!--"),"-->");
        out.append("<!--data-structr-id=\"".concat(id).concat("\" data-structr-raw-value=\"").concat(escapeForHtmlAttributes(cleanedContent)).concat("\"-->"));
      }
    }
    if (_contentType != null) {
      final Adapter<String,String> converter=contentConverters.get(_contentType);
      if (converter != null) {
        try {
          _content=converter.adapt(_content);
        }
 catch (        FrameworkException fex) {
          logger.warn("Unable to convert content: {}",fex.getMessage());
        }
      }
    }
    if (((_contentType == null) || _contentType.equals("text/plain")) && (_content != null) && !_content.isEmpty()) {
      final DOMNode _parent=getProperty(Content.parent);
      if (_parent == null || !(_parent instanceof Textarea)) {
        _content=_content.replaceAll("[\\n]{1}","<br>");
      }
    }
    if (_content != null) {
      if (EditMode.CONTENT.equals(edit) && _content.length() == 0) {
        _content="--- empty ---";
      }
      out.append(_content);
    }
    if (EditMode.CONTENT.equals(edit) && inBody && !("text/javascript".equals(getProperty(contentType)))&& !("text/css".equals(getProperty(contentType)))) {
      out.append("<!---->");
    }
  }
 catch (  Throwable t) {
    logger.error("",t);
  }
}
