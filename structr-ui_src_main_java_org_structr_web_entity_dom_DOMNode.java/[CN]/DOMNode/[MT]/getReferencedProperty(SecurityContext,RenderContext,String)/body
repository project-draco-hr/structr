{
  final String DEFAULT_VALUE_SEP="!";
  String pageId=renderContext.getPageId();
  String[] parts=refKey.split("[\\.]+");
  String referenceKey=parts[parts.length - 1];
  String defaultValue=null;
  if (StringUtils.contains(referenceKey,DEFAULT_VALUE_SEP)) {
    String[] ref=StringUtils.split(referenceKey,DEFAULT_VALUE_SEP);
    referenceKey=ref[0];
    if (ref.length > 1) {
      defaultValue=ref[1];
    }
 else {
      defaultValue="";
    }
  }
  Page _page=renderContext.getPage();
  GraphObject _data=null;
  for (int i=0; (i < parts.length); i++) {
    String part=parts[i];
    String lowerCasePart=part.toLowerCase();
    if (_data != null) {
      Object value=_data.getProperty(EntityContext.getPropertyKeyForJSONName(_data.getClass(),part));
      if (value instanceof GraphObject) {
        _data=(GraphObject)value;
        continue;
      }
      if (i > 0 && "size".equals(lowerCasePart)) {
        Object val=_data.getProperty(EntityContext.getPropertyKeyForJSONName(_data.getClass(),parts[i - 1]));
        if (val instanceof List) {
          return ((List)val).size();
        }
      }
      if ("link".equals(lowerCasePart) && _data instanceof AbstractNode) {
        for (        AbstractRelationship rel : ((AbstractNode)_data).getRelationships(org.structr.web.common.RelType.LINK,Direction.OUTGOING)) {
          _data=rel.getEndNode();
          break;
        }
        continue;
      }
      if (value == null) {
        return null;
      }
    }
    if (renderContext.hasDataForKey(lowerCasePart)) {
      _data=renderContext.getDataNode(lowerCasePart);
      continue;
    }
    if ("request".equals(lowerCasePart)) {
      HttpServletRequest request=renderContext.getRequest();
      if (request != null) {
        if (StringUtils.contains(refKey,"!")) {
          return StringUtils.defaultIfBlank(request.getParameter(referenceKey),defaultValue);
        }
 else {
          return StringUtils.defaultString(request.getParameter(referenceKey));
        }
      }
    }
    if ("now".equals(lowerCasePart)) {
      return AbstractNode.createdDate.inputConverter(securityContext).revert(new Date());
    }
    if ("me".equals(lowerCasePart)) {
      Principal me=(Principal)securityContext.getUser(false);
      if (me != null) {
        _data=me;
        continue;
      }
    }
    if (_data == null) {
      if ("this".equals(lowerCasePart)) {
        _data=renderContext.getDataObject();
        continue;
      }
      if ("page".equals(lowerCasePart)) {
        _data=_page;
        continue;
      }
      if ("link".equals(lowerCasePart)) {
        for (        AbstractRelationship rel : getRelationships(org.structr.web.common.RelType.LINK,Direction.OUTGOING)) {
          _data=rel.getEndNode();
          break;
        }
        continue;
      }
      if ("parent".equals(lowerCasePart)) {
        _data=(DOMNode)getParentNode();
        continue;
      }
      if ("owner".equals(lowerCasePart)) {
        for (        AbstractRelationship rel : getRelationships(org.structr.common.RelType.OWNS,Direction.INCOMING)) {
          _data=rel.getStartNode();
          break;
        }
        continue;
      }
      if ("search_result_size".equals(lowerCasePart)) {
        Set<Page> pages=getResultPages(securityContext,(Page)_page);
        if (!pages.isEmpty()) {
          return pages.size();
        }
        return 0;
      }
      if ("result_size".equals(lowerCasePart)) {
        Result result=renderContext.getResult();
        if (result != null) {
          return result.getRawResultCount();
        }
      }
      if ("page_size".equals(lowerCasePart)) {
        Result result=renderContext.getResult();
        if (result != null) {
          return result.getPageSize();
        }
      }
      if ("page_count".equals(lowerCasePart)) {
        Result result=renderContext.getResult();
        if (result != null) {
          return result.getPageCount();
        }
      }
      if ("page_no".equals(lowerCasePart)) {
        Result result=renderContext.getResult();
        if (result != null) {
          return result.getPage();
        }
      }
    }
  }
  if (_data != null) {
    PropertyKey referenceKeyProperty=EntityContext.getPropertyKeyForJSONName(_data.getClass(),referenceKey);
    Object value=_data.getProperty(referenceKeyProperty);
    PropertyConverter converter=referenceKeyProperty.inputConverter(securityContext);
    if (value != null && converter != null) {
      value=converter.revert(value);
    }
    return value != null ? value : defaultValue;
  }
  return null;
}
