{
  final HttpClientParams params=new HttpClientParams(HttpClientParams.getDefaultParams());
  final HttpClient client=new HttpClient(params);
  final HeadMethod headMethod=new HeadMethod(requestUrl);
  if (username != null && password != null) {
    Credentials defaultcreds=new UsernamePasswordCredentials(username,password);
    client.getState().setCredentials(AuthScope.ANY,defaultcreds);
    client.getParams().setAuthenticationPreemptive(true);
    headMethod.setDoAuthentication(true);
  }
  headMethod.addRequestHeader("Connection","close");
  headMethod.setFollowRedirects(false);
  for (  final Entry<String,String> header : ctx.getHeaders().entrySet()) {
    headMethod.addRequestHeader(header.getKey(),header.getValue());
  }
  client.executeMethod(headMethod);
  final GraphObjectMap response=new GraphObjectMap();
  response.setProperty(new IntProperty("status"),headMethod.getStatusCode());
  response.setProperty(new StringProperty("headers"),extractHeaders(headMethod.getResponseHeaders()));
  return response;
}
