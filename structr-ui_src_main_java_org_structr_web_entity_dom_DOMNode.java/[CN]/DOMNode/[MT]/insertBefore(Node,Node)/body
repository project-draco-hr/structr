{
  if (refChild == null) {
    return appendChild(newChild);
  }
  checkWriteAccess();
  checkSameDocument(newChild);
  checkSameDocument(refChild);
  checkHierarchy(newChild);
  checkHierarchy(refChild);
  if (newChild instanceof DocumentFragment) {
    final DocumentFragment fragment=(DocumentFragment)newChild;
    Node currentChild=fragment.getFirstChild();
    while (currentChild != null) {
      Node savedNextChild=currentChild.getNextSibling();
      fragment.removeChild(currentChild);
      insertBefore(currentChild,refChild);
      currentChild=savedNextChild;
    }
  }
 else {
    final Node _parent=newChild.getParentNode();
    if (_parent != null) {
      _parent.removeChild(newChild);
    }
    try {
      treeInsertBefore((DOMNode)newChild,(DOMNode)refChild);
    }
 catch (    FrameworkException frex) {
      if (frex.getStatus() == 404) {
        throw new DOMException(DOMException.NOT_FOUND_ERR,frex.getMessage());
      }
 else {
        throw new DOMException(DOMException.INVALID_STATE_ERR,frex.getMessage());
      }
    }
    handleNewChild(newChild);
  }
  return refChild;
}
