{
  if (refChild == null) {
    return appendChild(newChild);
  }
  checkWriteAccess();
  checkSameDocument(newChild);
  checkSameDocument(refChild);
  checkHierarchy(newChild);
  checkHierarchy(refChild);
  try {
    if (newChild instanceof DocumentFragment) {
      DocumentFragment fragment=(DocumentFragment)newChild;
      Node currentChild=fragment.getFirstChild();
      while (currentChild != null) {
        Node savedNextChild=currentChild.getNextSibling();
        fragment.removeChild(currentChild);
        insertBefore(currentChild,refChild);
        currentChild=savedNextChild;
      }
    }
 else {
      Node _parent=newChild.getParentNode();
      if (_parent != null) {
        _parent.removeChild(newChild);
      }
      treeInsertBefore(RelType.CONTAINS,(DOMNode)newChild,(DOMNode)refChild);
      handleNewChild(newChild);
    }
  }
 catch (  FrameworkException fex) {
    throw new DOMException(DOMException.INVALID_STATE_ERR,fex.toString());
  }
  return refChild;
}
