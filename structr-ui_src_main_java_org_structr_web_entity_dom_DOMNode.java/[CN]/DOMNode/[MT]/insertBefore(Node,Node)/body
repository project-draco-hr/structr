{
  checkWriteAccess();
  checkSameDocument(newChild);
  checkSameDocument(refChild);
  checkHierarchy(newChild);
  checkHierarchy(refChild);
  try {
    if (newChild instanceof DocumentFragment) {
      DocumentFragment fragment=(DocumentFragment)newChild;
      DOMNode currentChild=(DOMNode)fragment.getFirstChild();
      while (currentChild != null) {
        DOMNode savedNextChild=treeManager.getListManager().getNext(currentChild);
        treeManager.removeChild((DOMNode)fragment,currentChild);
        treeManager.insertBefore(this,currentChild,(DOMNode)refChild);
        currentChild=savedNextChild;
      }
    }
 else {
      Node _parent=newChild.getParentNode();
      if (_parent != null && _parent instanceof DOMNode) {
        treeManager.removeChild((DOMNode)_parent,(DOMNode)newChild);
      }
      treeManager.insertBefore(this,(DOMNode)newChild,(DOMNode)refChild);
    }
  }
 catch (  FrameworkException fex) {
    throw new DOMException(DOMException.INVALID_STATE_ERR,fex.toString());
  }
  return refChild;
}
