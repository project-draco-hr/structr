{
  checkWriteAccess();
  checkSameDocument(node);
  checkHierarchy(node);
  checkIsChild(node);
  final DOMNode otherNode=(DOMNode)node;
  try {
    Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        DOMNode.children.removeRelationship(securityContext,DOMNode.this,otherNode);
        ensureCorrectChildPositions();
        return null;
      }
    }
);
  }
 catch (  FrameworkException fex) {
    throw new DOMException(DOMException.INVALID_STATE_ERR,fex.toString());
  }
  return node;
}
