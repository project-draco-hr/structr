{
  final URI url=URI.create(address);
  final HttpGet req=new HttpGet(url);
  req.addHeader("User-Agent","curl/7.35.0");
  logger.info("Downloading from {}",address);
  final CloseableHttpClient client=HttpClients.custom().setDefaultConnectionConfig(ConnectionConfig.DEFAULT).setUserAgent("curl/7.35.0").build();
  final CloseableHttpResponse resp=client.execute(req);
  final int statusCode=resp.getStatusLine().getStatusCode();
  if (statusCode == 200) {
    try (final InputStream is=resp.getEntity().getContent()){
      try (final OutputStream os=new FileOutputStream(fileOnDisk)){
        IOUtils.copy(is,os);
      }
     }
   }
 else {
    final Header contentType=resp.getFirstHeader("Content-Type");
    String charset=StringUtils.substringAfterLast(contentType.getValue(),"; charset=");
    if (StringUtils.isBlank(charset)) {
      charset="UTF-8";
    }
    String content=IOUtils.toString(resp.getEntity().getContent(),charset);
    if (content.charAt(0) == 65279) {
      content=content.substring(1);
    }
    System.out.println("Response body: " + content);
    logger.warn("Unable to create file from URI {}: status code was {}",new Object[]{address,statusCode});
  }
}
