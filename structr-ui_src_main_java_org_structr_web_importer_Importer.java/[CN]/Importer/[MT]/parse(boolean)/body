{
  init();
  if (StringUtils.isNotBlank(code)) {
    logger.log(Level.INFO,"##### Start parsing code for page {0} #####",new Object[]{name});
    if (fragment) {
      parsedDocument=Jsoup.parseBodyFragment(code);
    }
 else {
      parsedDocument=Jsoup.parse(code);
    }
  }
 else {
    logger.log(Level.INFO,"##### Start fetching {0} for page {1} #####",new Object[]{address,name});
    try {
      originalUrl=new URL(address);
      HttpClient client=getHttpClient();
      GetMethod get=new GetMethod(originalUrl.toString());
      get.addRequestHeader("User-Agent","curl/7.35.0");
      get.addRequestHeader("Connection","close");
      get.getParams().setParameter("http.protocol.single-cookie-header",true);
      get.getParams().setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);
      get.setFollowRedirects(true);
      client.executeMethod(get);
      final InputStream response=get.getResponseBodyAsStream();
      code=IOUtils.toString(response,"UTF-8");
      if (code.charAt(0) == 65279) {
        code=code.substring(1);
      }
      parsedDocument=Jsoup.parse(code);
    }
 catch (    IOException ioe) {
      logger.log(Level.WARNING,"",ioe);
      throw new FrameworkException(500,"Error while parsing content from " + address);
    }
  }
  return true;
}
