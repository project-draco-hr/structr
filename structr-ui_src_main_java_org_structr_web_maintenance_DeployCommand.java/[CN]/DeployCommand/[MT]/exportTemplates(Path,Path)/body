{
  final Map<String,Object> configuration=new LinkedHashMap<>();
  final App app=StructrApp.getInstance();
  try (final Tx tx=app.tx()){
    for (    final Template template : app.nodeQuery(Template.class).getAsList()) {
      if (template.inTrash()) {
        continue;
      }
      exportTemplateSource(target,template,configuration);
    }
    final ShadowDocument shadowDocument=app.nodeQuery(ShadowDocument.class).getFirst();
    if (shadowDocument != null) {
      for (      final DOMNode node : shadowDocument.getProperty(Page.elements)) {
        if (!(node instanceof Content) || node.inTrash() || node.getProperty(DOMNode.parent) != null) {
          continue;
        }
        exportTemplateSource(target,node,configuration);
      }
    }
    tx.success();
  }
   try (final Writer fos=new OutputStreamWriter(new FileOutputStream(configTarget.toFile()))){
    getGson().toJson(configuration,fos);
  }
 catch (  IOException ioex) {
    ioex.printStackTrace();
  }
}
