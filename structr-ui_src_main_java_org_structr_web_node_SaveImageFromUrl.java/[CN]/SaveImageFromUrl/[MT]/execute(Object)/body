{
  Principal user=null;
  String urlString=null;
  AbstractNode parentNode=null;
  Image imageNode=null;
switch (parameters.length) {
case 1:
    if (parameters[0] instanceof Image) {
      imageNode=(Image)parameters[0];
    }
  break;
case 3:
if (parameters[0] instanceof Principal) {
  user=(Principal)parameters[0];
}
if (parameters[1] instanceof String) {
urlString=(String)parameters[1];
}
if (parameters[2] instanceof AbstractNode) {
parentNode=(AbstractNode)parameters[2];
}
break;
default :
throw new UnsupportedArgumentError("Wrong number of arguments");
}
if (imageNode != null) {
refreshImageFromUrl(imageNode);
}
 else if (user != null && urlString != null && parentNode != null) {
Image newImageNode=(Image)Services.command(securityContext,CreateNodeCommand.class).execute(new NodeAttribute(AbstractNode.type,Image.class.getSimpleName()),new NodeAttribute(org.structr.core.entity.File.url,urlString),new NodeAttribute(AbstractNode.visibleToAuthenticatedUsers,true),new NodeAttribute(AbstractNode.visibleToPublicUsers,true));
Services.command(securityContext,CreateRelationshipCommand.class).execute(parentNode,newImageNode,RelType.CONTAINS);
refreshImageFromUrl(newImageNode);
return newImageNode;
}
return null;
}
