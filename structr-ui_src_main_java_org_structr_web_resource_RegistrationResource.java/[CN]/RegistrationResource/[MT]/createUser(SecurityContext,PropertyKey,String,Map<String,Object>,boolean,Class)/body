{
  final App app=StructrApp.getInstance(securityContext);
  try {
    app.beginTx();
    Person person=(Person)AuthHelper.getPrincipalForCredential(credentialKey,credentialValue);
    if (person != null) {
      person.unlockReadOnlyPropertiesOnce();
      person.setProperty(AbstractNode.type,User.class.getSimpleName());
      User user=new User();
      user.init(securityContext,person.getNode());
      person.updateInIndex();
      user.setProperty(User.confirmationKey,confKey);
      return user;
    }
 else     if (autoCreate) {
      propertySet.put(AbstractNode.type.jsonName(),userClass != null ? userClass.getSimpleName() : User.class.getSimpleName());
      PropertyMap props=PropertyMap.inputTypeToJavaType(securityContext,propertySet);
      props.put(credentialKey,credentialValue);
      props.put(User.name,credentialValue);
      props.put(User.confirmationKey,confKey);
      return (Principal)StructrApp.getInstance(securityContext).command(CreateNodeCommand.class).execute(props);
    }
    app.commitTx();
  }
 catch (  FrameworkException ex) {
    logger.log(Level.SEVERE,null,ex);
  }
 finally {
    app.finishTx();
  }
  return null;
}
