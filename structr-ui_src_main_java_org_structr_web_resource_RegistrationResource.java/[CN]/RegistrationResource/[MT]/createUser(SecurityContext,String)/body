{
  try {
    return Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction<User>(){
      @Override public User execute() throws FrameworkException {
        User user;
        Person person=(Person)AuthHelper.getPrincipalForEmail(emailString);
        if (person != null) {
          person.unlockReadOnlyPropertiesOnce();
          person.setProperty(AbstractNode.type,User.class.getSimpleName());
          user=new User();
          user.init(securityContext,person.getNode());
          Services.command(securityContext,NewIndexNodeCommand.class).updateNode(person);
          user.setProperty(User.confirmationKey,confKey);
        }
 else {
          user=(User)Services.command(securityContext,CreateNodeCommand.class).execute(new NodeAttribute(AbstractNode.type,User.class.getSimpleName()),new NodeAttribute(User.email,emailString),new NodeAttribute(User.name,emailString),new NodeAttribute(User.confirmationKey,confKey));
        }
        return user;
      }
    }
);
  }
 catch (  FrameworkException ex) {
    Logger.getLogger(RegistrationResource.class.getName()).log(Level.SEVERE,null,ex);
  }
  return null;
}
