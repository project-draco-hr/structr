{
  if (propertySet.containsKey(User.email.jsonName()) && propertySet.size() == 1) {
    User user;
    final String emailString=(String)propertySet.get(User.email.jsonName());
    if (StringUtils.isEmpty(emailString)) {
      return new RestMethodResult(HttpServletResponse.SC_BAD_REQUEST);
    }
    localeString=(String)propertySet.get(MailTemplate.locale.jsonName());
    confKey=UUID.randomUUID().toString();
    Result result=Services.command(SecurityContext.getSuperUserInstance(),SearchNodeCommand.class).execute(Search.andExactType(User.class.getSimpleName()),Search.andExactProperty(User.email,emailString));
    if (!result.isEmpty()) {
      user=(User)result.get(0);
      user.setProperty(User.confirmationKey,confKey);
    }
 else {
      user=createUser(securityContext,emailString);
    }
    if (user != null) {
      if (!sendInvitationLink(user)) {
        return new RestMethodResult(HttpServletResponse.SC_BAD_REQUEST);
      }
    }
  }
  return new RestMethodResult(HttpServletResponse.SC_OK);
}
