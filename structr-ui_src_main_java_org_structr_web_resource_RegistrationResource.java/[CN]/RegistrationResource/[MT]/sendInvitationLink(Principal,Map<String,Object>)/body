{
  Map<String,String> replacementMap=new HashMap();
  populateReplacementMap(replacementMap,propertySetFromUserPOST);
  String userEmail=user.getProperty(User.eMail);
  replacementMap.put(toPlaceholder(User.eMail.jsonName()),userEmail);
  replacementMap.put(toPlaceholder("link"),getTemplateText(TemplateKey.BASE_URL,"http://" + Services.getApplicationHost() + ":"+ Services.getHttpPort()) + getTemplateText(TemplateKey.CONFIRM_REGISTRATION_PAGE,HtmlServlet.CONFIRM_REGISTRATION_PAGE) + "?"+ getTemplateText(TemplateKey.CONFIRM_KEY_KEY,HtmlServlet.CONFIRM_KEY_KEY)+ "="+ confKey+ "&"+ getTemplateText(TemplateKey.TARGET_PAGE_KEY,HtmlServlet.TARGET_PAGE_KEY)+ "="+ getTemplateText(TemplateKey.TARGET_PAGE,"register_thanks")+ "&"+ getTemplateText(TemplateKey.ERROR_PAGE_KEY,HtmlServlet.ERROR_PAGE_KEY)+ "="+ getTemplateText(TemplateKey.ERROR_PAGE,"register_error"));
  String textMailTemplate=getTemplateText(TemplateKey.TEXT_BODY,"Go to ${link} to finalize registration.");
  String htmlMailTemplate=getTemplateText(TemplateKey.HTML_BODY,"<div>Click <a href='${link}'>here</a> to finalize registration.</div>");
  String textMailContent=MailHelper.replacePlaceHoldersInTemplate(textMailTemplate,replacementMap);
  String htmlMailContent=MailHelper.replacePlaceHoldersInTemplate(htmlMailTemplate,replacementMap);
  try {
    MailHelper.sendHtmlMail(getTemplateText(TemplateKey.SENDER_ADDRESS,"structr-mail-daemon@localhost"),getTemplateText(TemplateKey.SENDER_NAME,"Structr Mail Daemon"),userEmail,"",null,null,null,getTemplateText(TemplateKey.SUBJECT,"Welcome to Structr, please finalize registration"),htmlMailContent,textMailContent);
  }
 catch (  Exception e) {
    logger.log(Level.SEVERE,"Unable to send registration e-mail",e);
    return false;
  }
  return true;
}
