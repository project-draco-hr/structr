{
  if (object != null) {
    if (object instanceof Content) {
      Content content=(Content)object;
      String dataKey=content.getProperty(Content.content);
      String parentComponentId=null;
      TypeDefinition typeDefinition=content.getTypeDefinition();
      if (typeDefinition != null) {
        String regex=typeDefinition.getProperty(TypeDefinition.validationExpression);
        if (value != null && regex != null) {
          Matcher matcher=getMatcher(regex,value.toString());
          if (!matcher.matches()) {
            final String errorMessage=typeDefinition.getProperty(TypeDefinition.validationErrorMessage);
            if (errorMessage != null) {
              Map<String,Object> attrs=new HashMap<String,Object>();
              attrs.put("parentComponentId",parentComponentId);
              attrs.put("data-key",dataKey);
              attrs.put("regex",regex);
              attrs.put("error",errorMessage);
              attrs.put("value",value);
              errorBuffer.add(errorKey.jsonName(),new DynamicValidationError(errorKey,attrs));
            }
            return false;
          }
        }
      }
 else {
        logger.log(Level.WARNING,"No type definition for Content entity {0}",object.getProperty(AbstractNode.uuid));
      }
    }
 else {
      logger.log(Level.WARNING,"Trying to validate node of type {0} which is not Content",object.getProperty(AbstractNode.type));
    }
  }
  return true;
}
