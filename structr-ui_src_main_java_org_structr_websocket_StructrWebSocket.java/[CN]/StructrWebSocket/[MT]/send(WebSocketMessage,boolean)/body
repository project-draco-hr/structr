{
  boolean isAuthenticated=false;
  try (final Tx tx=StructrApp.getInstance(securityContext).tx()){
    isAuthenticated=isAuthenticated();
    tx.success();
  }
 catch (  FrameworkException t) {
    t.printStackTrace();
  }
  message.setSessionValid(isAuthenticated);
  if (clearSessionId) {
    message.setSessionId(null);
  }
  message.setCallback(callback);
  if ("LOGIN".equals(message.getCommand()) && !isAuthenticated) {
    message.setMessage("User has no backend access.");
    message.setCode(403);
  }
  try (final Tx tx=StructrApp.getInstance(securityContext).tx()){
    String msg=gson.toJson(message,WebSocketMessage.class);
    logger.log(Level.FINE,"################### Private message: {0}",message.getCommand());
    logger.log(Level.FINEST,"############################################################ SENDING \n{0}",msg);
    if (securityContext != null) {
      securityContext.clearCustomView();
    }
    session.getRemote().sendString(msg);
    tx.success();
  }
 catch (  Throwable t) {
    t.printStackTrace();
    logger.log(Level.WARNING,"Unable to send websocket message to remote client");
  }
}
