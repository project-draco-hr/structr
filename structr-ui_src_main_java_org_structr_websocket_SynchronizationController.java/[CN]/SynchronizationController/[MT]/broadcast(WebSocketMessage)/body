{
  webSocketData.setSessionValid(true);
  String message;
  String pagePath=(String)webSocketData.getNodeData().get("pagePath");
synchronized (clients) {
    for (    StructrWebSocket socket : clients) {
      String clientPagePath=socket.getPagePath();
      if (clientPagePath != null && !clientPagePath.equals(URIUtil.encodePath(pagePath))) {
        continue;
      }
      Session session=socket.getSession();
      webSocketData.setCallback(socket.getCallback());
      if ((session != null)) {
        List<? extends GraphObject> result=webSocketData.getResult();
        if ((result != null) && (result.size() > 0) && (webSocketData.getCommand().equals("UPDATE") || webSocketData.getCommand().equals("ADD") || webSocketData.getCommand().equals("CREATE"))) {
          WebSocketMessage clientData=webSocketData.copy();
          SecurityContext securityContext=socket.getSecurityContext();
          if (securityContext == null) {
            try {
              securityContext=SecurityContext.getInstance(null,AccessMode.Frontend);
            }
 catch (            FrameworkException ex) {
              continue;
            }
          }
          clientData.setResult(filter(securityContext,result));
          message=gson.toJson(clientData,WebSocketMessage.class);
        }
 else {
          message=gson.toJson(webSocketData,WebSocketMessage.class);
        }
        try {
          session.getRemote().sendString(message);
        }
 catch (        org.eclipse.jetty.io.EofException eof) {
          logger.log(Level.FINE,"EofException irgnored, may occour on SSL connections.",eof);
        }
catch (        IOException e) {
          logger.log(Level.WARNING,"Error sending message to client.",e);
        }
      }
    }
  }
}
