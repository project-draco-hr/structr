{
  List<DOMNode> filteredElements=filter(securityContext,dynamicElements);
  List<WebSocketMessage> partialMessages=createPartialMessages(securityContext,filteredElements);
  for (  WebSocketMessage webSocketData : partialMessages) {
    webSocketData.setSessionValid(true);
    String pagePath=(String)webSocketData.getNodeData().get("pagePath");
    String clientPagePath=socket.getPathPath();
    if (clientPagePath != null && !clientPagePath.equals(URIUtil.encodePath(pagePath))) {
      continue;
    }
    Connection socketConnection=socket.getConnection();
    webSocketData.setCallback(socket.getCallback());
    if ((socketConnection != null)) {
      String message=gson.toJson(webSocketData,WebSocketMessage.class);
      try {
        socketConnection.sendMessage(message);
      }
 catch (      org.eclipse.jetty.io.EofException eof) {
        logger.log(Level.FINE,"EofException irgnored, may occour on SSL connections.",eof);
      }
catch (      Throwable t) {
        logger.log(Level.WARNING,"Error sending message to client.",t);
      }
    }
  }
}
