{
  Set<DOMNode> dynamicElements=new HashSet(markupElements);
  SecurityContext superUserSecurityContext=SecurityContext.getSuperUserInstance();
  List<SearchAttribute> attrs=new LinkedList<SearchAttribute>();
  if (!types.isEmpty()) {
    attrs.add(Search.andExactTypeAndSubtypes(DOMElement.class.getSimpleName()));
    SearchAttributeGroup g=new SearchAttributeGroup(Occur.MUST);
    for (    Class type : types) {
      g.add(Search.orExactProperty(superUserSecurityContext,DOMElement.dataKey,EntityContext.denormalizeEntityName(type.getSimpleName())));
      g.add(Search.orExactProperty(superUserSecurityContext,DOMElement.partialUpdateKey,EntityContext.denormalizeEntityName(type.getSimpleName())));
    }
    attrs.add(g);
    Result results;
    try {
      results=Services.command(superUserSecurityContext,SearchNodeCommand.class).execute(attrs);
      dynamicElements.addAll(results.getResults());
    }
 catch (    FrameworkException ex) {
    }
  }
  for (  StructrWebSocket socket : clients) {
    SecurityContext securityContext=socket.getSecurityContext();
    if (securityContext == null) {
      try {
        securityContext=SecurityContext.getInstance(null,AccessMode.Frontend);
      }
 catch (      FrameworkException ex) {
        continue;
      }
    }
    broadcastDynamicElements(securityContext,socket,new LinkedList(dynamicElements));
  }
}
