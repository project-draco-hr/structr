{
  String id=webSocketData.getId();
  Map<String,Object> nodeData=webSocketData.getNodeData();
  String parentId=(String)nodeData.get("parentId");
  String key=(String)nodeData.get("key");
  if (id == null) {
    getWebSocket().send(MessageBuilder.status().code(422).message("Cannot append node, no id is given").build(),true);
    return;
  }
  if (parentId == null) {
    getWebSocket().send(MessageBuilder.status().code(422).message("Cannot add node without parentId").build(),true);
    return;
  }
  AbstractNode parentNode=getNode(parentId);
  if (parentNode == null) {
    getWebSocket().send(MessageBuilder.status().code(404).message("Parent node not found").build(),true);
    return;
  }
  if (parentNode instanceof LinkedTreeNode) {
    LinkedTreeNode parentLinkedTreeNode=(LinkedTreeNode)parentNode;
    if (parentLinkedTreeNode == null) {
      getWebSocket().send(MessageBuilder.status().code(422).message("Parent node is no data node").build(),true);
      return;
    }
    if (key == null) {
      key="CONTAINS";
    }
    LinkedTreeNode node=(LinkedTreeNode)getNode(id);
    RelationshipType relType=DynamicRelationshipType.withName(key);
    try {
      if (node != null) {
        parentLinkedTreeNode.treeAppendChild(relType,node);
      }
    }
 catch (    FrameworkException fex) {
      getWebSocket().send(MessageBuilder.status().code(422).message(fex.getMessage()).build(),true);
    }
  }
 else {
    getWebSocket().send(MessageBuilder.status().code(422).message("Cannot use given node, not instance of LinkedTreeNode").build(),true);
  }
}
