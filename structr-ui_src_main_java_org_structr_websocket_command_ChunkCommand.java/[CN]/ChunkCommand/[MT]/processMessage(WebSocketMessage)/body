{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  try {
    int sequenceNumber=((Long)webSocketData.getNodeData().get("chunkId")).intValue();
    int chunkSize=((Long)webSocketData.getNodeData().get("chunkSize")).intValue();
    Object rawData=webSocketData.getNodeData().get("chunk");
    int chunks=((Long)webSocketData.getNodeData().get("chunks")).intValue();
    String uuid=webSocketData.getId();
    byte[] data=null;
    if (rawData != null) {
      if (rawData instanceof String) {
        logger.debug("Raw data: {}",rawData);
        data=Base64.decode(((String)rawData));
        logger.debug("Decoded data: {}",data);
      }
    }
    final FileBase file=(FileBase)getNode(uuid);
    if (!file.isGranted(Permission.write,securityContext)) {
      logger.warn("No write permission for {} on {}",new Object[]{getWebSocket().getCurrentUser().toString(),file.toString()});
      getWebSocket().send(MessageBuilder.status().message("No write permission").code(400).build(),true);
      return;
    }
    getWebSocket().handleFileChunk(uuid,sequenceNumber,chunkSize,data,chunks);
    if (sequenceNumber + 1 == chunks) {
      final long checksum=FileHelper.getChecksum(file);
      final long size=FileHelper.getSize(file);
      file.unlockSystemPropertiesOnce();
      file.setProperty(FileBase.checksum,checksum);
      file.unlockSystemPropertiesOnce();
      file.setProperty(FileBase.size,size);
      file.increaseVersion();
      getWebSocket().removeFileUploadHandler(uuid);
      logger.debug("File upload finished. Checksum: {}, size: {}",new Object[]{checksum,size});
    }
    final long currentSize=(long)(sequenceNumber * chunkSize) + data.length;
    getWebSocket().send(MessageBuilder.status().code(200).message("{\"id\":\"" + file.getUuid() + "\", \"name\":\""+ file.getName()+ "\",\"size\":"+ currentSize+ "}").build(),true);
  }
 catch (  IOException|FrameworkException ex) {
    String msg=ex.toString();
    getWebSocket().send(MessageBuilder.status().code(400).message("Could not process chunk data: ".concat((msg != null) ? msg : "")).build(),true);
  }
}
