{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  String nodeId=webSocketData.getId();
  final AbstractNode nodeToClone=getNode(nodeId);
  final Map<String,Object> nodeData=webSocketData.getNodeData();
  final String newName;
  if (nodeData.containsKey(AbstractNode.name.dbName())) {
    newName=(String)nodeData.get(AbstractNode.name.dbName());
  }
 else {
    newName="unknown";
  }
  if (nodeToClone != null) {
    try {
      final Page pageToClone=nodeToClone instanceof Page ? (Page)nodeToClone : null;
      if (pageToClone != null) {
        DOMNode firstChild=(DOMNode)pageToClone.getFirstChild().getNextSibling();
        if (firstChild == null) {
          firstChild=(DOMNode)pageToClone.treeGetFirstChild();
        }
        final DOMNode newHtmlNode=DOMNode.cloneAndAppendChildren(securityContext,firstChild);
        final Page newPage=Page.createNewPage(securityContext,newName);
        newPage.appendChild(newHtmlNode);
      }
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Could not create node.",fex);
      getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
    }
catch (    DOMException dex) {
      logger.log(Level.WARNING,"Could not create node.",dex);
      getWebSocket().send(MessageBuilder.status().code(422).message(dex.getMessage()).build(),true);
    }
  }
 else {
    logger.log(Level.WARNING,"Node with uuid {0} not found.",webSocketData.getId());
    getWebSocket().send(MessageBuilder.status().code(404).build(),true);
  }
}
