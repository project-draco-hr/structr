{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  String id=webSocketData.getId();
  if (id != null) {
    final DOMNode node=getDOMNode(id);
    try {
      final CreateRelationshipCommand createRel=Services.command(securityContext,CreateRelationshipCommand.class);
      StructrTransaction transaction=new StructrTransaction(){
        @Override public Object execute() throws FrameworkException {
          DOMNode clonedNode=(DOMNode)node.cloneNode(false);
          moveChildNodes(node,clonedNode);
          ShadowDocument hiddenDoc=getOrCreateHiddenDocument();
          clonedNode.setProperty(DOMNode.ownerDocument,hiddenDoc);
          for (          DOMNode child : DOMNode.getAllChildNodes(clonedNode)) {
            child.setProperty((DOMNode.ownerDocument),hiddenDoc);
          }
          createRel.execute(node,clonedNode,Sync.class);
          createRel.execute(clonedNode,node,Sync.class);
          return null;
        }
      }
;
      Services.command(securityContext,TransactionCommand.class).execute(transaction);
    }
 catch (    Exception ex) {
      getWebSocket().send(MessageBuilder.status().code(422).message(ex.getMessage()).build(),true);
    }
  }
 else {
    getWebSocket().send(MessageBuilder.status().code(422).message("Cannot append node without id").build(),true);
  }
}
