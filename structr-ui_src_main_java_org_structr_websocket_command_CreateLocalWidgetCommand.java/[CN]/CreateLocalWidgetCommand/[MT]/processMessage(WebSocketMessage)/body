{
  String id=webSocketData.getId();
  Map<String,Object> nodeData=webSocketData.getNodeData();
  final String source=(String)nodeData.get("source");
  final String name=(String)nodeData.get("name");
  if (id == null) {
    getWebSocket().send(MessageBuilder.status().code(422).message("Cannot create widget without id").build(),true);
    return;
  }
  DOMNode node=getDOMNode(id);
  if (node == null) {
    getWebSocket().send(MessageBuilder.status().code(404).message("Node not found").build(),true);
    return;
  }
  try {
    final SecurityContext securityContext=getWebSocket().getSecurityContext();
    final App app=StructrApp.getInstance(securityContext);
    PropertyMap properties=new PropertyMap();
    properties.put(AbstractNode.type,Widget.class.getSimpleName());
    properties.put(AbstractNode.name,name);
    properties.put(Widget.source,source);
    app.beginTx();
    final Widget newWidget=app.create(Widget.class,properties);
    app.commitTx();
  }
 catch (  Throwable t) {
    logger.log(Level.WARNING,t.toString());
    getWebSocket().send(MessageBuilder.status().code(422).message(t.toString()).build(),true);
  }
}
