{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  final App app=StructrApp.getInstance(securityContext);
  final Query query=app.nodeQuery();
  final List<? extends GraphObject> resultList=new LinkedList<>();
  final Set<AbstractNode> filteredResults=new LinkedHashSet<>();
  query.includeDeletedAndHidden();
  query.orTypes(DOMElement.class);
  query.orType(Content.class);
  try (final Tx tx=app.tx()){
    resultList.addAll(query.getAsList());
    for (    GraphObject obj : resultList) {
      if (obj instanceof DOMNode) {
        DOMNode node=(DOMNode)obj;
        if (node.getProperty(DOMNode.ownerDocument) == null) {
          filteredResults.add(node);
        }
        for (        final DOMNode child : DOMNode.getAllChildNodes(node)) {
          if (child.getProperty(DOMNode.ownerDocument) == null) {
            filteredResults.add(child);
          }
        }
      }
    }
    tx.success();
  }
   final Iterator<AbstractNode> iterator=filteredResults.iterator();
  int count=0;
  while (iterator.hasNext()) {
    count=0;
    try (final Tx tx=app.tx()){
      while (iterator.hasNext() && count++ < 100) {
        app.delete(iterator.next());
      }
      tx.success();
    }
   }
}
