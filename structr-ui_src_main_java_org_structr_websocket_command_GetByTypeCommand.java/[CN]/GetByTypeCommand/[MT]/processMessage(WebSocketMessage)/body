{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  final String rawType=(String)webSocketData.getNodeData().get("type");
  final String properties=(String)webSocketData.getNodeData().get("properties");
  final boolean includeDeletedAndHidden=(Boolean)webSocketData.getNodeData().get("includeDeletedAndHidden");
  final Class type=SchemaHelper.getEntityClassForRawType(rawType);
  if (type == null) {
    getWebSocket().send(MessageBuilder.status().code(404).message("Type " + rawType + " not found").build(),true);
    return;
  }
  if (properties != null) {
    securityContext.setCustomView(StringUtils.split(properties,","));
  }
  final String sortOrder=webSocketData.getSortOrder();
  final String sortKey=webSocketData.getSortKey();
  final int pageSize=webSocketData.getPageSize();
  final int page=webSocketData.getPage();
  PropertyKey sortProperty=StructrApp.getConfiguration().getPropertyKeyForJSONName(type,sortKey);
  final Query query=StructrApp.getInstance(securityContext).nodeQuery(type).includeDeletedAndHidden(includeDeletedAndHidden).sort(sortProperty).order("desc".equals(sortOrder));
  if (type.equals(Image.class)) {
    query.and(Image.isThumbnail,false);
  }
  try {
    Result result=query.getResult();
    int resultCountBeforePaging=result.size();
    webSocketData.setResult(PagingHelper.subList(result.getResults(),pageSize,page,null));
    webSocketData.setRawResultCount(resultCountBeforePaging);
    getWebSocket().send(webSocketData,true);
  }
 catch (  FrameworkException fex) {
    logger.warn("Exception occured",fex);
    getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
  }
}
