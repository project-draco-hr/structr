{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  final Map<String,Object> properties=webSocketData.getNodeData();
  final String code=(String)properties.get("code");
  final String address=(String)properties.get("address");
  final String name=(String)properties.get("name");
  final boolean publicVisible=(Boolean)properties.get("publicVisible");
  final boolean authVisible=(Boolean)properties.get("authVisible");
  try {
    final Importer pageImporter=new Importer(securityContext,code,address,name,publicVisible,authVisible);
    final boolean parseOk=pageImporter.parse();
    if (parseOk) {
      logger.info("Sucessfully parsed {}",address);
      getWebSocket().send(MessageBuilder.status().code(200).message("Sucessfully parsed address " + address).build(),true);
      String pageId=pageImporter.readPage().getUuid();
      Map<String,Object> resultData=new HashMap();
      if (pageId != null) {
        resultData.put("id",pageId);
        getWebSocket().send(MessageBuilder.status().code(200).message("Sucessfully created page " + name).data(resultData).build(),true);
        pageImporter.importDataComments();
      }
 else {
        getWebSocket().send(MessageBuilder.status().code(400).message("Error while creating page " + name).data(resultData).build(),true);
      }
    }
  }
 catch (  FrameworkException fex) {
    logger.warn("Error while importing content",fex);
    getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
  }
}
