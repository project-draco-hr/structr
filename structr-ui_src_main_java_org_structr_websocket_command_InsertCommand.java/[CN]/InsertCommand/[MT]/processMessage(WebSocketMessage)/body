{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  final App app=StructrApp.getInstance(securityContext);
  final Map<String,Object> properties=webSocketData.getNodeData();
  String parentId=(String)properties.get("id");
  final Map<String,Object> relData=webSocketData.getRelData();
  if (parentId != null) {
    DOMNode parentNode=(DOMNode)getNode(parentId);
    DOMNode nodeToInsert=null;
    try {
      PropertyMap nodeProperties=PropertyMap.inputTypeToJavaType(securityContext,properties);
      app.beginTx();
      nodeToInsert=app.create(DOMNode.class,nodeProperties);
      app.commitTx();
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Could not create node.",fex);
      getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
    }
 finally {
      app.finishTx();
    }
    if ((nodeToInsert != null) && (parentNode != null)) {
      try {
        app.beginTx();
        PropertyMap relProperties=PropertyMap.inputTypeToJavaType(securityContext,relData);
        app.create(parentNode,nodeToInsert,DOMChildren.class,relProperties);
        app.commitTx();
      }
 catch (      Throwable t) {
        getWebSocket().send(MessageBuilder.status().code(400).message(t.getMessage()).build(),true);
      }
 finally {
        app.finishTx();
      }
    }
 else {
      getWebSocket().send(MessageBuilder.status().code(404).build(),true);
    }
  }
 else {
    getWebSocket().send(MessageBuilder.status().code(400).message("Insertion of new node failed.").build(),true);
  }
}
