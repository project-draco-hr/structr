{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  final int pageSize=webSocketData.getPageSize();
  final int page=webSocketData.getPage();
  try {
    Result result=(Result)StructrApp.getInstance(securityContext).command(SearchNodeCommand.class).execute(Search.andExactType(ShadowDocument.class));
    List<AbstractNode> filteredResults=new LinkedList();
    List<AbstractNode> resultList=result.getResults();
    if (result.isEmpty()) {
      logger.log(Level.WARNING,"No shadow document found");
      return;
    }
    ShadowDocument doc=(ShadowDocument)result.get(0);
    resultList.addAll(doc.getProperty(Page.elements));
    for (    GraphObject obj : resultList) {
      if (obj instanceof DOMNode) {
        DOMNode node=(DOMNode)obj;
        if (!doc.equals(node) && !node.hasIncomingRelationships(DOMChildren.class)) {
          filteredResults.add(node);
        }
      }
    }
    int resultCountBeforePaging=filteredResults.size();
    webSocketData.setResult(PagingHelper.subList(filteredResults,pageSize,page,null));
    webSocketData.setRawResultCount(resultCountBeforePaging);
    getWebSocket().send(webSocketData,true);
  }
 catch (  FrameworkException fex) {
    logger.log(Level.WARNING,"Exception occured",fex);
    getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
  }
}
