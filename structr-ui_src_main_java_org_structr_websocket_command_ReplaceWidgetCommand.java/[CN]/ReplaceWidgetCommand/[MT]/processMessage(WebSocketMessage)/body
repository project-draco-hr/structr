{
  final String id=webSocketData.getId();
  String pageId=webSocketData.getPageId();
  final Map<String,Object> nodeData=webSocketData.getNodeData();
  final String parentId=(String)nodeData.get("parentId");
  final String baseUrl=(String)nodeData.get("widgetHostBaseUrl");
  final App app=StructrApp.getInstance(getWebSocket().getSecurityContext());
  final Page page=getPage(pageId);
  final AbstractNode origNode=getNode(id);
  try {
    app.beginTx();
    DOMNode existingParent=null;
    if (parentId != null) {
      existingParent=(DOMNode)getNode(parentId);
    }
    DOMNode parent=app.create(Div.class);
    Widget.expandWidget(getWebSocket().getSecurityContext(),page,parent,baseUrl,nodeData);
    DOMNode newWidget=(DOMNode)parent.getChildNodes().item(0);
    moveSyncRels((DOMElement)origNode,(DOMElement)newWidget);
    if (existingParent != null) {
      existingParent.removeChild((DOMNode)origNode);
    }
    deleteRecursively((DOMNode)origNode);
    newWidget.setProperty(GraphObject.id,id);
    if (existingParent != null) {
      existingParent.appendChild(newWidget);
    }
    app.delete(parent);
    app.commitTx();
  }
 catch (  FrameworkException ex) {
    logger.log(Level.SEVERE,null,ex);
  }
 finally {
    app.finishTx();
  }
}
