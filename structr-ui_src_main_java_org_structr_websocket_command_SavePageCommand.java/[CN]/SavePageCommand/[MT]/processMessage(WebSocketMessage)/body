{
  final String pageId=webSocketData.getId();
  final Map<String,Object> nodeData=webSocketData.getNodeData();
  final String newSource=(String)nodeData.get("source");
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  final App app=StructrApp.getInstance(securityContext);
  Page page=getPage(pageId);
  if (page != null) {
    try {
      logger.log(Level.INFO,newSource);
      Importer imp=new Importer(securityContext,newSource,null,"imported-page",5000,false,false);
      boolean parseOk=imp.parse();
      if (parseOk) {
        final Page newPage=imp.readPage();
        logger.log(Level.INFO,"New page created: ",newPage);
        Set<DOMNode> origDomNodes=DOMNode.getAllChildNodes(page);
        Set<DOMNode> newDomNodes=DOMNode.getAllChildNodes(newPage);
        origDomNodes.add(page);
        newPage.setProperty(DOMNode.dataHashProperty,page.getUuid());
        newDomNodes.add(newPage);
        GraphMergeHelper.merge(origDomNodes,newDomNodes,DOMNode.dataHashProperty);
      }
 else {
        getWebSocket().send(MessageBuilder.status().code(422).message("Unable to parse\n" + newSource).build(),true);
      }
    }
 catch (    Throwable t) {
      logger.log(Level.WARNING,t.toString());
      t.printStackTrace();
      getWebSocket().send(MessageBuilder.status().code(422).message(t.toString()).build(),true);
    }
  }
 else {
    getWebSocket().send(MessageBuilder.status().code(422).message("Cannot save page").build(),true);
  }
}
