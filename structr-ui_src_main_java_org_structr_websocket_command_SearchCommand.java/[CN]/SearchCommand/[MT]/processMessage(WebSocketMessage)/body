{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  final String searchString=(String)webSocketData.getNodeData().get("searchString");
  final String typeString=(String)webSocketData.getNodeData().get("type");
  Class type=null;
  if (typeString != null) {
    type=SchemaHelper.getEntityClassForRawType(typeString);
  }
  if (searchString == null) {
    getWebSocket().send(MessageBuilder.status().code(204).message("Empty search string").build(),true);
    return;
  }
  final String sortOrder=webSocketData.getSortOrder();
  final String sortKey=webSocketData.getSortKey();
  final PropertyKey sortProperty=StructrApp.getConfiguration().getPropertyKeyForJSONName(AbstractNode.class,sortKey);
  final Query query=StructrApp.getInstance(securityContext).nodeQuery().includeDeletedAndHidden().sort(sortProperty).order("desc".equals(sortOrder));
  query.andName(searchString);
  if (type != null) {
    query.andType(type);
  }
  try {
    Result result=query.getResult();
    webSocketData.setResult(result.getResults());
    getWebSocket().send(webSocketData,true);
  }
 catch (  FrameworkException fex) {
    logger.log(Level.WARNING,"Exception occured",fex);
    getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
  }
}
