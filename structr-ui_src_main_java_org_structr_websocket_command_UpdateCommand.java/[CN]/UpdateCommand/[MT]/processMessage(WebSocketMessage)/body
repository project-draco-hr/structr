{
  GraphObject obj=getNode(webSocketData.getId());
  String recString=(String)webSocketData.getNodeData().get("recursive");
  webSocketData.getNodeData().remove("recursive");
  boolean rec=StringUtils.isNotBlank(recString) ? Boolean.parseBoolean(recString) : false;
  if (obj != null) {
    if (!getWebSocket().getSecurityContext().isAllowed(((AbstractNode)obj),Permission.write)) {
      logger.log(Level.WARNING,"No write permission for {0} on {1}",new Object[]{getWebSocket().getCurrentUser().toString(),obj.toString()});
      getWebSocket().send(MessageBuilder.status().message("No write permission").code(400).build(),true);
      return;
    }
  }
  if (obj == null) {
    obj=getRelationship(webSocketData.getId());
  }
  if (obj != null) {
    try {
      setProperties(obj,PropertyMap.inputTypeToJavaType(this.getWebSocket().getSecurityContext(),obj.getClass(),webSocketData.getNodeData()),rec);
    }
 catch (    FrameworkException ex) {
      logger.log(Level.SEVERE,"Unable to set properties: {0}",((FrameworkException)ex).toString());
      getWebSocket().send(MessageBuilder.status().code(400).build(),true);
    }
  }
 else {
    logger.log(Level.WARNING,"Graph object with uuid {0} not found.",webSocketData.getId());
    getWebSocket().send(MessageBuilder.status().code(404).build(),true);
  }
}
