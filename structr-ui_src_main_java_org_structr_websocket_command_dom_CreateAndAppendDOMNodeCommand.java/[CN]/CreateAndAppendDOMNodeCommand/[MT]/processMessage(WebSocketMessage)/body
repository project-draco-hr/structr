{
  final Map<String,Object> nodeData=webSocketData.getNodeData();
  final String parentId=(String)nodeData.get("parentId");
  final String childContent=(String)nodeData.get("childContent");
  final String pageId=webSocketData.getPageId();
  nodeData.remove("parentId");
  if (pageId != null) {
    if (parentId == null) {
      getWebSocket().send(MessageBuilder.status().code(422).message("Cannot add node without parentId").build(),true);
      return;
    }
    final DOMNode parentNode=getDOMNode(parentId);
    if (parentNode == null) {
      getWebSocket().send(MessageBuilder.status().code(404).message("Parent node not found").build(),true);
      return;
    }
    final Document document=getPage(pageId);
    if (document != null) {
      final String tagName=(String)nodeData.get("tagName");
      nodeData.remove("tagName");
      try {
        DOMNode newNode;
        if (tagName != null && "comment".equals(tagName)) {
          newNode=(DOMNode)document.createComment("#comment");
        }
 else         if (tagName != null && "template".equals(tagName)) {
          newNode=(DOMNode)document.createTextNode("#template");
          try {
            newNode.unlockSystemPropertiesOnce();
            newNode.setProperty(NodeInterface.type,Template.class.getSimpleName());
          }
 catch (          FrameworkException fex) {
            logger.warn("Unable to set type of node {} to Template: {}",new Object[]{newNode.getUuid(),fex.getMessage()});
          }
        }
 else         if (tagName != null && !tagName.isEmpty()) {
          newNode=(DOMNode)document.createElement(tagName);
        }
 else {
          newNode=(DOMNode)document.createTextNode("#text");
        }
        newNode=getDOMNode(newNode.getUuid());
        if (newNode != null) {
          parentNode.appendChild(newNode);
          for (          Entry entry : nodeData.entrySet()) {
            final String key=(String)entry.getKey();
            final Object val=entry.getValue();
            PropertyKey propertyKey=StructrApp.getConfiguration().getPropertyKeyForDatabaseName(newNode.getClass(),key);
            if (propertyKey != null) {
              try {
                Object convertedValue=val;
                PropertyConverter inputConverter=propertyKey.inputConverter(SecurityContext.getSuperUserInstance());
                if (inputConverter != null) {
                  convertedValue=inputConverter.convert(val);
                }
                newNode.setProperty(propertyKey,convertedValue);
              }
 catch (              FrameworkException fex) {
                logger.warn("Unable to set node property {} of node {} to {}: {}",new Object[]{propertyKey,newNode.getUuid(),val,fex.getMessage()});
              }
            }
          }
          if (StringUtils.isNotBlank(childContent)) {
            final DOMNode childNode=(DOMNode)document.createTextNode(childContent);
            newNode.appendChild(childNode);
          }
        }
      }
 catch (      DOMException dex) {
        getWebSocket().send(MessageBuilder.status().code(422).message(dex.getMessage()).build(),true);
      }
    }
 else {
      getWebSocket().send(MessageBuilder.status().code(404).message("Page not found").build(),true);
    }
  }
 else {
    getWebSocket().send(MessageBuilder.status().code(422).message("Cannot create node without pageId").build(),true);
  }
}
