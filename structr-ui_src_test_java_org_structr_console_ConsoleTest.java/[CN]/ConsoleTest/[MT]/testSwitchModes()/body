{
  try {
    final Console console=new Console(securityContext,Collections.emptyMap());
    assertEquals("Invalid console execution result","Mode set to 'StructrScript'.\r\n",console.runForTest("Console.setMode('" + ConsoleMode.StructrScript.name() + "')"));
    assertEquals("Invalid console execution result","Mode set to 'Cypher'.\r\n",console.runForTest("Console.setMode('" + ConsoleMode.Cypher.name() + "')"));
    assertEquals("Invalid console execution result","Mode set to 'JavaScript'.\r\n",console.runForTest("Console.setMode('" + ConsoleMode.JavaScript.name() + "')"));
    assertEquals("Invalid console execution result","Mode set to 'AdminShell'. Type 'help' to get a list of commands.\r\n",console.runForTest("Console.setMode('" + ConsoleMode.AdminShell.name() + "')"));
    assertEquals("Invalid console execution result","Mode set to 'REST'. Type 'help' to get a list of commands.\r\n",console.runForTest("Console.setMode('" + ConsoleMode.REST.name() + "')"));
  }
 catch (  FrameworkException fex) {
    fail("Unexpected exception.");
    fex.printStackTrace();
  }
}
