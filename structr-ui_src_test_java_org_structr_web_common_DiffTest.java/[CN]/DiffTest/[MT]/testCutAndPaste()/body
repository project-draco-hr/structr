{
  final StringBuilder clipboard=new StringBuilder();
  final String result1=testDiff("<html><head><title>Title</title></head><body><div><h2>one</h2></div><div><h2>two</h2></div><div><h2>three</h2></div><div><h2>four</h2></div></body></html>",new org.neo4j.helpers.Function<String,String>(){
    @Override public String apply(    String from){
      final StringBuilder buf=new StringBuilder(from);
      for (int i=0; i < 2; i++) {
        int startPos=buf.indexOf("<div");
        int endPos=buf.indexOf("</div>") + 6;
        clipboard.append(buf.substring(startPos,endPos));
        buf.replace(startPos,endPos,"");
      }
      return buf.toString();
    }
  }
);
  assertEquals("<!DOCTYPE html>\n" + "<html>\n" + "  <head>\n"+ "    <title>Title</title>\n"+ "  </head>\n"+ "  <body>\n"+ "    <div>\n"+ "      <h2>three</h2>\n"+ "    </div>\n"+ "    <div>\n"+ "      <h2>four</h2>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>",result1);
  int pos=-1;
  do {
    pos=clipboard.indexOf(" data-hash");
    if (pos != -1) {
      clipboard.replace(pos,pos + 21,"");
    }
  }
 while (pos != -1);
  final String result2=testDiff(result1,new org.neo4j.helpers.Function<String,String>(){
    @Override public String apply(    String from){
      final StringBuilder buf=new StringBuilder(from);
      final int insertPos=buf.indexOf("<div");
      buf.insert(insertPos,clipboard.toString());
      return buf.toString();
    }
  }
);
  assertEquals("<!DOCTYPE html>\n" + "<html>\n" + "  <head>\n"+ "    <title>Title</title>\n"+ "  </head>\n"+ "  <body>\n"+ "    <div>\n"+ "      <h2>one</h2>\n"+ "    </div>\n"+ "    <div>\n"+ "      <h2>two</h2>\n"+ "    </div>\n"+ "    <div>\n"+ "      <h2>three</h2>\n"+ "    </div>\n"+ "    <div>\n"+ "      <h2>four</h2>\n"+ "    </div>\n"+ "  </body>\n"+ "</html>",result2);
}
