{
  final StructrConf config=new StructrConf(Services.getDefaultConfiguration());
  final Date now=new Date();
  final long timestamp=now.getTime();
  config.put(Services.CONFIGURED_SERVICES,"NodeService LogService");
  config.put(Services.APPLICATION_TITLE,"structr unit test app" + timestamp);
  config.put(Services.TMP_PATH,"/tmp/");
  config.put(Services.BASE_PATH,"/tmp/structr-test-" + timestamp);
  config.put(Services.DATABASE_PATH,"/tmp/structr-test-" + timestamp + "/db");
  config.put(Services.FILES_PATH,"/tmp/structr-test-" + timestamp + "/files");
  config.put(Services.LOG_DATABASE_PATH,"/tmp/structr-test-" + timestamp + "/logDb.dat");
  config.put(Services.TCP_PORT,"13465");
  config.put(Services.SERVER_IP,"127.0.0.1");
  config.put(Services.UDP_PORT,"13466");
  config.put(Services.SUPERUSER_USERNAME,"superadmin");
  config.put(Services.SUPERUSER_PASSWORD,"sehrgeheim");
  final Services services=Services.getInstance(config);
  securityContext=SecurityContext.getSuperUserInstance();
  graphDbCommand=StructrApp.getInstance(securityContext).command(GraphDatabaseCommand.class);
  writeLogCommand=StructrApp.getInstance(securityContext).command(WriteLogCommand.class);
  readLogCommand=StructrApp.getInstance(securityContext).command(ReadLogCommand.class);
  do {
    try {
      Thread.sleep(100);
    }
 catch (    Throwable t) {
    }
  }
 while (!services.isInitialized());
  app=StructrApp.getInstance(securityContext);
}
