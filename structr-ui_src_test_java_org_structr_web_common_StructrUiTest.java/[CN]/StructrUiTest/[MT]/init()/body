{
  String name="structr-ui-test-" + System.nanoTime();
  basePath="/tmp/" + name;
  try {
    HtmlServlet htmlServlet=new HtmlServlet();
    ServletHolder htmlServletHolder=new ServletHolder(htmlServlet);
    Map<String,String> htmlInitParams=new HashMap<String,String>();
    htmlInitParams.put("Authenticator","org.structr.web.auth.HttpAuthenticator");
    htmlServletHolder.setInitParameters(htmlInitParams);
    htmlServletHolder.setInitOrder(1);
    WebSocketServlet wsServlet=new WebSocketServlet(AbstractNode.uuid);
    ServletHolder wsServletHolder=new ServletHolder(wsServlet);
    Map<String,String> wsInitParams=new HashMap<String,String>();
    wsInitParams.put("Authenticator","org.structr.web.auth.UiAuthenticator");
    wsInitParams.put("IdProperty","uuid");
    wsServletHolder.setInitParameters(wsInitParams);
    wsServletHolder.setInitOrder(3);
    server=Structr.createServer(Ui.class,"structr UI",httpPort).host(host).basePath(basePath).addServlet(htmlUrl + "/*",htmlServletHolder).addServlet(wsUrl + "/*",wsServletHolder).addResourceHandler("/structr","src/main/resources/structr",true,new String[]{"index.html"}).enableRewriteFilter().resourceProvider(UiResourceProvider.class).authenticator(UiAuthenticator.class).start(false,true);
    running=server.isRunning();
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
