{
  try {
    final List<DataNode> dataNodes=this.createTestNodes(DataNode.class,7);
    final Page doc=(Page)getDocument();
    final String key="TEST";
    assertEquals(7,dataNodes.size());
    DataNode rootNode=dataNodes.get(0);
    rootNode.setName("rootNode");
    DataNode nodeA=dataNodes.get(1);
    nodeA.setName("nodeA");
    DataNode nodeB=dataNodes.get(2);
    nodeB.setName("nodeB");
    DataNode nodeC=dataNodes.get(3);
    nodeC.setName("nodeC");
    DataNode nodeD=dataNodes.get(4);
    nodeD.setName("nodeD");
    DataNode nodeE=dataNodes.get(5);
    nodeE.setName("nodeE");
    DataNode nodeF=dataNodes.get(6);
    nodeF.setName("nodeF");
    rootNode.appendChild(key,nodeA);
    rootNode.appendChild(key,nodeB);
    nodeA.appendChild(key,nodeC);
    nodeA.appendChild(key,nodeD);
    nodeB.appendChild(key,nodeE);
    nodeB.appendChild(key,nodeF);
    Element html=doc.createElement("html");
    doc.appendChild(html);
    Element body=doc.createElement("body");
    html.appendChild(body);
    Element ul1=doc.createElement("ul");
    body.appendChild(ul1);
    Element li1=doc.createElement("li");
    ul1.appendChild(li1);
    li1.appendChild(doc.createTextNode("${data.name}"));
    Element ul2=doc.createElement("ul");
    li1.appendChild(ul2);
    Element li2=doc.createElement("li");
    ul2.appendChild(li2);
    li2.appendChild(doc.createTextNode("${data.name}"));
    PropertyMap properties=new PropertyMap();
    properties.put(LinkedListNode.keyProperty,key);
    Services.command(securityContext,CreateRelationshipCommand.class).execute((DOMElement)ul1,rootNode,RelType.RENDER_TREE,properties,false);
    ((DOMElement)ul1).setProperty(DOMElement.dataKey,"data");
    ((DOMElement)ul2).setProperty(DOMElement.dataKey,"data");
    RenderContext ctx=new RenderContext(null,null,false,Locale.GERMAN);
    doc.render(securityContext,ctx,0);
    System.out.println(ctx.getBuffer().toString());
  }
 catch (  FrameworkException fex) {
    fail("unexpected exception");
  }
}
