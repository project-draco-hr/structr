{
  Document wrongDocument=getDocument();
  Document document=getDocument();
  assertNotNull(document);
  assertNotNull(wrongDocument);
  Text wrongTextNode=wrongDocument.createTextNode("test");
  Text test1=document.createTextNode("test1");
  Text test2=document.createTextNode("test2");
  Text test3=document.createTextNode("test3");
  assertNotNull(test1);
  assertNotNull(test2);
  assertNotNull(test3);
  Element div=document.createElement("div");
  assertNotNull(div);
  div.appendChild(test1);
  div.appendChild(test2);
  div.appendChild(test3);
  NodeList children=div.getChildNodes();
  assertEquals(test1,children.item(0));
  assertEquals(test2,children.item(1));
  assertEquals(test3,children.item(2));
  Element div2=document.createElement("div");
  assertNotNull(div2);
  div.appendChild(div2);
  assertEquals(div,div2.getParentNode());
  try {
    div.appendChild(wrongTextNode);
    fail("Adding a node that was not created using the correct document should raise a DOMException");
  }
 catch (  DOMException dex) {
    assertEquals(DOMException.WRONG_DOCUMENT_ERR,dex.code);
  }
  try {
    div.appendChild(div);
    fail("Adding a node to itself should raise a DOMException");
  }
 catch (  DOMException dex) {
    assertEquals(DOMException.HIERARCHY_REQUEST_ERR,dex.code);
  }
  try {
    div2.appendChild(div);
    fail("Adding one of its own ancestors to a node should raise a DOMException");
  }
 catch (  DOMException dex) {
    assertEquals(DOMException.HIERARCHY_REQUEST_ERR,dex.code);
  }
}
