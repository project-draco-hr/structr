{
  final String pageName="page-01";
  final String pageTitle="Page Title";
  final String bodyText="Body Text";
  final String h1ClassAttr="heading";
  final String divClassAttr="main";
  try {
    Page page=transactionCommand.execute(new StructrTransaction<Page>(){
      @Override public Page execute() throws FrameworkException {
        Page page=(Page)createElement(null,Page.class.getSimpleName(),0,null,pageName);
        page.setProperty(Page.contentType,"text/html");
        Html html=(Html)createElement(page,Html.class.getSimpleName(),0,page);
        Head head=(Head)createElement(page,Head.class.getSimpleName(),0,html);
        Body body=(Body)createElement(page,Body.class.getSimpleName(),1,html);
        Title title=(Title)createElement(page,Title.class.getSimpleName(),0,head);
        Content content=(Content)createElement(page,Content.class.getSimpleName(),0,title);
        content.setProperty(Content.content,pageTitle);
        H1 h1=(H1)createElement(page,H1.class.getSimpleName(),0,body);
        h1.setProperty(Div._class,h1ClassAttr);
        Content h1Content=(Content)createElement(page,Content.class.getSimpleName(),0,h1);
        h1Content.setProperty(Content.content,pageTitle);
        Div div=(Div)createElement(page,Div.class.getSimpleName(),1,body);
        div.setProperty(Div._class,divClassAttr);
        Content divContent=(Content)createElement(page,Content.class.getSimpleName(),0,div);
        divContent.setProperty(Content.content,bodyText);
        return page;
      }
    }
);
    assertTrue(page != null);
    assertTrue(page instanceof Page);
    try {
      Document doc=Jsoup.connect(baseUri + pageName).get();
      System.out.println(doc.html());
      assertFalse(doc.select("html").isEmpty());
      assertFalse(doc.select("html > head").isEmpty());
      assertFalse(doc.select("html > head > title").isEmpty());
      assertFalse(doc.select("html > body").isEmpty());
      assertEquals(doc.select("html > head > title").first().text(),pageTitle);
      Elements h1=doc.select("html > body > h1");
      assertFalse(h1.isEmpty());
      assertEquals(h1.first().text(),pageTitle);
      assertEquals(h1.first().attr("class"),h1ClassAttr);
      Elements div=doc.select("html > body > div");
      assertFalse(div.isEmpty());
      assertEquals(div.first().text(),bodyText);
      assertEquals(div.first().attr("class"),divClassAttr);
    }
 catch (    IOException ioex) {
      logger.log(Level.SEVERE,ioex.toString());
      fail("Unexpected IOException");
    }
  }
 catch (  FrameworkException ex) {
    logger.log(Level.SEVERE,ex.toString());
    fail("Unexpected exception");
  }
}
