{
  final String username="tester";
  final String password="test";
  final String userId=getUuidFromLocation(RestAssured.given().contentType("application/json; charset=UTF-8").header("X-User","superadmin").header("X-Password","sehrgeheim").body(" { 'name' : '" + username + "', 'password': '"+ password+ "' } ").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(200)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(400)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(401)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(403)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).expect().statusCode(201).when().post("/users").header("Location"));
  String resource="/test_ones";
  grant("TestOne",5,true);
  grant("TestOne/_All",1,false);
  grant("TestOne/_Ui",1,false);
  grant("Page",5,false);
  grant("Page/_Ui",1,false);
  grant("Page/_Html",1,false);
  final String uuid=getUuidFromLocation(RestAssured.given().contentType("application/json; charset=UTF-8").header("X-User",username).header("X-Password",password).header("Accept","application/json; charset=UTF-8").body(" { 'name' : 'TestOne-0', 'anInt' : 0, 'aLong' : 0, 'aDate' : '2012-09-18T00:33:12+0200' } ").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(400)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(401)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).expect().statusCode(201).when().post(resource).getHeader("Location"));
  RestAssured.given().contentType("application/json; charset=UTF-8").header("X-User",username).header("X-Password",password).header("Accept","application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(400)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(401)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).expect().statusCode(200).body("query_time",notNullValue()).body("serialization_time",notNullValue()).body("result_count",equalTo(1)).body("result",hasSize(1)).body("result[0].id",equalTo(uuid)).body("result[0].type",equalTo(TestOne.class.getSimpleName())).body("result[0].name",equalTo("TestOne-0")).body("result[0].anInt",equalTo(0)).body("result[0].aLong",equalTo(0)).body("result[0].aDate",equalTo("2012-09-18T00:33:12+0200")).when().get(resource);
  RestAssured.given().contentType("application/json; charset=UTF-8").header("X-User",username).header("X-Password",password).header("Accept","application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(400)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(401)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).expect().statusCode(200).body("query_time",notNullValue()).body("serialization_time",notNullValue()).body("result_count",equalTo(1)).body("result",hasSize(1)).body("result[0].id",equalTo(uuid)).body("result[0].type",equalTo(TestOne.class.getSimpleName())).body("result[0].name",equalTo("TestOne-0")).body("result[0].anInt",equalTo(0)).body("result[0].aLong",equalTo(0)).body("result[0].aDate",equalTo("2012-09-18T00:33:12+0200")).body("result[0].base",nullValue()).body("result[0].createdDate",notNullValue()).body("result[0].lastModifiedDate",notNullValue()).body("result[0].visibleToPublicUsers",equalTo(false)).body("result[0].visibleToAuthenticatedUsers",equalTo(false)).body("result[0].visibilityStartDate",nullValue()).body("result[0].visibilityEndDate",nullValue()).body("result[0].createdBy",equalTo(userId)).body("result[0].deleted",equalTo(false)).body("result[0].hidden",equalTo(false)).body("result[0].owner",notNullValue()).body("result[0].ownerId",equalTo(userId)).when().get(resource + "/all");
  RestAssured.given().contentType("application/json; charset=UTF-8").header("X-User",username).header("X-Password",password).header("Accept","application/json; charset=UTF-8").filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(200)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(400)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(401)).filter(ResponseLoggingFilter.logResponseIfStatusCodeIs(500)).expect().statusCode(200).body("query_time",notNullValue()).body("serialization_time",notNullValue()).body("result_count",equalTo(1)).body("result",hasSize(1)).body("result[0].id",equalTo(uuid)).body("result[0].type",equalTo(TestOne.class.getSimpleName())).body("result[0].name",equalTo("TestOne-0")).body("result[0].anInt",equalTo(0)).body("result[0].aLong",equalTo(0)).body("result[0].aDate",equalTo("2012-09-18T00:33:12+0200")).when().get(resource + "/ui");
}
