{
  clearResourceAccess();
  final String name="testuser-01";
  final String password="testpassword-01";
  Folder testFolder=null;
  User testUser=null;
  ResourceAccess folderGrant=null;
  try (final Tx tx=app.tx()){
    testFolder=createTestNodes(Folder.class,1).get(0);
    assertNotNull(testFolder);
    testUser=createTestNodes(User.class,1).get(0);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    logger.log(Level.SEVERE,fex.toString());
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    RestAssured.given().contentType("application/json; charset=UTF-8").expect().statusCode(401).when().delete("/folder/" + testFolder.getUuid());
    folderGrant=createResourceAccess("Folder",UiAuthenticator.FORBIDDEN);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    logger.log(Level.SEVERE,fex.toString());
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    RestAssured.given().contentType("application/json; charset=UTF-8").expect().statusCode(401).when().delete("/folder/" + testFolder.getUuid());
    folderGrant.setFlag(UiAuthenticator.AUTH_USER_DELETE);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    logger.log(Level.SEVERE,fex.toString());
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    RestAssured.given().contentType("application/json; charset=UTF-8").expect().statusCode(401).when().delete("/folder/" + testFolder.getUuid());
    folderGrant.setProperty(GraphObject.visibleToPublicUsers,true);
    folderGrant.setFlag(UiAuthenticator.NON_AUTH_USER_DELETE);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    logger.log(Level.SEVERE,fex.toString());
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    RestAssured.given().contentType("application/json; charset=UTF-8").expect().statusCode(403).when().delete("/folder/" + testFolder.getUuid());
    testUser.setProperty(AbstractNode.name,name);
    testUser.setProperty(User.password,password);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    logger.log(Level.SEVERE,fex.toString());
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    RestAssured.given().headers("X-User",name,"X-Password",password).contentType("application/json; charset=UTF-8").expect().statusCode(403).when().delete("/folder/" + testFolder.getUuid());
    testFolder.setProperty(AbstractNode.owner,testUser);
    tx.success();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
    logger.log(Level.SEVERE,fex.toString());
    fail("Unexpected exception");
  }
  try (final Tx tx=app.tx()){
    RestAssured.given().headers("X-User",name,"X-Password",password).contentType("application/json; charset=UTF-8").expect().statusCode(200).when().delete("/folder/" + testFolder.getUuid());
    tx.success();
  }
 catch (  FrameworkException ex) {
    ex.printStackTrace();
    logger.log(Level.SEVERE,ex.toString());
    fail("Unexpected exception");
  }
}
