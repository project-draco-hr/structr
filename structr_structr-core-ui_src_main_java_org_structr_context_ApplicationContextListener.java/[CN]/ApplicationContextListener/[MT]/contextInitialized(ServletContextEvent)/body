{
  logger.log(Level.INFO,"Servlet context created");
  Map<String,Object> context=new ConcurrentHashMap<String,Object>();
  ServletContext servletContext=sce.getServletContext();
  String configFile=servletContext.getInitParameter(Services.CONFIG_FILE_PATH);
  context.put(Services.CONFIG_FILE_PATH,configFile);
  context.put(Services.SERVLET_CONTEXT,servletContext);
  try {
    Properties properties=new Properties();
    properties.load(new FileInputStream(configFile));
    String appTitle=properties.getProperty(Services.APPLICATION_TITLE);
    logger.log(Level.INFO,"Config file: Application title: {0}",appTitle);
    String databasePath=properties.getProperty(Services.DATABASE_PATH_IDENTIFIER);
    logger.log(Level.INFO,"Config file: Database path: {0}",databasePath);
    String filesPath=properties.getProperty(Services.FILES_PATH_IDENTIFIER);
    logger.log(Level.INFO,"Config file: Files path: {0}",filesPath);
    String pluginsPath=properties.getProperty(Services.MODULES_PATH_IDENTIFIER);
    logger.log(Level.INFO,"Config file: Plugins path: {0}",pluginsPath);
    String entityPackages=properties.getProperty(Services.ENTITY_PACKAGES_IDENTIFIER);
    logger.log(Level.INFO,"Config file: Entity Packages: {0}",entityPackages);
    context.put(Services.APPLICATION_TITLE,appTitle);
    context.put(Services.DATABASE_PATH_IDENTIFIER,databasePath);
    context.put(Services.FILES_PATH_IDENTIFIER,filesPath);
    context.put(Services.MODULES_PATH_IDENTIFIER,pluginsPath);
    context.put(Services.ENTITY_PACKAGES_IDENTIFIER,entityPackages);
  }
 catch (  Throwable t) {
    context.put(Services.APPLICATION_TITLE,servletContext.getInitParameter(Services.APPLICATION_TITLE));
    context.put(Services.DATABASE_PATH_IDENTIFIER,servletContext.getInitParameter(Services.DATABASE_PATH_IDENTIFIER));
    context.put(Services.FILES_PATH_IDENTIFIER,servletContext.getInitParameter(Services.FILES_PATH_IDENTIFIER));
    context.put(Services.MODULES_PATH_IDENTIFIER,servletContext.getInitParameter(Services.MODULES_PATH_IDENTIFIER));
    context.put(Services.ENTITY_PACKAGES_IDENTIFIER,servletContext.getInitParameter(Services.ENTITY_PACKAGES_IDENTIFIER));
  }
  context.put(Services.STRUCTR_PAGE_PREDICATE,new Predicate<Class>(){
    @Override public boolean evaluate(    Class obj){
      return (StructrPage.class.isAssignableFrom(obj));
    }
  }
);
  Services.setContext(context);
}
