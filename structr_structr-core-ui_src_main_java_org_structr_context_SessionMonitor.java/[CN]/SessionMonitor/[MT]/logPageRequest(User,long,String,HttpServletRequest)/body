{
  if (request != null) {
    final Command transactionCommand=Services.createCommand(TransactionCommand.class);
    transactionCommand.execute(new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        Command createNode=Services.createCommand(CreateNodeCommand.class);
        Date now=new Date();
        StructrNode s=(StructrNode)createNode.execute(user,new NodeAttribute(StructrNode.TYPE_KEY,PageRequest.class.getSimpleName()),new NodeAttribute(StructrNode.NAME_KEY,user.getName() + ":" + action+ ":"+ now),new NodeAttribute(PageRequest.URI_KEY,request.getRequestURI()),new NodeAttribute(Activity.ACTIVITY_TEXT_KEY,user.getName() + ":" + action+ ":"+ now),new NodeAttribute(PageRequest.REMOTE_ADDRESS_KEY,request.getRemoteAddr()),new NodeAttribute(PageRequest.REMOTE_HOST_KEY,request.getRemoteHost()),new NodeAttribute(PageRequest.START_TIMESTAMP_KEY,now),new NodeAttribute(PageRequest.END_TIMESTAMP_KEY,now));
        Activity activity=new Activity();
        activity.init(s);
        getSession(sessionId).getActivityList().add(activity);
        return null;
      }
    }
);
  }
}
