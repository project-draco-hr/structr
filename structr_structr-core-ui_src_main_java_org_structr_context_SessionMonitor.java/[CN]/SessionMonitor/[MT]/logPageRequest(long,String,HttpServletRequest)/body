{
  long t0=System.currentTimeMillis();
  Date now=new Date();
  User user=CurrentRequest.getCurrentUser();
  PageRequest pageRequest=new PageRequest();
  pageRequest.setProperty(AbstractNode.TYPE_KEY,PageRequest.class.getSimpleName());
  pageRequest.setProperty(AbstractNode.NAME_KEY,action + ", Date: " + now);
  StringBuilder text=new StringBuilder();
  text.append("{");
  if (request != null) {
    Map<String,Object> parameterMap=request.getParameterMap();
    Set<String> keys=parameterMap.keySet();
    for (    String key : keys) {
      text.append("\"").append(key).append("\": \"").append(request.getParameter(key)).append("\", ");
    }
    text.append("\"uri\": \"").append(request.getRequestURI()).append("\", ");
    text.append("\"remoteAddress\": \"").append(request.getRemoteAddr()).append("\", ");
    text.append("\"remoteHost\": \"").append(request.getRemoteHost()).append("\"");
  }
  pageRequest.setProperty(Activity.SESSION_ID_KEY,sessionId);
  pageRequest.setProperty(Activity.START_TIMESTAMP_KEY,now);
  pageRequest.setProperty(Activity.END_TIMESTAMP_KEY,now);
  pageRequest.setUser(user);
  text.append("}");
  pageRequest.setActivityText(text.toString());
  getSession(sessionId).setLastActivity(pageRequest);
  Services.command(LogCommand.class).execute(pageRequest);
  long t1=System.currentTimeMillis();
  logger.log(Level.INFO,"Logging of page request took {0} ms",(t1 - t0) / 1000);
}
