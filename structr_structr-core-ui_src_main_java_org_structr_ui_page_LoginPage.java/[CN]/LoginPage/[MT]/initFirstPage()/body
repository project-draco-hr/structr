{
  String startNodeId=getNodeId();
  if (startNodeId == null) {
    startNodeId=restoreLastVisitedNodeFromUserProfile();
    nodeId=startNodeId;
  }
  Map<String,String> parameters=new HashMap<String,String>();
  parameters.put(NODE_ID_KEY,String.valueOf(getNodeId()));
  Class<? extends Page> editPage=getEditPageClass(getNodeByIdOrPath(nodeId));
  setRedirect(editPage,parameters);
  long[] expandedNodesArray=getExpandedNodesFromUserProfile();
  if (expandedNodesArray != null && expandedNodesArray.length > 0) {
    openNodes=new ArrayList<TreeNode>();
    Command findNode=Services.createCommand(FindNodeCommand.class);
    for (    Long s : expandedNodesArray) {
      StructrNode n=(StructrNode)findNode.execute(user,s);
      if (n != null) {
        openNodes.add(new TreeNode(n,String.valueOf(n.getId())));
      }
    }
    getContext().getSession().setAttribute(EXPANDED_NODES_KEY,openNodes);
  }
}
