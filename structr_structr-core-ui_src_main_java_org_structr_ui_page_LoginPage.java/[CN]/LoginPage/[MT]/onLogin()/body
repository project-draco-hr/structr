{
  if (loginForm.isValid()) {
    String userValue=loginForm.getFieldValue(USERNAME_KEY);
    returnUrl=loginForm.getFieldValue(RETURN_URL_KEY);
    String passwordValue=loginForm.getFieldValue(PASSWORD_KEY);
    if (SUPERADMIN_USERNAME_KEY.equals(userValue) && SUPERADMIN_PASSWORD_KEY.equals(passwordValue)) {
      logger.log(Level.INFO,"############# Logged in as superadmin! ############");
      userName=SUPERADMIN_USERNAME_KEY;
      isSuperUser=true;
      user=new SuperUser();
      getContext().getRequest().getSession().setAttribute(USERNAME_KEY,userValue);
      Services.initialize();
      setRedirect("/admin/maintenance.htm");
    }
 else {
      Services.initialize();
      Command findUser=Services.command(FindUserCommand.class);
      user=(User)findUser.execute(userValue);
      if (user == null) {
        logger.log(Level.INFO,"No user found for name {0}",user);
        errorMsg="Wrong username or password, or user is blocked. Check caps lock. Note: Username is case sensitive!";
        return true;
      }
      if (user.isBlocked()) {
        logger.log(Level.INFO,"User {0} is blocked",user);
        errorMsg="Wrong username or password, or user is blocked. Check caps lock. Note: Username is case sensitive!";
        return true;
      }
      if (passwordValue == null) {
        logger.log(Level.INFO,"Password for user {0} is null",user);
        errorMsg="You should enter a password.";
        return true;
      }
      String encryptedPasswordValue=DigestUtils.sha512Hex(passwordValue);
      if (!encryptedPasswordValue.equals(user.getPassword())) {
        logger.log(Level.INFO,"Wrong password for user {0}",user);
        errorMsg="Wrong username or password, or user is blocked. Check caps lock. Note: Username is case sensitive!";
        return true;
      }
      userName=userValue;
      getContext().getRequest().getSession().setAttribute(USERNAME_KEY,userValue);
      initFirstPage();
    }
    sessionId=SessionMonitor.registerUserSession(user,getContext().getSession());
    SessionMonitor.logActivity(user,sessionId,"Login");
    getContext().getRequest().getSession().setAttribute(SessionMonitor.SESSION_ID,sessionId);
    return false;
  }
  return true;
}
