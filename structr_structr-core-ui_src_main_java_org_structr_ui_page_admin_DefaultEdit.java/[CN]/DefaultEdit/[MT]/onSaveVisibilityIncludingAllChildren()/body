{
  if (editVisibilityForm.isValid()) {
    final Command transactionCommand=Services.command(TransactionCommand.class);
    transactionCommand.execute(new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        AbstractNode root=getNodeByIdOrPath(getNodeId());
        List<AbstractNode> childNodes=root.getAllChildren(user);
        childNodes.add(root);
        for (        AbstractNode s : childNodes) {
          editVisibilityForm.copyTo(s,true);
          if (s instanceof Image) {
            Image i=(Image)s;
            for (            StructrRelationship r : i.getThumbnailRelationships()) {
              Image thumbnail=(Image)r.getEndNode();
              editVisibilityForm.copyTo(thumbnail,false);
            }
          }
        }
        transactionCommand.setExitCode(Command.exitCode.SUCCESS);
        okMsg="Node visibility parameter successfully saved on " + childNodes.size() + " nodes.";
        return (null);
      }
    }
);
    Map<String,String> parameters=new HashMap<String,String>();
    parameters.put(NODE_ID_KEY,nodeId.toString());
    setRedirect(getPath(),parameters);
    return false;
  }
 else {
    return true;
  }
}
