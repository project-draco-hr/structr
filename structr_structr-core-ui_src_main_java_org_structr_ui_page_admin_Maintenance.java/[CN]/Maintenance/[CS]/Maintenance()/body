{
  maintenancePanel=new Panel("maintenancePanel","/panel/maintenance-panel.htm");
  sessionsTable.addColumn(new Column("id"));
  sessionsTable.addColumn(new Column("state"));
  sessionsTable.addColumn(new Column("userName"));
  sessionsTable.addColumn(new Column("remoteHost"));
  sessionsTable.addColumn(new Column("remoteAddr"));
  sessionsTable.addColumn(new Column("remoteUser"));
  Column loginTimestampColumn=new Column("loginTimestamp","Login");
  loginTimestampColumn.setFormat("{0,date,medium} {0,time,medium}");
  sessionsTable.addColumn(loginTimestampColumn);
  sessionsTable.addColumn(new Column("logoutTimestamp","Logout"));
  sessionsTable.addColumn(new Column("lastActivityText"));
  sessionsTable.addColumn(new Column("inactiveSince","Inactive (s)"));
  sessionsTable.setSortable(true);
  sessionsTable.setSortedColumn("inactiveSince");
  sessionsTable.setSortedAscending(true);
  sessionsTable.setClass(Table.CLASS_COMPLEX);
  servicesTable.addColumn(new Column("Name"));
  servicesTable.addColumn(new Column("isRunning","Running"));
  servicesTable.setSortable(true);
  servicesTable.setClass(Table.CLASS_COMPLEX);
  initValuesTable.addColumn(new Column("key","Parameter"));
  initValuesTable.addColumn(new Column("value","Value"));
  initValuesTable.setSortable(true);
  initValuesTable.setClass(Table.CLASS_COMPLEX);
  runtimeValuesTable.addColumn(new Column("key","Parameter"));
  runtimeValuesTable.addColumn(new Column("value","Value"));
  runtimeValuesTable.setSortable(true);
  runtimeValuesTable.setClass(Table.CLASS_COMPLEX);
  modulesTable.addColumn(new Column("toString","Name"));
  modulesTable.setSortable(true);
  modulesTable.setClass(Table.CLASS_COMPLEX);
  Column iconCol=new Column("iconSrc","Icon");
  iconCol.setDecorator(new Decorator(){
    @Override public String render(    Object row,    Context context){
      NodeClassEntry nce=(NodeClassEntry)row;
      String iconSrc=contextPath + nce.getIconSrc();
      return "<img src=\"" + iconSrc + "\" alt=\""+ iconSrc+ "\" width=\"16\" height=\"16\">";
    }
  }
);
  registeredClassesTable.addColumn(iconCol);
  registeredClassesTable.addColumn(new Column("name","Name"));
  registeredClassesTable.addColumn(new Column("count","Count"));
  registeredClassesTable.setSortable(true);
  registeredClassesTable.setSortedColumn("name");
  registeredClassesTable.setClass(Table.CLASS_COMPLEX);
  allNodesTable.addColumn(new Column(StructrNode.NODE_ID_KEY));
  allNodesTable.addColumn(new Column(StructrNode.NAME_KEY));
  allNodesTable.addColumn(new Column(StructrNode.TYPE_KEY));
  allNodesTable.addColumn(new Column(StructrNode.POSITION_KEY));
  allNodesTable.addColumn(new Column(StructrNode.PUBLIC_KEY));
  allNodesTable.addColumn(new Column(StructrNode.OWNER_KEY));
  allNodesTable.addColumn(new Column(StructrNode.CREATED_BY_KEY));
  allNodesTable.addColumn(new Column(StructrNode.CREATED_DATE_KEY));
  allNodesTable.addColumn(new Column("allProperties"));
  allNodesTable.setSortable(true);
  allNodesTable.setPageSize(25);
  allNodesTable.setClass(Table.CLASS_COMPLEX);
}
