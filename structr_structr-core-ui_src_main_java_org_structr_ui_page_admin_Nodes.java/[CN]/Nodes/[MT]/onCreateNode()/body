{
  StructrNode s=null;
  if (newNodeForm.isValid()) {
    Command transactionCommand=Services.createCommand(TransactionCommand.class);
    s=(StructrNode)transactionCommand.execute(new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        Command createNode=Services.createCommand(CreateNodeCommand.class);
        Command createRel=Services.createCommand(CreateRelationshipCommand.class);
        StructrNode parentNode=node;
        StructrNode newNode=(StructrNode)createNode.execute(user);
        newNodeForm.copyTo(newNode);
        createRel.execute(parentNode,newNode,RelType.HAS_CHILD);
        newNodeForm.clearValues();
        addTreeNode(newNode,getCurrentTreeNode());
        return (newNode);
      }
    }
);
    if (s != null) {
      okMsg="New " + s.getType() + " node "+ s.getName()+ " has been created.";
    }
    Command findNode=Services.createCommand(FindNodeCommand.class);
    StructrNode n=(StructrNode)findNode.execute(user,s.getId());
    Map<String,String> parameters=new HashMap<String,String>();
    parameters.put(NODE_ID_KEY,String.valueOf(n.getId()));
    parameters.put(RENDER_MODE_KEY,renderMode);
    parameters.put(OK_MSG_KEY,okMsg);
    setRedirect(getRedirectPage(n,this),parameters);
    setRedirect(getRedirect().concat("#properties-tab"));
  }
  if (!newNodeForm.isValid()) {
    newNodeFormIsInvalid="true";
    return true;
  }
  return false;
}
