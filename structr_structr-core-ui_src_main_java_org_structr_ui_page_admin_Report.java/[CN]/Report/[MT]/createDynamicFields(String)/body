{
  searchAttributes.add(new SearchAttribute(StructrNode.TYPE_KEY,resultType,SearchOperator.AND));
  Class<StructrNode> c=(Class<StructrNode>)Services.createCommand(GetEntityClassCommand.class).execute(resultType);
  if (c != null) {
    java.lang.reflect.Field[] fields=c.getFields();
    StructrNode o=new EmptyNode();
    try {
      o=(StructrNode)c.newInstance();
    }
 catch (    Throwable t) {
      logger.log(Level.SEVERE,null,t);
    }
    if (fields != null) {
      for (      java.lang.reflect.Field f : fields) {
        String fieldName=null;
        try {
          fieldName=(String)f.get(o);
          if (StructrNode.TYPE_KEY.equals(fieldName)) {
            continue;
          }
          TextField text=new TextField(fieldName);
          text.bindRequestValue();
          propertyFields.add(text);
          Checkbox check=new Checkbox(checkBoxName(fieldName),"");
          check.bindRequestValue();
          propertyFields.add(check);
          String fieldValue=reportForm.getFieldValue(fieldName);
          if (fieldValue != null && !(fieldValue.isEmpty())) {
            searchAttributes.add(new SearchAttribute(fieldName,fieldValue,SearchOperator.AND));
          }
          Field field=propertyFields.getField(checkBoxName(fieldName));
          Checkbox checkbox=null;
          if (field instanceof Checkbox) {
            checkbox=(Checkbox)field;
          }
          if (checkbox.isChecked()) {
            Column col;
            col=new Column(fieldName);
            reportTable.addColumn(col);
            columns.add(col);
          }
          reportForm.add(propertyFields);
        }
 catch (        Throwable t) {
          logger.log(Level.SEVERE,null,t);
        }
      }
    }
  }
}
