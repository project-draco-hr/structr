{
  if (nodeOne instanceof Link) {
    nodeOne=((Link)nodeOne).getStructrNode();
  }
  if (nodeTwo instanceof Link) {
    nodeTwo=((Link)nodeTwo).getStructrNode();
  }
  Method getterOne=null;
  try {
    getterOne=nodeOne.getClass().getMethod(sortKey);
  }
 catch (  Exception ex) {
    logger.log(Level.FINE,"Cannot invoke method {0}",sortKey);
  }
  Method getterTwo=null;
  try {
    getterTwo=nodeOne.getClass().getMethod(sortKey);
  }
 catch (  Exception ex) {
    logger.log(Level.FINE,"Cannot invoke method {0}",sortKey);
  }
  int result=0;
  if (getterOne != null && getterTwo != null) {
    Object valueOne=null;
    try {
      valueOne=getterOne.invoke(nodeOne);
    }
 catch (    Exception ex) {
      logger.log(Level.FINE,"Cannot invoke method {0} on {1}",new Object[]{getterOne,nodeOne});
    }
    Object valueTwo=null;
    try {
      valueTwo=getterTwo.invoke(nodeTwo);
    }
 catch (    Exception ex) {
      logger.log(Level.FINE,"Cannot invoke method {0} on {1}",new Object[]{getterTwo,nodeTwo});
    }
    if (valueOne != null && valueTwo != null) {
      if (valueOne instanceof Comparable && valueTwo instanceof Comparable) {
        if (sortOrder != null && sortOrder.equals(ASCENDING)) {
          result=((Comparable)valueOne).compareTo((Comparable)valueTwo);
        }
 else {
          result=((Comparable)valueTwo).compareTo((Comparable)valueOne);
        }
      }
 else {
        if (sortOrder != null && sortOrder.equals(ASCENDING)) {
          result=valueOne.toString().compareTo(valueTwo.toString());
        }
 else {
          result=valueTwo.toString().compareTo(valueOne.toString());
        }
      }
    }
  }
  return result;
}
