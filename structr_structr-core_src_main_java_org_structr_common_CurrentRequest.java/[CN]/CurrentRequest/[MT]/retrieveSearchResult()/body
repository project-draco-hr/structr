{
  CurrentRequest request=getRequestContext();
  if (request != null) {
    HttpServletRequest requestInternal=request.getRequestInternal();
    String searchString=Search.normalize(requestInternal.getParameter("search"));
    String searchInTitle=requestInternal.getParameter("searchInTitle");
    boolean inTitle=(StringUtils.isNotEmpty(searchInTitle) && Boolean.parseBoolean(searchInTitle)) ? true : false;
    String searchInContent=requestInternal.getParameter("searchInContent");
    boolean inContent=(StringUtils.isNotEmpty(searchInContent) && Boolean.parseBoolean(searchInContent)) ? true : false;
    if ((searchString != null) && !(searchString.isEmpty())) {
      List<SearchAttribute> searchAttrs=new LinkedList<SearchAttribute>();
      searchAttrs.add(Search.orName(searchString));
      if (inTitle) {
        searchAttrs.add(Search.orTitle(searchString));
      }
      if (inContent) {
        searchAttrs.add(Search.orContent(searchString));
      }
      Command search=Services.command(SearchNodeCommand.class);
      List<AbstractNode> result=(List<AbstractNode>)search.execute(CurrentSession.getUser(),null,false,true,searchAttrs);
      request.setSearchResultInternal(result);
    }
  }
}
