{
  if (n1 == null || n2 == null) {
    logger.log(Level.WARNING,"Cannot compare null objects!");
    return -1;
  }
  try {
    Comparable c1=n1.getComparableProperty(sortKey);
    Comparable c2=n2.getComparableProperty(sortKey);
    if (c1 == null || c2 == null) {
      try {
        logger.log(Level.WARNING,"Cannot compare {0} of type {1} to {2} of type {3}, sort key {4} not found.",new Object[]{n1.getStringProperty(AbstractNode.Key.uuid.name()),n1.getStringProperty(AbstractNode.Key.type.name()),n2.getStringProperty(AbstractNode.Key.uuid.name()),n2.getStringProperty(AbstractNode.Key.type.name()),sortKey});
      }
 catch (      Throwable t) {
        logger.log(Level.SEVERE,"Error in comparator",t);
      }
      return -1;
    }
    if (DESCENDING.equals(sortOrder)) {
      return (c2.compareTo(c1));
    }
 else {
      return (c1.compareTo(c2));
    }
  }
 catch (  Throwable t) {
    logger.log(Level.WARNING,"Cannot compare properties {0} of type {1} to {2} of type {3}, property {4} error.",new Object[]{n1.getStringProperty(AbstractNode.Key.uuid.name()),n1.getStringProperty(AbstractNode.Key.type.name()),n2.getStringProperty(AbstractNode.Key.uuid.name()),n2.getStringProperty(AbstractNode.Key.type.name()),sortKey});
  }
  return 0;
}
