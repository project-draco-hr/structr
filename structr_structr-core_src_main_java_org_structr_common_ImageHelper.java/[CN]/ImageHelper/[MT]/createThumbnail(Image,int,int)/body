{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  try {
    long start=System.nanoTime();
    BufferedImage source=ImageIO.read(originalImage.getInputStream());
    if (source != null) {
      int sourceWidth=source.getWidth();
      int sourceHeight=source.getHeight();
      originalImage.setWidth(sourceWidth);
      originalImage.setHeight(sourceHeight);
      float scaleX=1.0f * sourceWidth / maxWidth;
      float scaleY=1.0f * sourceHeight / maxHeight;
      float scale=Math.max(scaleX,scaleY);
      if (scale > 1.0000f) {
        int destWidth=Math.max(3,Math.round(sourceWidth / scale));
        int destHeight=Math.max(3,Math.round(sourceHeight / scale));
        tn.setWidth(destWidth);
        tn.setHeight(destHeight);
        ResampleOp resampleOp=new ResampleOp(destWidth,destHeight);
        BufferedImage dest=resampleOp.filter(source,null);
        ImageIO.write(dest,Thumbnail.FORMAT,baos);
      }
 else {
        ImageIO.write(source,Thumbnail.FORMAT,baos);
      }
    }
 else {
      logger.log(Level.SEVERE,"Thumbnail could not be created");
      return null;
    }
    long end=System.nanoTime();
    long time=(end - start) / 1000000;
    logger.log(Level.FINE,"Thumbnail created. Reading, scaling and writing took {0} ms",time);
    tn.setBytes(baos.toByteArray());
    return tn;
  }
 catch (  Throwable t) {
    logger.log(Level.SEVERE,"Error creating thumbnail",t);
  }
  return null;
}
