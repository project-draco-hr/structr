{
  Predicate<Path> ret=new Predicate<Path>(){
    @Override public boolean accept(    Path path){
      return (path.length() > 0);
    }
  }
;
  if (test instanceof NodeNameTest) {
    NodeNameTest nameTest=(NodeNameTest)test;
    QName name=nameTest.getNodeName();
    final String shortName=name.getName();
    final boolean isWildcard=nameTest.isWildcard();
    ret=new Predicate<Path>(){
      @Override public boolean accept(      Path path){
        Node node=path.endNode();
        return (node.hasProperty(AbstractNode.Key.type.name()) && (isWildcard || shortName.equals((String)node.getProperty(AbstractNode.Key.type.name()))));
      }
    }
;
  }
  return (ret);
}
