{
  LogNodeList<Activity> activityList;
  for (  AbstractNode s : user.getDirectChildNodes()) {
    if (s instanceof LogNodeList) {
      activityList=(LogNodeList)s;
      return activityList;
    }
  }
  final SecurityContext securityContext=SecurityContext.getSuperUserInstance();
  Command createNode=Services.command(securityContext,CreateNodeCommand.class);
  Command createRel=Services.command(securityContext,CreateRelationshipCommand.class);
  try {
    activityList=(LogNodeList<Activity>)createNode.execute(user,new NodeAttribute(AbstractNode.Key.type.name(),LogNodeList.class.getSimpleName()),new NodeAttribute(AbstractNode.Key.name.name(),user.getName() + "'s Activity Log"));
    createRel.execute(user,activityList,RelType.HAS_CHILD);
    return activityList;
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
  }
  return null;
}
