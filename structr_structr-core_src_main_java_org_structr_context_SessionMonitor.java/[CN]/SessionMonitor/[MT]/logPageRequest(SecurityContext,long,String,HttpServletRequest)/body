{
  if (!(Services.isAvailable(LogService.class))) {
    return;
  }
  long t0=System.currentTimeMillis();
  Date now=new Date();
  User user=securityContext.getUser();
  PageRequest pageRequest=new PageRequest();
  pageRequest.setProperty(AbstractNode.Key.type.name(),PageRequest.class.getSimpleName());
  pageRequest.setProperty(AbstractNode.Key.name.name(),action + ", Date: " + now);
  StringBuilder text=new StringBuilder();
  text.append("{");
  if (request != null) {
    Set<String> keys=request.getParameterMap().keySet();
    for (    String key : keys) {
      String value=request.getParameter(key);
      if ("onUpdateNotificationContent".equals(value)) {
        return;
      }
      text.append("\"").append(key).append("\": \"").append(value).append("\", ");
    }
    text.append("\"uri\": \"").append(request.getRequestURI()).append("\", ");
    text.append("\"remoteAddress\": \"").append(request.getRemoteAddr()).append("\", ");
    text.append("\"remoteHost\": \"").append(request.getRemoteHost()).append("\"");
  }
  pageRequest.setProperty(Activity.Key.sessionId.name(),sessionId);
  pageRequest.setProperty(Activity.Key.startTimestamp.name(),now);
  pageRequest.setProperty(Activity.Key.endTimestamp.name(),now);
  pageRequest.setUser(user);
  text.append("}");
  pageRequest.setActivityText(text.toString());
  getSession(sessionId).setLastActivity(pageRequest);
  Services.command(securityContext,LogCommand.class).execute(pageRequest);
  long t1=System.currentTimeMillis();
  logger.log(Level.FINE,"Logging of page request took {0} ms",(t1 - t0) / 1000);
}
