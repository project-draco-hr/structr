{
  if (cachedClassNameCollection == null || reload) {
    logger.log(Level.FINE,"Initializing entities from class path");
    if (cachedClassNameCollection != null) {
      cachedClassNameCollection.clear();
    }
 else {
      cachedClassNameCollection=new HashSet<String>();
    }
  }
 else {
    return;
  }
  String pathSeparator=System.getProperty("path.separator");
  StringBuilder classPathBuffer=new StringBuilder();
  if (entityLocations != null) {
    for (    String location : entityLocations) {
      classPathBuffer.append(location);
      classPathBuffer.append(pathSeparator).append(" ");
    }
  }
  String classPath=classPathBuffer.toString();
  String[] classPathElementArray=classPath.split("[" + pathSeparator + ";]+");
  Set<File> searchableFileElements=new LinkedHashSet<File>();
  Set<File> searchablePathElements=new LinkedHashSet<File>();
  collectStringArrayElements(classPathElementArray,searchablePathElements);
  collectPathElements(searchablePathElements,searchableFileElements);
  for (  File file : searchableFileElements) {
    String filePath=file.getAbsolutePath();
    String lowerCaseFilePath=filePath.toLowerCase();
    if (lowerCaseFilePath.endsWith(".jar")) {
      try {
        JarFile jarFile=new JarFile(file);
        for (Enumeration<JarEntry> e=jarFile.entries(); e.hasMoreElements(); ) {
          JarEntry entry=e.nextElement();
          String entryName=entry.getName().toLowerCase();
          if (entryName.endsWith(".class") && !entryName.contains("$")) {
            String fileEntry=entry.getName().replaceAll("[/]+",".");
            cachedClassNameCollection.add(fileEntry);
            logger.log(Level.FINEST,"Adding class to entity collection",fileEntry);
          }
        }
      }
 catch (      IOException ioex) {
        logger.log(Level.WARNING,"Exception reading JAR file",ioex);
      }
    }
 else     if (lowerCaseFilePath.endsWith(".class") && !lowerCaseFilePath.contains("$")) {
      String fileEntry=filePath.replaceAll("[/]+",".").replaceAll("[\\\\]+",".");
      cachedClassNameCollection.add(fileEntry);
      logger.log(Level.FINEST,"Adding class to entity collection",fileEntry);
    }
  }
}
