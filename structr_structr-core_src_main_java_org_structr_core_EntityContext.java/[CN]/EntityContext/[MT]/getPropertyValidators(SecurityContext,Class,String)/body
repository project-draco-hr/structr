{
  Set<PropertyValidator> validators=new LinkedHashSet<PropertyValidator>();
  Map<String,Set<PropertyValidator>> validatorMap=null;
  Class localType=type;
  while (!localType.equals(Object.class)) {
    validatorMap=getPropertyValidatorMapForType(localType);
    Set<PropertyValidator> classValidators=validatorMap.get(propertyKey);
    if (classValidators != null) {
      validators.addAll(validatorMap.get(propertyKey));
    }
    localType=localType.getSuperclass();
  }
  for (  Class interfaceClass : getInterfacesForType(type)) {
    Set<PropertyValidator> interfaceValidators=getPropertyValidatorMapForType(interfaceClass).get(propertyKey);
    if (interfaceValidators != null) {
      validators.addAll(interfaceValidators);
    }
  }
  return validators;
}
