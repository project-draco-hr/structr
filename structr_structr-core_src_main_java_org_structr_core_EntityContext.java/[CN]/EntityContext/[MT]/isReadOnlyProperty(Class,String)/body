{
  boolean isReadOnly=getReadOnlyPropertySetForType(type).contains(key);
  Class localType=type;
  while (!isReadOnly && !localType.equals(Object.class)) {
    isReadOnly=getReadOnlyPropertySetForType(localType).contains(key);
    localType=localType.getSuperclass();
  }
  if (!isReadOnly) {
    for (    Class interfaceClass : type.getInterfaces()) {
      if (getReadOnlyPropertySetForType(interfaceClass).contains(key)) {
        return true;
      }
    }
  }
  return isReadOnly;
}
