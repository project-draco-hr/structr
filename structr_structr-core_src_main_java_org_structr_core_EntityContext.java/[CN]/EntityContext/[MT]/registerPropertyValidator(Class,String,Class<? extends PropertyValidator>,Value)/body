{
  Map<String,Class<? extends PropertyValidator>> validatorMap=getPropertyValidatorMapForType(type);
  validatorMap.put(propertyKey,validatorClass);
  if (validatorClass.equals(GlobalPropertyUniquenessValidator.class)) {
    logger.log(Level.INFO,"registering semaphore for type {0}, key {1}",new Object[]{GLOBAL_UNIQUENESS,propertyKey});
    Map<String,Semaphore> map=getSemaphoreMapForType(GLOBAL_UNIQUENESS);
    if (!map.containsKey(propertyKey)) {
      map.put(propertyKey,new Semaphore(1));
    }
  }
 else   if (validatorClass.equals(TypeAndPropertyUniquenessValidator.class)) {
    logger.log(Level.INFO,"registering semaphore for type {0}, key {1}",new Object[]{type,propertyKey});
    Map<String,Semaphore> map=getSemaphoreMapForType(type.getSimpleName());
    if (!map.containsKey(propertyKey)) {
      map.put(propertyKey,new Semaphore(1));
    }
  }
  if (parameter != null) {
    Map<String,Value> validatorParameterMap=getPropertyValidatonParameterMapForType(type);
    validatorParameterMap.put(propertyKey,parameter);
  }
}
