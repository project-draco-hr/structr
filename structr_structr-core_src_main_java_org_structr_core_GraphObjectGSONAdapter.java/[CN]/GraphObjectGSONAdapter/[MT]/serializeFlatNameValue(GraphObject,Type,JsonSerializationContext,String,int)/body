{
  if (depth > outputNestingDepth) {
    return null;
  }
  JsonObject jsonObject=new JsonObject();
  if (idProperty == null) {
    jsonObject.add("id",new JsonPrimitive(src.getId()));
  }
 else {
    Object idPropertyValue=src.getProperty(idProperty);
    if (idPropertyValue != null) {
      String idString=idPropertyValue.toString();
      jsonObject.add("id",new JsonPrimitive(idString));
    }
  }
  for (  String key : src.getPropertyKeys(localPropertyView)) {
    Object value=src.getProperty(key);
    if (value != null) {
      if (key.equals(idProperty)) {
        key="id";
      }
      if (value instanceof Iterable) {
        jsonObject.add(key,serializeIterable((Iterable)value,typeOfSrc,context,localPropertyView,depth));
      }
 else       if (value instanceof GraphObject) {
        GraphObject graphObject=(GraphObject)value;
        jsonObject.add(key,this.serializeFlatNameValue(graphObject,typeOfSrc,context,localPropertyView,depth + 1));
      }
 else       if (value instanceof Map) {
        jsonObject.add(key,serializeMap((Map)value,typeOfSrc,context,localPropertyView,false,false,depth));
      }
 else {
        jsonObject.add(key,primitive(value));
      }
    }
 else {
      jsonObject.add(key,new JsonNull());
    }
  }
  return jsonObject;
}
