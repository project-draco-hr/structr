{
  if (depth > outputNestingDepth) {
    return null;
  }
  JsonObject jsonObject=new JsonObject();
  if (idProperty == null) {
    jsonObject.add("id",new JsonPrimitive(src.getId()));
  }
 else {
    Object idPropertyValue=src.getProperty(idProperty);
    if (idPropertyValue != null) {
      String idString=idPropertyValue.toString();
      jsonObject.add("id",new JsonPrimitive(idString));
    }
  }
  Iterable<PropertyKey> keys=src.getPropertyKeys(localPropertyView);
  if (keys != null) {
    for (    PropertyKey key : keys) {
      Object value=src.getProperty(key);
      if (value != null) {
        if (key.equals(idProperty)) {
          key=id;
        }
        if (value instanceof Iterable) {
          jsonObject.add(key.name(),serializeIterable((Iterable)value,typeOfSrc,context,localPropertyView,depth));
        }
 else         if (value instanceof GraphObject) {
          GraphObject graphObject=(GraphObject)value;
          jsonObject.add(key.name(),this.serializeFlatNameValue(graphObject,typeOfSrc,context,localPropertyView,depth + 1));
        }
 else         if (value instanceof Map) {
          jsonObject.add(key.name(),serializeMap((Map)value,typeOfSrc,context,localPropertyView,false,depth));
        }
 else {
          try {
            SecurityContext securityContext=SecurityContext.getSuperUserInstance();
            PropertyConverter converter=key.inputConverter(securityContext);
            if (converter != null) {
              jsonObject.add(key.name(),toPrimitive(converter.convertForSetter(value)));
            }
 else {
              jsonObject.add(key.name(),toPrimitive(value));
            }
          }
 catch (          FrameworkException fex) {
            logger.log(Level.WARNING,"Exception while serializing property {0} of entity {1}: {2}",new Object[]{key.name(),src.getType(),fex.getMessage()});
          }
        }
      }
 else {
        jsonObject.add(key.name(),new JsonNull());
      }
    }
  }
  return jsonObject;
}
