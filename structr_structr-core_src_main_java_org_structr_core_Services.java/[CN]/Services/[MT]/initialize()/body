{
  logger.log(Level.INFO,"Initializing service layer");
  if (context == null) {
    logger.log(Level.SEVERE,"Could not initialize service layer: Service context is null");
    return;
  }
  configFilePath=getConfigValue(context,Services.CONFIG_FILE_PATH,"./structr.conf");
  configuredServices=getConfigValue(context,Services.CONFIGURED_SERVICES,"ModuleService NodeService AgentService CloudService CacheService LogService NotificationService");
  appTitle=getConfigValue(context,Services.APPLICATION_TITLE,"structr");
  tmpPath=getConfigValue(context,Services.TMP_PATH,"/tmp");
  basePath=getConfigValue(context,Services.BASE_PATH,".");
  restPath=getConfigValue(context,Services.REST_PATH,"/structr/rest");
  databasePath=getConfigValue(context,Services.DATABASE_PATH,"./db");
  logDatabasePath=getConfigValue(context,Services.LOG_DATABASE_PATH,"./logdb.dat");
  filesPath=getConfigValue(context,Services.FILES_PATH,"./files");
  resources=getConfigValue(context,Services.RESOURCES,"");
  serverIp=getConfigValue(context,Services.SERVER_IP,"127.0.0.1");
  tcpPort=getConfigValue(context,Services.TCP_PORT,"54555");
  udpPort=getConfigValue(context,Services.UDP_PORT,"57555");
  smtpHost=getConfigValue(context,Services.SMTP_HOST,"localhost");
  smtpPort=getConfigValue(context,Services.SMTP_PORT,"25");
  smtpUser=getConfigValue(context,Services.SMTP_USER,"");
  smtpPassword=getConfigValue(context,Services.SMTP_PASSWORD,"");
  superuserUsername=getConfigValue(context,Services.SUPERUSER_USERNAME,"superadmin");
  superuserPassword=getConfigValue(context,Services.SUPERUSER_PASSWORD,"");
  jsonDepth=getConfigValue(context,Services.JSON_OUTPUT_DEPTH,"3");
  logger.log(Level.INFO,"Starting services");
  try {
    Services.command(null,InitializeModuleServiceCommand.class).execute();
  }
 catch (  FrameworkException fex) {
    fex.printStackTrace();
  }
  for (  Class serviceClass : registeredServiceClasses) {
    if (Service.class.isAssignableFrom(serviceClass) && isConfigured(serviceClass)) {
      try {
        createService(serviceClass);
      }
 catch (      Throwable t) {
        t.printStackTrace();
        logger.log(Level.WARNING,"Exception while registering service {0}: {1}",new Object[]{serviceClass.getName(),t.getMessage()});
      }
    }
  }
  logger.log(Level.INFO,"{0} service(s) processed",serviceCache.size());
  registeredServiceClasses.clear();
  EntityContext.init();
  logger.log(Level.INFO,"Initialization complete");
  initializationDone=true;
}
