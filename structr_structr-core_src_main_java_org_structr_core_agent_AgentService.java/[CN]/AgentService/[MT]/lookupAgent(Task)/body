{
  final SecurityContext securityContext=SecurityContext.getSuperUserInstance();
  Class taskClass=task.getClass();
  Agent agent=null;
  Class agentClass=agentClassCache.get(taskClass);
  if (agentClass == null) {
    try {
      Map<String,Class> agentClassesMap=(Map<String,Class>)Services.command(securityContext,GetAgentsCommand.class).execute();
      for (      Entry classEntry : agentClassesMap.entrySet()) {
        Class supportedAgentClass=agentClassesMap.get((String)classEntry.getKey());
        try {
          Agent supportedAgent=(Agent)supportedAgentClass.newInstance();
          Class supportedTaskClass=supportedAgent.getSupportedTaskType();
          if (supportedTaskClass.equals(taskClass)) {
            agentClass=supportedAgentClass;
          }
          agentClassCache.put(supportedTaskClass,supportedAgentClass);
        }
 catch (        IllegalAccessException iaex) {
        }
catch (        InstantiationException itex) {
        }
      }
    }
 catch (    FrameworkException fex) {
      fex.printStackTrace();
    }
  }
  if (agentClass != null) {
    try {
      agent=(Agent)agentClass.newInstance();
    }
 catch (    IllegalAccessException iaex) {
    }
catch (    InstantiationException itex) {
    }
  }
  return (agent);
}
