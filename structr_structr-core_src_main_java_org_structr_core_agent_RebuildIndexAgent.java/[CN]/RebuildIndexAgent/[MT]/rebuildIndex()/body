{
  final SecurityContext securityContext=SecurityContext.getSuperUserInstance();
  Command transactionCommand=Services.command(securityContext,TransactionCommand.class);
  Command graphDbCommand=Services.command(securityContext,GraphDatabaseCommand.class);
  final GraphDatabaseService graphDb=(GraphDatabaseService)graphDbCommand.execute();
  Long noOfNodes=(Long)transactionCommand.execute(new BatchTransaction(){
    @Override public Object execute(    Transaction tx) throws FrameworkException {
      long nodes=0;
      Command indexer=Services.command(securityContext,IndexNodeCommand.class);
      logger.log(Level.INFO,"Get all nodes ...");
      Result allNodes=(Result)Services.command(securityContext,GetAllNodes.class).execute();
      logger.log(Level.INFO,"... done. Start indexing {0} nodes ...",allNodes.size());
      List<? extends GraphObject> list=allNodes.getResults();
      for (      GraphObject obj : list) {
        indexer.execute(obj);
        obj=null;
        nodes++;
        if (nodes % 1000 == 0) {
          logger.log(Level.INFO,"Indexed {0} nodes, committing results to database.",nodes);
          tx.success();
          tx.finish();
          tx=graphDb.beginTx();
          indexer=null;
          indexer=Services.command(securityContext,IndexNodeCommand.class);
          logger.log(Level.FINE,"######## committed ########",nodes);
        }
      }
      logger.log(Level.INFO,"Finished indexing {0} nodes",nodes);
      return nodes;
    }
  }
);
  return noOfNodes;
}
