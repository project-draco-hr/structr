{
  final SecurityContext securityContext=SecurityContext.getSuperUserInstance();
  final GraphDatabaseService graphDb=Services.command(securityContext,GraphDatabaseCommand.class).execute();
  final RelationshipFactory relFactory=new RelationshipFactory(securityContext);
  final Iterable<Relationship> allRelationships=GlobalGraphOperations.at(graphDb).getAllRelationships();
  final IndexRelationshipCommand indexer=Services.command(securityContext,IndexRelationshipCommand.class);
  long relationshipCount=0L;
  logger.log(Level.INFO,"Start indexing of relationships.");
  final Iterator<Relationship> relationshipIterator=allRelationships.iterator();
  while (relationshipIterator.hasNext()) {
    relationshipCount+=Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction<Integer>(){
      @Override public Integer execute() throws FrameworkException {
        int count=0;
        while (relationshipIterator.hasNext()) {
          try {
            Relationship dbRelationship=relationshipIterator.next();
            if (dbRelationship.hasProperty(GraphObject.uuid.name())) {
              indexer.execute(relFactory.createRelationship(securityContext,dbRelationship));
              if (count++ == 100) {
                break;
              }
            }
          }
 catch (          Throwable t) {
          }
        }
        return count;
      }
    }
);
    logger.log(Level.INFO,"Indexed {0} relationships ...",relationshipCount);
  }
  logger.log(Level.INFO,"Done");
  return relationshipCount;
}
