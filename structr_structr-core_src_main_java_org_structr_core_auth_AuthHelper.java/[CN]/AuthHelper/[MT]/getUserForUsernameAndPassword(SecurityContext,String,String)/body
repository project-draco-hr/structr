{
  String errorMsg=null;
  Principal user=null;
  if (Services.getSuperuserUsername().equals(userName) && Services.getSuperuserPassword().equals(password)) {
    logger.log(Level.INFO,"############# Authenticated as superadmin! ############");
    user=new SuperUser();
  }
 else {
    try {
      Command findUser=Services.command(securityContext,FindUserCommand.class);
      user=(Principal)findUser.execute(userName);
      if (user == null) {
        logger.log(Level.INFO,"No user found for name {0}",userName);
        errorMsg=STANDARD_ERROR_MSG;
      }
 else {
        if (user.isBlocked()) {
          logger.log(Level.INFO,"User {0} is blocked",user);
          errorMsg=STANDARD_ERROR_MSG;
        }
        if (password == null) {
          logger.log(Level.INFO,"Password for user {0} is null",user);
          errorMsg="You should enter a password.";
        }
        String encryptedPasswordValue=DigestUtils.sha512Hex(password);
        String pw=user.getEncryptedPassword();
        if (pw == null || !encryptedPasswordValue.equals(pw)) {
          logger.log(Level.INFO,"Wrong password for user {0}",user);
          errorMsg=STANDARD_ERROR_MSG;
        }
      }
    }
 catch (    FrameworkException fex) {
      fex.printStackTrace();
    }
  }
  if (errorMsg != null) {
    throw new AuthenticationException(errorMsg);
  }
  return user;
}
