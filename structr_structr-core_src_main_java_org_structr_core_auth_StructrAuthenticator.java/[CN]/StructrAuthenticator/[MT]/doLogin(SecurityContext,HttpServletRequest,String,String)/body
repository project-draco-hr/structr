{
  String errorMsg=null;
  User user=null;
  if (Services.SUPERUSER_USERNAME.equals(userName) && Services.SUPERUSER_PASSWORD.equals(password)) {
    logger.log(Level.INFO,"############# Logged in as superadmin! ############");
    user=new SuperUser();
  }
 else {
    try {
      Command findUser=Services.command(securityContext,FindUserCommand.class);
      user=(User)findUser.execute(userName);
      if (user == null) {
        logger.log(Level.INFO,"No user found for name {0}",user);
        errorMsg=STANDARD_ERROR_MSG;
      }
 else {
        if (user.isBlocked()) {
          logger.log(Level.INFO,"User {0} is blocked",user);
          errorMsg=STANDARD_ERROR_MSG;
        }
        if (password == null) {
          logger.log(Level.INFO,"Password for user {0} is null",user);
          errorMsg="You should enter a password.";
        }
        String encryptedPasswordValue=DigestUtils.sha512Hex(password);
        if (!encryptedPasswordValue.equals(user.getEncryptedPassword())) {
          logger.log(Level.INFO,"Wrong password for user {0}",user);
          errorMsg=STANDARD_ERROR_MSG;
        }
      }
    }
 catch (    FrameworkException fex) {
      fex.printStackTrace();
    }
  }
  if (errorMsg != null) {
    throw new AuthenticationException(errorMsg);
  }
  try {
    HttpSession session=request.getSession();
    session.setAttribute(USER_NODE_KEY,user);
    session.setAttribute(USERNAME_KEY,userName);
    long sessionId=SessionMonitor.registerUserSession(securityContext,session);
    SessionMonitor.logActivity(securityContext,sessionId,"Login");
    session.setAttribute(SessionMonitor.SESSION_ID,sessionId);
  }
 catch (  Exception e) {
    logger.log(Level.INFO,"Could not register session");
  }
  return user;
}
