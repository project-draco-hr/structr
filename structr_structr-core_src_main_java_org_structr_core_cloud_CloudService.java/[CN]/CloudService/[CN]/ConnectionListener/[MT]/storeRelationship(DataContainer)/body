{
  RelationshipDataContainer receivedRelationshipData=(RelationshipDataContainer)receivedData;
  StructrRelationship newRelationship=null;
  long sourceStartNodeId=receivedRelationshipData.getSourceStartNodeId();
  long sourceEndNodeId=receivedRelationshipData.getSourceEndNodeId();
  Long targetStartNodeIdValue=idMap.get(sourceStartNodeId);
  Long targetEndNodeIdValue=idMap.get(sourceEndNodeId);
  if (targetStartNodeIdValue != null && targetEndNodeIdValue != null) {
    long targetStartNodeId=targetStartNodeIdValue.longValue();
    long targetEndNodeId=targetEndNodeIdValue.longValue();
    AbstractNode targetStartNode=(AbstractNode)findNode.execute(new SuperUser(),targetStartNodeId);
    AbstractNode targetEndNode=(AbstractNode)findNode.execute(new SuperUser(),targetEndNodeId);
    String name=receivedRelationshipData.getName();
    if (targetStartNode != null && targetEndNode != null && StringUtils.isNotEmpty(name)) {
      newRelationship=(StructrRelationship)createRel.execute(targetStartNode,targetEndNode,name);
      for (      Entry<String,Object> entry : receivedRelationshipData.getProperties().entrySet()) {
        newRelationship.setProperty(entry.getKey(),entry.getValue());
      }
    }
  }
 else {
    logger.log(Level.WARNING,"Could not store relationship {0} -> {1}",new Object[]{sourceStartNodeId,sourceEndNodeId});
  }
  return newRelationship;
}
