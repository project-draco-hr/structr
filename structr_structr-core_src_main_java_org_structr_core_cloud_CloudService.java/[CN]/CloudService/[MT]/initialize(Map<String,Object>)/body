{
  int tcpPort=Integer.parseInt(Services.getTcpPort());
  int udpPort=Integer.parseInt(Services.getUdpPort());
  server=new Server();
  server.start();
  Kryo kryo=server.getKryo();
  kryo.register(AbstractNode.class);
  logger.log(Level.INFO,"KryoNet server started");
  try {
    server.bind(tcpPort,udpPort);
    server.addListener(new Listener(){
      @Override public void received(      Connection connection,      Object object){
        logger.log(Level.INFO,"Received object {0}",object);
        if (object instanceof AbstractNode) {
          AbstractNode receivedNode=(AbstractNode)object;
          connection.sendTCP("Node " + receivedNode.getName() + " received");
        }
      }
    }
);
    logger.log(Level.INFO,"KryoNet server listening on TCP port {0} and UDP port {1}",new Object[]{tcpPort,udpPort});
  }
 catch (  IOException ex) {
    logger.log(Level.SEVERE,"KryoNet server could not bind to TCP port " + tcpPort + " or UDP port "+ udpPort,ex);
  }
 finally {
    server.stop();
    server.close();
    server=null;
  }
}
