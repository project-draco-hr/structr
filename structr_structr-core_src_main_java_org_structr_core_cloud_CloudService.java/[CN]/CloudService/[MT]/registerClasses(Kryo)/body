{
  kryo.register(AuthenticationContainer.class);
  kryo.register(String.class,new EncryptingCompressor(new StringSerializer()));
  kryo.register(long.class,new EncryptingCompressor(new LongSerializer()));
  kryo.register(Long.class,new EncryptingCompressor(new LongSerializer()));
  kryo.register(int.class,new EncryptingCompressor(new IntSerializer()));
  kryo.register(Integer.class,new EncryptingCompressor(new IntSerializer()));
  kryo.register(short.class,new EncryptingCompressor(new ShortSerializer()));
  kryo.register(Short.class,new EncryptingCompressor(new ShortSerializer()));
  kryo.register(char.class,new EncryptingCompressor(new CharSerializer()));
  kryo.register(Character.class,new EncryptingCompressor(new CharSerializer()));
  kryo.register(byte.class,new EncryptingCompressor(new ByteSerializer()));
  kryo.register(Byte.class,new EncryptingCompressor(new ByteSerializer()));
  kryo.register(float.class,new EncryptingCompressor(new FloatSerializer()));
  kryo.register(Float.class,new EncryptingCompressor(new FloatSerializer()));
  kryo.register(double.class,new EncryptingCompressor(new DoubleSerializer()));
  kryo.register(Double.class,new EncryptingCompressor(new DoubleSerializer()));
  kryo.register(boolean.class,new EncryptingCompressor(new BooleanSerializer()));
  kryo.register(Boolean.class,new EncryptingCompressor(new BooleanSerializer()));
  kryo.register(Date.class,new EncryptingCompressor(new DateSerializer()));
  kryo.register(HashMap.class,new EncryptingCompressor(new MapSerializer(kryo)));
  kryo.register(LinkedList.class,new EncryptingCompressor(new CollectionSerializer(kryo)));
  kryo.register(NodeDataContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,NodeDataContainer.class)));
  kryo.register(FileNodeChunk.class,new EncryptingCompressor(new FieldSerializer(kryo,FileNodeChunk.class)));
  kryo.register(FileNodeEndChunk.class,new EncryptingCompressor(new FieldSerializer(kryo,FileNodeEndChunk.class)));
  kryo.register(FileNodeDataContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,FileNodeDataContainer.class)));
  kryo.register(RelationshipDataContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,RelationshipDataContainer.class)));
  kryo.register(PullNodeRequestContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,PullNodeRequestContainer.class)));
  kryo.register(PushNodeRequestContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,PushNodeRequestContainer.class)));
  kryo.register(String[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(char[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(byte[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(boolean[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(int[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(long[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(short[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(float[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
  kryo.register(double[].class,new EncryptingCompressor(new ArraySerializer(kryo)));
}
