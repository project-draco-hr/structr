{
  kryo.register(HashMap.class);
  kryo.register(LinkedList.class);
  kryo.register(NodeDataContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,NodeDataContainer.class),keyProvider));
  kryo.register(FileNodeChunk.class,new EncryptingCompressor(new FieldSerializer(kryo,FileNodeChunk.class),keyProvider));
  kryo.register(FileNodeEndChunk.class,new EncryptingCompressor(new FieldSerializer(kryo,FileNodeEndChunk.class),keyProvider));
  kryo.register(FileNodeDataContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,FileNodeDataContainer.class),keyProvider));
  kryo.register(RelationshipDataContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,RelationshipDataContainer.class),keyProvider));
  kryo.register(PullNodeRequestContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,PullNodeRequestContainer.class),keyProvider));
  kryo.register(PushNodeRequestContainer.class,new EncryptingCompressor(new FieldSerializer(kryo,PushNodeRequestContainer.class),keyProvider));
  kryo.register(String[].class,new EncryptingCompressor(new FieldSerializer(kryo,String[].class),keyProvider));
  kryo.register(char[].class,new EncryptingCompressor(new FieldSerializer(kryo,char[].class),keyProvider));
  kryo.register(byte[].class,new EncryptingCompressor(new FieldSerializer(kryo,byte[].class),keyProvider));
  kryo.register(boolean[].class,new EncryptingCompressor(new FieldSerializer(kryo,boolean[].class),keyProvider));
  kryo.register(int[].class,new EncryptingCompressor(new FieldSerializer(kryo,int[].class),keyProvider));
  kryo.register(long[].class,new EncryptingCompressor(new FieldSerializer(kryo,long[].class),keyProvider));
  kryo.register(short[].class,new EncryptingCompressor(new FieldSerializer(kryo,short[].class),keyProvider));
  kryo.register(float[].class,new EncryptingCompressor(new FieldSerializer(kryo,float[].class),keyProvider));
  kryo.register(double[].class,new EncryptingCompressor(new FieldSerializer(kryo,double[].class),keyProvider));
}
