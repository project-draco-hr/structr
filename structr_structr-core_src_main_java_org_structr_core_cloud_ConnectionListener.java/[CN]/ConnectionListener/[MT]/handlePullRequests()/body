{
  Runnable r=new Runnable(){
    @Override public void run(){
      try {
        Thread.sleep(2000);
synchronized (pullRequests) {
          for (Iterator<PullNodeRequestContainer> it=pullRequests.iterator(); it.hasNext(); ) {
            PullNodeRequestContainer request=it.next();
            AbstractNode sourceNode=(AbstractNode)findNode.execute(new SuperUser(),request.getSourceNodeId());
            boolean recursive=request.isRecursive();
            Command pushNodes=Services.command(PushNodes.class);
            User remoteUser=request.getRemoteUser();
            long remoteTargetNodeId=request.getTargetNodeId();
            String remoteHostValue=request.getRemoteHost();
            Integer remoteTcpPort=request.getRemoteTcpPort();
            Integer remoteUdpPort=request.getRemoteUdpPort();
            pushNodes.execute(remoteUser,sourceNode,remoteTargetNodeId,remoteHostValue,remoteTcpPort,remoteUdpPort,recursive);
            it.remove();
          }
        }
      }
 catch (      Throwable t) {
        logger.log(Level.WARNING,"Error while handling pull requests: {0}",t);
      }
    }
  }
;
  new Thread(r,"PullRequestThread").start();
}
