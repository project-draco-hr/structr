{
  if (depth >= maxDepth) {
    return;
  }
  Set<AbstractNode> nodes=getRelatedNodeMap().get(maxDepth);
  Set<StructrRelationship> rels=getRelatedRelMap().get(maxDepth);
  if (nodes == null) {
    nodes=new LinkedHashSet<AbstractNode>();
    getRelatedNodeMap().put(maxDepth,nodes);
  }
  if (rels == null) {
    rels=new LinkedHashSet<StructrRelationship>();
    getRelatedRelMap().put(maxDepth,rels);
  }
  if (!visitedNodes.contains(currentNode)) {
    nodes.add(currentNode);
    for (    StructrRelationship rel : currentNode.getIncomingRelationships()) {
      AbstractNode startNode=rel.getStartNode();
      if (startNode != null) {
        nodes.add(startNode);
        rels.add(rel);
        collectRelatedNodes(visitedNodes,startNode,depth + 1,maxDepth);
      }
    }
    for (    StructrRelationship rel : currentNode.getOutgoingRelationships()) {
      AbstractNode endNode=rel.getEndNode();
      if (endNode != null) {
        nodes.add(endNode);
        rels.add(rel);
        collectRelatedNodes(visitedNodes,endNode,depth + 1,maxDepth);
      }
    }
    visitedNodes.add(currentNode);
  }
}
