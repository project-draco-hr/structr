{
  if (depth >= maxDepth) {
    return;
  }
  if (nodes.size() < maxNum) {
    nodes.add(currentNode);
    List<AbstractRelationship> inRels=new LinkedList<AbstractRelationship>();
    if ((relTypes != null) && (relTypes.length > 0)) {
      for (      RelationshipType type : relTypes) {
        inRels.addAll(currentNode.getRelationships(type,Direction.INCOMING));
      }
    }
 else {
      inRels=currentNode.getIncomingRelationships();
    }
    for (    AbstractRelationship rel : inRels) {
      AbstractNode startNode=rel.getStartNode();
      if ((startNode != null) && (nodes.size() < maxNum)) {
        nodes.add(startNode);
        rels.add(rel);
        collectRelatedNodes(nodes,rels,visitedNodes,startNode,depth + 1,maxDepth,maxNum,relTypes);
      }
    }
    List<AbstractRelationship> outRels=new LinkedList<AbstractRelationship>();
    if ((relTypes != null) && (relTypes.length > 0)) {
      for (      RelationshipType type : relTypes) {
        outRels.addAll(currentNode.getRelationships(type,Direction.OUTGOING));
      }
    }
 else {
      outRels=currentNode.getOutgoingRelationships();
    }
    for (    AbstractRelationship rel : outRels) {
      AbstractNode endNode=rel.getEndNode();
      if ((endNode != null) && (nodes.size() < maxNum)) {
        nodes.add(endNode);
        rels.add(rel);
        collectRelatedNodes(nodes,rels,visitedNodes,endNode,depth + 1,maxDepth,maxNum,relTypes);
      }
    }
  }
}
