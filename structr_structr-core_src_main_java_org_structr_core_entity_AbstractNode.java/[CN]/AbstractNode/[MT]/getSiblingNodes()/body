{
  List<AbstractNode> nodes=new LinkedList<AbstractNode>();
  AbstractNode parentNode=getParentNode();
  if (parentNode != null) {
    try {
      Command nodeFactory=Services.command(securityContext,NodeFactoryCommand.class);
      Command relsCommand=Services.command(securityContext,NodeRelationshipsCommand.class);
      List<AbstractRelationship> rels=(List<AbstractRelationship>)relsCommand.execute(parentNode,RelType.HAS_CHILD,Direction.OUTGOING);
      for (      AbstractRelationship r : rels) {
        AbstractNode s=(AbstractNode)nodeFactory.execute(r.getEndNode());
        if (securityContext.isAllowed(s,Permission.Read)) {
          nodes.add(s);
        }
      }
    }
 catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Unable to get sibling nodes",fex);
    }
  }
  return nodes;
}
