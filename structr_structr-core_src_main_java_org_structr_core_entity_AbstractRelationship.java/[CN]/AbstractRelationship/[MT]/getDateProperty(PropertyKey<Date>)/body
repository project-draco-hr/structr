{
  Object propertyValue=getProperty(key);
  if (propertyValue != null) {
    if (propertyValue instanceof Date) {
      return (Date)propertyValue;
    }
 else     if (propertyValue instanceof Long) {
      return new Date((Long)propertyValue);
    }
 else     if (propertyValue instanceof String) {
      try {
        return new Date(Long.parseLong((String)propertyValue));
      }
 catch (      NumberFormatException nfe) {
        try {
          Date date=DateUtils.parseDate(((String)propertyValue),new String[]{"yyyy-MM-dd'T'HH:mm:ssZ","yyyy-MM-dd'T'HH:mm:ss","yyyymmdd","yyyymm","yyyy"});
          return date;
        }
 catch (        ParseException ex2) {
          logger.log(Level.WARNING,"Could not parse " + propertyValue + " to date",ex2);
        }
        logger.log(Level.WARNING,"Can''t parse String {0} to a Date.",propertyValue);
        return null;
      }
    }
 else {
      logger.log(Level.WARNING,"Date property is not null, but type is neither Long nor String, returning null");
      return null;
    }
  }
  return null;
}
