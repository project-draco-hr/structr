{
  Command transaction=Services.command(securityContext,TransactionCommand.class);
  try {
    transaction.execute(new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        Command findNode=Services.command(securityContext,FindNodeCommand.class);
        Command deleteRel=Services.command(securityContext,DeleteRelationshipCommand.class);
        Command createRel=Services.command(securityContext,CreateRelationshipCommand.class);
        Command nodeFactory=Services.command(securityContext,NodeFactoryCommand.class);
        AbstractNode newStartNode=getNodeByUuid(startNodeId);
        AbstractNode endNode=(AbstractNode)nodeFactory.execute(getEndNode());
        if (newStartNode != null) {
          RelationshipType type=dbRelationship.getType();
          properties=getProperties();
          deleteRel.execute(dbRelationship);
          AbstractRelationship newRel=(AbstractRelationship)createRel.execute(newStartNode,endNode,type);
          newRel.setProperties(properties);
          dbRelationship=newRel.getRelationship();
        }
        return (null);
      }
    }
);
  }
 catch (  FrameworkException fex) {
    logger.log(Level.WARNING,"Unable to set start node id",fex);
  }
}
