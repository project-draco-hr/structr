{
  final Command cmd=Services.command(securityContext,CreateRelationshipCommand.class);
  final AbstractNode targetNode;
  if (value instanceof AbstractNode) {
    targetNode=(AbstractNode)value;
  }
 else {
    targetNode=(AbstractNode)Services.command(securityContext,FindNodeCommand.class).execute(value);
  }
  StructrTransaction transaction=new StructrTransaction(){
    @Override public Object execute() throws Throwable {
      if (cardinality.equals(Cardinality.OneToOne)) {
        List<StructrRelationship> rels=sourceNode.getRelationships(relType,direction);
        for (        StructrRelationship rel : rels) {
          rel.delete();
        }
      }
      if (direction.equals(Direction.OUTGOING)) {
        cmd.execute(sourceNode,targetNode,relType);
      }
 else {
        cmd.execute(targetNode,sourceNode,relType);
      }
      return null;
    }
  }
;
  Services.command(securityContext,TransactionCommand.class).execute(transaction);
  if (transaction.getCause() != null) {
    throw transaction.getCause();
  }
}
