{
  String[] definitionParts=element.split("[=]+");
  if (definitionParts.length == 2) {
    String key=definitionParts[0].trim();
    String val=definitionParts[1].trim();
    if ((key.length() > 0) && (val.length() > 0)) {
      try {
        Definition def=Definition.valueOf(key);
switch (def) {
case fieldType:
          inputField.setFieldType(val);
        break;
case inputType:
      inputField.setInputType(val);
    break;
case name:
  inputField.setName(val);
break;
case label:
inputField.setLabel(val);
break;
case size:
inputField.setSize(val);
break;
case maxLength:
inputField.setMaxLength(val);
break;
case rows:
inputField.setRows(val);
break;
case columns:
inputField.setColumns(val);
break;
case required:
inputField.setRequired(val);
break;
}
}
 catch (Throwable t) {
logger.log(Level.WARNING,"Unsupported custom node type property {0}",key);
}
}
}
}
