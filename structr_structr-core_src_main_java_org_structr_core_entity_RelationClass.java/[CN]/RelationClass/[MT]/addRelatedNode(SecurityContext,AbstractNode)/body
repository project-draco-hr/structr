{
  return (AbstractNode)Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
    @Override public Object execute() throws FrameworkException {
      AbstractNode relatedNode=(AbstractNode)Services.command(securityContext,CreateNodeCommand.class).execute(new NodeAttribute(AbstractNode.Key.type.name(),getDestType().getSimpleName()));
      Command createRel=Services.command(securityContext,CreateRelationshipCommand.class);
      Map<String,Object> props=new LinkedHashMap<String,Object>();
      if (cascadeDelete > 0) {
        props.put(AbstractRelationship.HiddenKey.cascadeDelete.name(),new Integer(cascadeDelete));
      }
      AbstractRelationship newRel=(AbstractRelationship)createRel.execute(node,relatedNode,getRelType(),props,false);
      return relatedNode;
    }
  }
);
}
