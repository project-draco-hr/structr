{
  if (isDirty) {
    properties.put(key,value);
  }
 else {
    Object oldValue=getProperty(key);
    if ((value == null && oldValue == null) || (value != null && oldValue != null && value.equals(oldValue))) {
      return;
    }
    Command transactionCommand=Services.command(TransactionCommand.class);
    transactionCommand.execute(new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        if (value == null) {
          dbNode.removeProperty(key);
        }
 else {
          if (!key.equals(StructrNode.LAST_MODIFIED_DATE_KEY)) {
            if (value instanceof Date) {
              dbNode.setProperty(key,((Date)value).getTime());
            }
 else {
              dbNode.setProperty(key,value);
              dbNode.setProperty(StructrNode.LAST_MODIFIED_DATE_KEY,(new Date()).getTime());
            }
          }
 else {
            logger.log(Level.FINE,"Tried to set lastModifiedDate explicitely (action was denied)");
          }
        }
        if (updateIndex) {
          Services.command(IndexNodeCommand.class).execute(getId(),key,value);
        }
        return null;
      }
    }
);
  }
}
