{
  if (globalLogNodeList == null) {
    GraphDatabaseService graphDb=(GraphDatabaseService)Services.command(securityContext,GraphDatabaseCommand.class).execute();
    if (graphDb == null) {
      logger.log(Level.SEVERE,"Graph database not running.");
      return null;
    }
    Command factory=Services.command(securityContext,NodeFactoryCommand.class);
    final AbstractNode rootNode=(AbstractNode)factory.execute(graphDb.getReferenceNode());
    if (rootNode != null) {
      for (      StructrRelationship rel : rootNode.getOutgoingChildRelationships()) {
        if (rel.getEndNode() instanceof LogNodeList) {
          globalLogNodeList=(LogNodeList)rel.getEndNode();
          return globalLogNodeList;
        }
      }
    }
    if (!this.run) {
      logger.log(Level.FINEST,"LogService not running.");
      return null;
    }
    globalLogNodeList=(LogNodeList)Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        LogNodeList newGlobalLogNodeList=null;
        Command createNode=Services.command(securityContext,CreateNodeCommand.class);
        Command createRel=Services.command(securityContext,CreateRelationshipCommand.class);
        newGlobalLogNodeList=(LogNodeList<Activity>)createNode.execute(new NodeAttribute(AbstractNode.Key.type.name(),LogNodeList.class.getSimpleName()),new NodeAttribute(AbstractNode.Key.name.name(),"Global Activity Log"));
        createRel.execute(rootNode,newGlobalLogNodeList,RelType.HAS_CHILD);
        return newGlobalLogNodeList;
      }
    }
);
  }
  return globalLogNodeList;
}
