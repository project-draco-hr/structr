{
  LogNodeList ret=loggerCache.get(user);
  if (ret == null) {
    for (    StructrNode s : user.getDirectChildNodes(user)) {
      if (s instanceof LogNodeList) {
        ret=(LogNodeList)s;
        loggerCache.put(user,ret);
        return ret;
      }
    }
    ret=(LogNodeList)Services.createCommand(TransactionCommand.class).execute(new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        LogNodeList newLogNodeList=null;
        Command createNode=Services.createCommand(CreateNodeCommand.class);
        Command createRel=Services.createCommand(CreateRelationshipCommand.class);
        StructrNode s=(StructrNode)createNode.execute(user,new NodeAttribute(StructrNode.TYPE_KEY,LogNodeList.class.getSimpleName()),new NodeAttribute(StructrNode.NAME_KEY,user.getName() + "'s Activity Log"));
        newLogNodeList=new LogNodeList<Activity>();
        newLogNodeList.init(s);
        createRel.execute(user,newLogNodeList,RelType.HAS_CHILD);
        return (newLogNodeList);
      }
    }
);
    loggerCache.put(user,ret);
  }
  return (ret);
}
