{
  TxPageFile logDb=(TxPageFile)arguments.get("logDb");
  if (logDb != null) {
    if (parameters.length == 2) {
      String key=(String)parameters[0];
      if (key != null) {
synchronized (logDb) {
          Transaction tx=logDb.tx();
          MultiIndexFactory multiIndexFactory=new MultiIndexFactory(tx);
          IndexFactory<String,Object> indexFactory=new BTreeIndexFactory<String,Object>();
          SortedIndex<String,Object> index=null;
          try {
            index=(SortedIndex<String,Object>)multiIndexFactory.openOrCreate(key,indexFactory);
          }
 catch (          org.fusesource.hawtdb.api.IndexException e) {
            logger.log(Level.WARNING,"Could not open or create log db page for key {0}",key);
            index=(SortedIndex<String,Object>)multiIndexFactory.create(key,indexFactory);
          }
          String[] obj=(String[])parameters[1];
          String uuid=UUID.randomUUID().toString().replaceAll("[\\-]+","");
          index.put(uuid,obj);
          logger.log(Level.FINE,"Logged for key {0}: {1}",new Object[]{key,StringUtils.join((String[])obj,",")});
          tx.commit();
          logDb.flush();
        }
      }
    }
 else {
      throw new IllegalArgumentException();
    }
  }
  return null;
}
