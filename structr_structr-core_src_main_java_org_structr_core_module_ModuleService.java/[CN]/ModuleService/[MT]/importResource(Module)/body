{
  Set<String> classes=module.getClasses();
  for (  final String name : classes) {
    String className=StringUtils.removeStart(name,".");
    logger.log(Level.FINE,"Instantiating class {0} ",className);
    try {
      Class clazz=Class.forName(className);
      logger.log(Level.FINE,"Class {0} instantiated: {1}",new Object[]{className,clazz});
      if (!Modifier.isAbstract(clazz.getModifiers())) {
        if (AbstractNode.class.isAssignableFrom(clazz)) {
          EntityContext.init(clazz);
          try {
            EntityContext.scanEntity(clazz.newInstance());
          }
 catch (          Throwable t) {
          }
          String simpleName=clazz.getSimpleName();
          String fullName=clazz.getName();
          nodeEntityClassCache.put(simpleName,clazz);
          nodeEntityPackages.add(fullName.substring(0,fullName.lastIndexOf(".")));
          for (          Class interfaceClass : clazz.getInterfaces()) {
            String interfaceName=interfaceClass.getSimpleName();
            Set<Class> classesForInterface=interfaceCache.get(interfaceName);
            if (classesForInterface == null) {
              classesForInterface=new LinkedHashSet<Class>();
              interfaceCache.put(interfaceName,classesForInterface);
            }
            classesForInterface.add(clazz);
          }
        }
        if (AbstractRelationship.class.isAssignableFrom(clazz)) {
          EntityContext.init(clazz);
          try {
            EntityContext.scanEntity(clazz.newInstance());
          }
 catch (          Throwable t) {
          }
          String simpleName=clazz.getSimpleName();
          String fullName=clazz.getName();
          relationshipClassCache.put(simpleName,clazz);
          relationshipPackages.add(fullName.substring(0,fullName.lastIndexOf(".")));
          for (          Class interfaceClass : clazz.getInterfaces()) {
            String interfaceName=interfaceClass.getSimpleName();
            Set<Class> classesForInterface=interfaceCache.get(interfaceName);
            if (classesForInterface == null) {
              classesForInterface=new LinkedHashSet<Class>();
              interfaceCache.put(interfaceName,classesForInterface);
            }
            classesForInterface.add(clazz);
          }
        }
        if (Service.class.isAssignableFrom(clazz)) {
          Services.registerServiceClass(clazz);
        }
        if (Agent.class.isAssignableFrom(clazz)) {
          String simpleName=clazz.getSimpleName();
          String fullName=clazz.getName();
          agentClassCache.put(simpleName,clazz);
          agentPackages.add(fullName.substring(0,fullName.lastIndexOf(".")));
        }
      }
    }
 catch (    Throwable t) {
    }
  }
}
