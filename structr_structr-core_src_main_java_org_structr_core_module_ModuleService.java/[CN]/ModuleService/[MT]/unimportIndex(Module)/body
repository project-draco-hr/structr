{
  Set<String> resources=module.getResources();
  for (  String resource : resources) {
    String destinationPath=createResourceFileName(servletContext,resource);
    undeployFile(resource,destinationPath);
  }
  Set<String> properties=module.getProperties();
  for (  String propertyName : properties) {
    String destinationPath=createResourceFileName(servletContext,propertyName);
    undeployFile(propertyName,destinationPath);
  }
  Set<String> classes=module.getClasses();
  for (  String className : classes) {
    try {
      Class clazz=Class.forName(className);
      String simpleName=clazz.getSimpleName();
      String fullName=clazz.getName();
      if (AbstractNode.class.isAssignableFrom(clazz)) {
        nodeEntityClassCache.remove(simpleName);
        nodeEntityPackages.remove(fullName.substring(0,fullName.lastIndexOf(".")));
      }
 else       if (AbstractRelationship.class.isAssignableFrom(clazz)) {
        relationshipClassCache.remove(simpleName);
        relationshipPackages.remove(fullName.substring(0,fullName.lastIndexOf(".")));
      }
 else       if (Agent.class.isAssignableFrom(clazz)) {
        agentClassCache.remove(simpleName);
        agentPackages.remove(fullName.substring(0,fullName.lastIndexOf(".")));
      }
 else       if ((structrPagePredicate != null) && structrPagePredicate.evaluate(clazz)) {
        pagePackages.remove(fullName.substring(0,fullName.lastIndexOf(".")));
      }
    }
 catch (    Throwable t) {
      logger.log(Level.WARNING,"error instantiating class {0}: {1}",new Object[]{className,t});
    }
    Set<String> libraries=module.getLibraries();
    for (    String library : libraries) {
      String destinationPath=createResourceFileName(servletContext,"WEB-INF/lib",library);
      undeployFile(library,destinationPath);
    }
  }
}
