{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  StructrNodeFactory nodeFactory=(StructrNodeFactory)arguments.get("nodeFactory");
  AbstractNode node=null;
  User user=null;
  boolean updateIndex=true;
  if (graphDb != null) {
    Date now=new Date();
    Command createRel=Services.command(CreateRelationshipCommand.class);
    List<NodeAttribute> attrs=new LinkedList<NodeAttribute>();
    for (    Object o : parameters) {
      if (o instanceof List) {
        attrs.addAll((List)o);
      }
 else       if (o instanceof NodeAttribute) {
        NodeAttribute attr=(NodeAttribute)o;
        attrs.add(attr);
      }
 else       if (o instanceof User) {
        user=(User)o;
      }
 else       if (o instanceof Boolean) {
        updateIndex=(Boolean)o;
      }
    }
    String nodeType=null;
    for (    NodeAttribute attr : attrs) {
      if (AbstractNode.Key.type.name().equals(attr.getKey())) {
        nodeType=(String)attr.getValue();
      }
    }
    node=nodeFactory.createNode(securityContext,graphDb.createNode(),nodeType);
    logger.log(Level.FINE,"Node {0} created",node.getId());
    for (    NodeAttribute attr : attrs) {
      node.setProperty(attr.getKey(),attr.getValue(),false);
      logger.log(Level.FINEST,"Set node attribute {0} to {1}",new Object[]{attr.getKey(),attr.getValue()});
    }
    attrs.clear();
    if ((user != null) && !(user instanceof SuperUser)) {
      createRel.execute(user,node,RelType.OWNS);
      logger.log(Level.FINEST,"Relationship to owner {0} added",user.getName());
      Principal principal;
      Group group=user.getGroupNode();
      if (group != null) {
        principal=group;
      }
 else {
        principal=user;
      }
      StructrRelationship securityRel=(StructrRelationship)createRel.execute(principal,node,RelType.SECURITY);
      securityRel.setAllowed(Arrays.asList(StructrRelationship.ALL_PERMISSIONS));
      logger.log(Level.FINEST,"All permissions given to {0}",principal.getName());
      node.setProperty(AbstractNode.Key.createdBy.name(),user.getRealName() + " (" + user.getName()+ ")",false);
    }
    node.setProperty(AbstractNode.Key.createdDate.name(),now,false);
    node.setProperty(AbstractNode.Key.lastModifiedDate.name(),now,false);
    if (updateIndex) {
      Services.command(IndexNodeCommand.class).execute(node);
      logger.log(Level.FINE,"Node {0} indexed.",node.getId());
    }
  }
  if (node != null) {
    node.onNodeCreation();
  }
  return node;
}
