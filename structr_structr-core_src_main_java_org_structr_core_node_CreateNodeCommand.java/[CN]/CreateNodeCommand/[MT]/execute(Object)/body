{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  StructrNodeFactory nodeFactory=(StructrNodeFactory)arguments.get("nodeFactory");
  StructrNode node=null;
  User user=null;
  boolean updateIndex=true;
  if (graphDb != null) {
    Date now=new Date();
    Command createRel=Services.createCommand(CreateRelationshipCommand.class);
    List<NodeAttribute> attrs=new LinkedList<NodeAttribute>();
    for (    Object o : parameters) {
      if (o instanceof List) {
        attrs=(List<NodeAttribute>)o;
      }
 else       if (o instanceof NodeAttribute) {
        NodeAttribute attr=(NodeAttribute)o;
        attrs.add(attr);
      }
 else       if (o instanceof User) {
        user=(User)o;
      }
 else       if (o instanceof Boolean) {
        updateIndex=(Boolean)o;
      }
    }
    String nodeType=null;
    for (    NodeAttribute attr : attrs) {
      if (StructrNode.TYPE_KEY.equals(attr.getKey())) {
        nodeType=(String)attr.getValue();
      }
    }
    node=nodeFactory.createNode(graphDb.createNode(),nodeType);
    logger.log(Level.FINE,"Node {0} created",node.getId());
    for (    NodeAttribute attr : attrs) {
      node.setProperty(attr.getKey(),attr.getValue());
      logger.log(Level.FINEST,"Set node attribute {0} to {1}",new Object[]{attr.getKey(),attr.getValue()});
    }
    attrs.clear();
    if (user != null && !(user instanceof SuperUser)) {
      createRel.execute(user,node,RelType.OWNS);
      logger.log(Level.FINEST,"Relationship to owner {0} added",user.getName());
      StructrRelationship securityRel=(StructrRelationship)createRel.execute(user,node,RelType.SECURITY);
      securityRel.setAllowed(Arrays.asList(StructrRelationship.ALL_PERMISSIONS));
      logger.log(Level.FINEST,"All permissions given to user {0}",user.getName());
      node.setProperty(StructrNode.CREATED_BY_KEY,user.getRealName() + " (" + user.getName()+ ")");
    }
    node.setProperty(StructrNode.CREATED_DATE_KEY,now);
    node.setProperty(StructrNode.LAST_MODIFIED_DATE_KEY,now);
    if (updateIndex) {
      Services.createCommand(IndexNodeCommand.class).execute(node.getId());
      logger.log(Level.FINE,"Node {0} indexed.",node.getId());
    }
  }
  return node;
}
