{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  if (graphDb != null && parameters.length == 3) {
    Object arg0=parameters[0];
    Object arg1=parameters[1];
    Object arg2=parameters[2];
    RelationshipType relType=null;
    if (arg2 instanceof String) {
      relType=DynamicRelationshipType.withName((String)arg2);
    }
 else     if (arg2 instanceof RelationshipType) {
      relType=(RelationshipType)arg2;
    }
 else {
      throw new UnsupportedArgumentError("Wrong argument type(s).");
    }
    if (arg0 instanceof AbstractNode && arg1 instanceof AbstractNode) {
      AbstractNode startNode=(AbstractNode)arg0;
      AbstractNode endNode=(AbstractNode)arg1;
      Node node1=graphDb.getNodeById(startNode.getId());
      Node node2=graphDb.getNodeById(endNode.getId());
      return new StructrRelationship(node1.createRelationshipTo(node2,relType));
    }
 else {
      throw new UnsupportedArgumentError("Wrong argument type(s).");
    }
  }
 else   if (graphDb != null && parameters.length == 4) {
    Object arg0=parameters[0];
    Object arg1=parameters[1];
    Object arg2=parameters[2];
    Object arg3=parameters[3];
    RelationshipType relType=null;
    if (arg2 instanceof String) {
      relType=DynamicRelationshipType.withName((String)arg2);
    }
 else     if (arg2 instanceof RelationshipType) {
      relType=(RelationshipType)arg2;
    }
 else {
      throw new UnsupportedArgumentError("Wrong argument type(s).");
    }
    boolean checkDuplicates=false;
    if (arg3 instanceof Boolean) {
      checkDuplicates=((Boolean)arg3) == true;
    }
    if (arg0 instanceof AbstractNode && arg1 instanceof AbstractNode) {
      AbstractNode startNode=(AbstractNode)arg0;
      AbstractNode endNode=(AbstractNode)arg1;
      if (checkDuplicates) {
        List<StructrRelationship> incomingRels=endNode.getIncomingLinkRelationships();
        for (        StructrRelationship rel : incomingRels) {
          if (rel.getRelType().equals(relType) && rel.getStartNode().equals(startNode)) {
            logger.log(Level.WARNING,"Creation of duplicate relationship was blocked");
            return null;
          }
        }
      }
      Node node1=graphDb.getNodeById(startNode.getId());
      Node node2=graphDb.getNodeById(endNode.getId());
      return new StructrRelationship(node1.createRelationshipTo(node2,relType));
    }
 else {
      throw new UnsupportedArgumentError("Wrong argument type(s).");
    }
  }
  return null;
}
