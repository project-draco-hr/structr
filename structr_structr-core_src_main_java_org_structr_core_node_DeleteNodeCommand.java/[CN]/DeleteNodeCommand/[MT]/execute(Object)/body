{
  StructrNode node=null;
  StructrNode parentNode=null;
  Boolean recursive=false;
  User user=null;
  Command findNode=Services.command(FindNodeCommand.class);
switch (parameters.length) {
case 2:
    if (parameters[0] instanceof Long) {
      long id=((Long)parameters[0]).longValue();
      node=(StructrNode)findNode.execute(user,id);
    }
 else     if (parameters[0] instanceof StructrNode) {
      node=((StructrNode)parameters[0]);
    }
 else     if (parameters[0] instanceof String) {
      long id=Long.parseLong((String)parameters[0]);
      node=(StructrNode)findNode.execute(user,id);
    }
  if (parameters[1] instanceof User) {
    user=(User)parameters[1];
  }
break;
case 3:
if (parameters[0] instanceof Long) {
long id=((Long)parameters[0]).longValue();
node=(StructrNode)findNode.execute(user,id);
}
 else if (parameters[0] instanceof StructrNode) {
node=((StructrNode)parameters[0]);
}
 else if (parameters[0] instanceof String) {
long id=Long.parseLong((String)parameters[0]);
node=(StructrNode)findNode.execute(user,id);
}
if (parameters[1] instanceof Long) {
long id=((Long)parameters[1]).longValue();
parentNode=(StructrNode)findNode.execute(user,id);
}
 else if (parameters[1] instanceof StructrNode) {
parentNode=(StructrNode)parameters[1];
}
 else if (parameters[1] instanceof String) {
long id=Long.parseLong((String)parameters[1]);
parentNode=(StructrNode)findNode.execute(user,id);
}
if (parameters[2] instanceof User) {
user=(User)parameters[2];
}
break;
case 4:
if (parameters[0] instanceof Long) {
long id=((Long)parameters[0]).longValue();
node=(StructrNode)findNode.execute(user,id);
}
 else if (parameters[0] instanceof Node) {
node=((StructrNode)parameters[0]);
}
 else if (parameters[0] instanceof String) {
long id=Long.parseLong((String)parameters[0]);
node=(StructrNode)findNode.execute(user,id);
}
if (parameters[1] instanceof Long) {
long id=((Long)parameters[1]).longValue();
parentNode=(StructrNode)findNode.execute(user,id);
}
 else if (parameters[1] instanceof StructrNode) {
parentNode=(StructrNode)parameters[1];
}
 else if (parameters[1] instanceof String) {
long id=Long.parseLong((String)parameters[1]);
parentNode=(StructrNode)findNode.execute(user,id);
}
if (parameters[2] instanceof String) {
recursive=Boolean.parseBoolean((String)parameters[2]);
}
 else if (parameters[2] instanceof Boolean) {
recursive=(Boolean)parameters[2];
}
if (parameters[3] instanceof User) {
user=(User)parameters[3];
}
break;
default :
break;
}
return doDeleteNode(user,node,parentNode,recursive);
}
