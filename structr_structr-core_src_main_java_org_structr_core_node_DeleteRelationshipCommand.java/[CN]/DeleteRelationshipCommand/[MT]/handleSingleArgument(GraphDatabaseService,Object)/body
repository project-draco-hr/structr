{
  setExitCode(exitCode.FAILURE);
  Relationship rel=null;
  if (argument instanceof Long) {
    long id=((Long)argument).longValue();
    try {
      rel=graphDb.getRelationshipById(id);
    }
 catch (    NotFoundException nfe) {
      logger.log(Level.SEVERE,"Relationship {0} not found, cannot delete.",id);
    }
  }
 else   if (argument instanceof StructrRelationship) {
    StructrRelationship r=(StructrRelationship)argument;
    rel=r.getRelationship();
  }
 else   if (argument instanceof Relationship) {
    rel=(Relationship)argument;
  }
  if (rel != null) {
    final Relationship relToDelete=rel;
    final Command transactionCommand=Services.command(TransactionCommand.class);
    transactionCommand.execute(new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        relToDelete.delete();
        return null;
      }
    }
);
    setExitCode(exitCode.SUCCESS);
  }
  return null;
}
