{
  Object result;
  if (argument instanceof Node) {
    result=nodeFactory.createNode(securityContext,(Node)argument);
    if (result != null) {
      return result;
    }
  }
 else   if (argument instanceof Long) {
    long id=((Long)argument).longValue();
    try {
      result=findByDbId(id);
      if (result != null) {
        return result;
      }
    }
 catch (    NotFoundException nfe) {
      logger.log(Level.WARNING,"Node with long id {0} not found in database!",id);
    }
  }
 else   if (argument instanceof String) {
    result=(AbstractNode)Services.command(securityContext,GetNodeByIdCommand.class).execute((String)argument);
    if (result != null) {
      return result;
    }
 else {
      Long id=null;
      try {
        id=Long.parseLong((String)argument);
      }
 catch (      NumberFormatException nfex) {
        logger.log(Level.WARNING,"Could not parse {0} to long",argument);
      }
      if (id != null) {
        try {
          result=findByDbId(id);
          if (result != null) {
            return result;
          }
        }
 catch (        NotFoundException nfe) {
          logger.log(Level.WARNING,"id {0} was parsed from argument {1}, but was not found in database!",new Object[]{id,argument});
        }
      }
    }
  }
 else   if (argument instanceof ReferenceNode) {
    Node node=graphDb.getReferenceNode();
    result=nodeFactory.createNode(securityContext,node);
    if (result != null) {
      return result;
    }
  }
 else   if (argument instanceof NodeAttribute) {
    throw new UnsupportedOperationException("Not supported, use SearchNodeCommand instead!");
  }
 else   if (argument instanceof AbstractNode) {
    result=(AbstractNode)argument;
    if (result != null) {
      return result;
    }
  }
  throw new FrameworkException("FindNodeCommand",new IdNotFoundToken(argument));
}
