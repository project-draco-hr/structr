{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  Command findNode=Services.command(FindNodeCommand.class);
  Command searchNode=Services.command(SearchNodeCommand.class);
  String userXPath=null;
  if (graphDb != null) {
switch (parameters.length) {
case 0:
      return (List<User>)searchNode.execute(null,null,true,false,new SingleSearchAttribute(AbstractNode.TYPE_KEY,User.class.getSimpleName(),SearchOperator.OR));
case 1:
    if (parameters[0] instanceof String) {
      String userName=(String)parameters[0];
      List<SingleSearchAttribute> searchAttrs=new ArrayList<SingleSearchAttribute>();
      searchAttrs.add(new SingleSearchAttribute(AbstractNode.NAME_KEY,userName,SearchOperator.AND));
      searchAttrs.add(new SingleSearchAttribute(AbstractNode.TYPE_KEY,User.class.getSimpleName(),SearchOperator.AND));
      List<AbstractNode> usersFound=(List<AbstractNode>)searchNode.execute(null,null,true,false,searchAttrs);
      if (usersFound != null && usersFound.size() > 0) {
        return usersFound.get(0);
      }
 else {
        logger.log(Level.SEVERE,"No user with name {0} found. Contact superadmin",userName);
        return null;
      }
    }
case 2:
  if (parameters[0] instanceof String && parameters[1] instanceof String) {
    String userName=(String)parameters[0];
    String domainName=(String)parameters[1];
    userXPath="//Domain[@name='" + domainName + "']/*/User[@name='"+ userName+ "']";
  }
break;
default :
break;
}
}
List<AbstractNode> nodes=(List<AbstractNode>)findNode.execute(new SuperUser(),new XPath(userXPath));
if (nodes != null) {
if (nodes.size() == 1) {
AbstractNode r=nodes.get(0);
if (r instanceof User) {
return (User)r;
}
 else {
logger.log(Level.SEVERE,"XPath search {0} for User, but returned class was not User: {1}",new Object[]{userXPath,r.getType()});
return null;
}
}
 else if (nodes.size() > 1) {
return nodes;
}
 else {
logger.log(Level.SEVERE,"XPath search {0} for User, but returned class was not User!",userXPath);
}
}
return null;
}
