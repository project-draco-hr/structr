{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  Command searchNode=Services.command(SearchNodeCommand.class);
  if (graphDb != null) {
switch (parameters.length) {
case 0:
      List<User> users=new LinkedList<User>();
    List<AbstractNode> result=(List<AbstractNode>)searchNode.execute(SecurityContext.getSuperUserInstance(),null,false,false,Search.andExactType(User.class.getSimpleName()));
  for (  AbstractNode n : result) {
    if (n instanceof User) {
      users.add((User)n);
    }
  }
return users;
case 1:
if (parameters[0] instanceof String) {
String userName=(String)parameters[0];
List<SearchAttribute> searchAttrs=new LinkedList<SearchAttribute>();
searchAttrs.add(Search.andExactName(userName));
searchAttrs.add(Search.andExactType(User.class.getSimpleName()));
List<AbstractNode> usersFound=(List<AbstractNode>)searchNode.execute(new SuperUser(),null,false,false,searchAttrs);
if (usersFound != null && usersFound.size() > 0 && usersFound.get(0) instanceof User) {
  return (User)usersFound.get(0);
}
 else {
  logger.log(Level.FINE,"No user with name {0} found.",userName);
  return null;
}
}
case 2:
if (parameters[0] instanceof String && parameters[1] instanceof AbstractNode) {
String userName=(String)parameters[0];
AbstractNode topNode=(AbstractNode)parameters[1];
List<SearchAttribute> searchAttrs=new LinkedList<SearchAttribute>();
searchAttrs.add(Search.andExactName(userName));
searchAttrs.add(Search.andExactType(User.class.getSimpleName()));
List<AbstractNode> usersFound=(List<AbstractNode>)searchNode.execute(new SuperUser(),topNode,false,false,searchAttrs);
if (usersFound != null && usersFound.size() > 0 && usersFound.get(0) instanceof User) {
return (User)usersFound.get(0);
}
 else {
logger.log(Level.FINE,"No user with name {0} found.",userName);
return null;
}
}
break;
default :
break;
}
}
return null;
}
