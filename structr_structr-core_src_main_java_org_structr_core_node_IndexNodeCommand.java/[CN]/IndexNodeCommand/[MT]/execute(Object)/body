{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  index=(Index<Node>)arguments.get("index");
  if (graphDb != null) {
    long id=0;
    AbstractNode node=null;
    String key=null;
    Command findNode=Services.command(FindNodeCommand.class);
switch (parameters.length) {
case 1:
      if (parameters[0] instanceof Long) {
        id=((Long)parameters[0]).longValue();
        node=(AbstractNode)findNode.execute(new SuperUser(),id);
      }
 else       if (parameters[0] instanceof String) {
        id=Long.parseLong((String)parameters[0]);
        node=(AbstractNode)findNode.execute(new SuperUser(),id);
      }
 else       if (parameters[0] instanceof AbstractNode) {
        node=(AbstractNode)parameters[0];
      }
    indexNode(node);
  break;
case 2:
if (parameters[0] instanceof Long) {
  id=((Long)parameters[0]).longValue();
  node=(AbstractNode)findNode.execute(new SuperUser(),id);
}
 else if (parameters[0] instanceof String) {
  id=Long.parseLong((String)parameters[0]);
  node=(AbstractNode)findNode.execute(new SuperUser(),id);
}
 else if (parameters[0] instanceof AbstractNode) {
  node=(AbstractNode)parameters[0];
  id=node.getId();
}
if (parameters[1] instanceof String) {
key=(String)parameters[1];
}
indexProperty(node,key);
break;
default :
logger.log(Level.SEVERE,"Wrong number of parameters for the index property command: {0}",parameters);
return null;
}
}
return null;
}
