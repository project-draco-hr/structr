{
  Command findNode=Services.command(FindNodeCommand.class);
  AbstractNode node=null;
  AbstractNode newParentNode=null;
  long id=0;
  long newParentId=0;
  boolean isLink=false;
switch (parameters.length) {
case 2:
    if (parameters[0] instanceof Long) {
      id=((Long)parameters[0]).longValue();
    }
 else     if (parameters[0] instanceof AbstractNode) {
      id=((AbstractNode)parameters[0]).getId();
    }
 else     if (parameters[0] instanceof String) {
      id=Long.parseLong((String)parameters[0]);
    }
  node=(AbstractNode)findNode.execute(new SuperUser(),id);
if (parameters[1] instanceof Long) {
  newParentId=((Long)parameters[1]).longValue();
}
 else if (parameters[1] instanceof AbstractNode) {
  newParentId=((AbstractNode)parameters[1]).getId();
}
 else if (parameters[1] instanceof String) {
  newParentId=Long.parseLong((String)parameters[1]);
}
newParentNode=(AbstractNode)findNode.execute(new SuperUser(),newParentId);
break;
case 3:
if (parameters[0] instanceof Long) {
id=((Long)parameters[0]).longValue();
}
 else if (parameters[0] instanceof AbstractNode) {
id=((AbstractNode)parameters[0]).getId();
}
 else if (parameters[0] instanceof String) {
id=Long.parseLong((String)parameters[0]);
}
node=(AbstractNode)findNode.execute(new SuperUser(),id);
if (parameters[1] instanceof Long) {
newParentId=((Long)parameters[1]).longValue();
}
 else if (parameters[1] instanceof AbstractNode) {
newParentId=((AbstractNode)parameters[1]).getId();
}
 else if (parameters[1] instanceof String) {
newParentId=Long.parseLong((String)parameters[1]);
}
newParentNode=(AbstractNode)findNode.execute(new SuperUser(),newParentId);
if (parameters[2] instanceof Boolean) {
isLink=(Boolean)parameters[2];
}
break;
default :
break;
}
doMoveNode(node,newParentNode,isLink);
return null;
}
