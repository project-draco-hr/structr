{
  List<AbstractNode> nodes=new LinkedList<AbstractNode>();
  if (input != null && input instanceof SpatialRecordHits) {
    Command graphDbCommand=Services.command(securityContext,GraphDatabaseCommand.class);
    GraphDatabaseService graphDb=(GraphDatabaseService)graphDbCommand.execute();
    if (input.iterator().hasNext()) {
      for (      Node node : input) {
        AbstractNode n=createNode(securityContext,graphDb.getNodeById((Long)node.getProperty("id")));
        if (n != null && isReadable(securityContext,n,includeDeleted,publicOnly)) {
          nodes.add(n);
        }
        for (        AbstractNode nodeAt : getNodesAt(n)) {
          if (nodeAt != null && isReadable(securityContext,nodeAt,includeDeleted,publicOnly)) {
            nodes.add(nodeAt);
          }
        }
      }
    }
  }
 else {
    if ((input != null) && input.iterator().hasNext()) {
      for (      Node node : input) {
        AbstractNode n=createNode(securityContext,(Node)node);
        if (n != null && isReadable(securityContext,n,includeDeleted,publicOnly)) {
          nodes.add(n);
        }
      }
    }
  }
  return nodes;
}
