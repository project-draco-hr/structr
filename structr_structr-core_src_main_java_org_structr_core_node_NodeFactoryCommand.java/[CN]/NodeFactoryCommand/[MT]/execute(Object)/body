{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  NodeFactory nodeFactory=(NodeFactory)arguments.get("nodeFactory");
  Object ret=null;
  if (nodeFactory != null) {
    if (parameters.length > 0) {
      if (parameters.length > 1) {
        Collection<AbstractNode> collection=new LinkedList<AbstractNode>();
        for (        Object o : parameters) {
          Node node=null;
          if (o instanceof AbstractNode) {
            node=graphDb.getNodeById(((AbstractNode)o).getId());
          }
 else           if (o instanceof Node) {
            node=(Node)o;
          }
 else {
            logger.log(Level.WARNING,"Unknown parameter of type {0}",o.getClass().getName());
            return null;
          }
          collection.add(nodeFactory.createNode(securityContext,node));
        }
        ret=collection;
      }
 else {
        Node node=null;
        if (parameters[0] instanceof AbstractNode) {
          node=graphDb.getNodeById(((AbstractNode)parameters[0]).getId());
        }
 else         if (parameters[0] instanceof Node) {
          node=(Node)parameters[0];
        }
 else {
          logger.log(Level.WARNING,"Unknown parameter of type {0}",parameters[0].getClass().getName());
          return null;
        }
        ret=nodeFactory.createNode(securityContext,node);
      }
    }
 else {
      logger.log(Level.WARNING,"Invalid number of parameters: {0}",parameters.length);
    }
  }
 else {
    logger.log(Level.WARNING,"NodeFactory argument missing from service");
  }
  return (ret);
}
