{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  List<AbstractRelationship> result=new LinkedList<AbstractRelationship>();
  if (parameters.length == 3) {
    Object arg0=parameters[0];
    Object arg1=parameters[1];
    Object arg2=parameters[2];
    AbstractNode sNode=(AbstractNode)arg0;
    RelationshipType relType=(RelationshipType)arg1;
    Direction dir=(Direction)arg2;
    Node node=null;
    long id=-1;
    try {
      id=sNode.getId();
      if (id > -1) {
        node=graphDb.getNodeById(sNode.getId());
      }
 else {
        return result;
      }
    }
 catch (    Exception e) {
      logger.log(Level.WARNING,"Not found: " + id,e.getMessage());
      return result;
    }
    Iterable<Relationship> rels;
    if (arg1 != null) {
      rels=node.getRelationships(relType,dir);
    }
 else {
      rels=node.getRelationships(dir);
    }
    try {
      for (      Relationship r : rels) {
        result.add(new GenericRelationship(securityContext,r));
      }
    }
 catch (    RuntimeException e) {
      logger.log(Level.WARNING,"Exception occured: ",e.getMessage());
    }
  }
  return result;
}
