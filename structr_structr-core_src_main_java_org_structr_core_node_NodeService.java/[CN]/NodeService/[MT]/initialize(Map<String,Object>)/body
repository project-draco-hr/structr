{
  String dbPath=Services.getDatabasePath();
  try {
    logger.log(Level.INFO,"Initializing database ({0}) ...",dbPath);
    Map<String,String> configuration=null;
    try {
      configuration=EmbeddedGraphDatabase.loadConfigurations(dbPath + "/neo4j.conf");
      graphDb=new EmbeddedGraphDatabase(dbPath,configuration);
    }
 catch (    Throwable t) {
      logger.log(Level.INFO,"Database config not found");
      graphDb=new EmbeddedGraphDatabase(dbPath);
    }
    if (graphDb != null) {
      graphDb.registerTransactionEventHandler(EntityContext.getTransactionEventHandler());
    }
    String filesPath=Services.getFilesPath();
    File files=new File(filesPath);
    if (!files.exists()) {
      files.mkdir();
    }
    logger.log(Level.INFO,"Database ready.");
    logger.log(Level.FINE,"Initializing UUID index...");
    uuidIndex=graphDb.index().forNodes("uuidAllNodes",LuceneIndexImplementation.EXACT_CONFIG);
    logger.log(Level.FINE,"UUID index ready.");
    logger.log(Level.FINE,"Initializing user index...");
    userIndex=graphDb.index().forNodes("nameEmailAllUsers",LuceneIndexImplementation.EXACT_CONFIG);
    logger.log(Level.FINE,"UUID index ready.");
    logger.log(Level.FINE,"Initializing fulltext index...");
    fulltextIndex=graphDb.index().forNodes("fulltextAllNodes",LuceneIndexImplementation.FULLTEXT_CONFIG);
    logger.log(Level.FINE,"Fulltext index ready.");
    logger.log(Level.FINE,"Initializing keyword index...");
    keywordIndex=graphDb.index().forNodes("keywordAllNodes",LuceneIndexImplementation.EXACT_CONFIG);
    logger.log(Level.FINE,"Keyword index ready.");
    logger.log(Level.FINE,"Initializing node factory...");
    nodeFactory=new StructrNodeFactory();
    logger.log(Level.FINE,"Node factory ready.");
  }
 catch (  Exception e) {
    logger.log(Level.SEVERE,"Database could not be initialized. {0}",e.getMessage());
    e.printStackTrace(System.out);
  }
}
