{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  boolean topLevelTransaction=false;
  FrameworkException exception=null;
  T ret=null;
  Transaction tx=graphDb.beginTx();
  topLevelTransaction=tx instanceof TopLevelTransaction;
  try {
    ret=transaction.execute(tx);
    tx.success();
    logger.log(Level.FINEST,"Transaction successfull");
  }
 catch (  FrameworkException frameworkException) {
    frameworkException.printStackTrace();
    tx.failure();
    logger.log(Level.WARNING,"Transaction failure",frameworkException);
    exception=frameworkException;
  }
catch (  DeadlockDetectedException ddex) {
    tx.failure();
    logger.log(Level.SEVERE,"Neo4j detected a deadlock!",ddex.getMessage());
  }
 finally {
synchronized (TransactionCommand.class) {
      long transactionKey=nextLong();
      EntityContext.setSecurityContext(securityContext);
      EntityContext.setTransactionKey(transactionKey);
      try {
        tx.finish();
      }
 catch (      Throwable t) {
        t.printStackTrace();
        exception=EntityContext.getFrameworkException(transactionKey);
      }
    }
  }
  if (exception != null) {
    throw exception;
  }
  if (topLevelTransaction) {
    notifyChangeSet(graphDb,EntityContext.getTransactionChangeSet());
  }
  return ret;
}
