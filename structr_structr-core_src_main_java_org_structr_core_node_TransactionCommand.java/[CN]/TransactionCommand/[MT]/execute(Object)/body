{
  GraphDatabaseService graphDb=(GraphDatabaseService)arguments.get("graphDb");
  FrameworkException exception=null;
  Object ret=null;
  if ((parameters.length > 0) && (parameters[0] instanceof StructrTransaction)) {
    StructrTransaction transaction=(StructrTransaction)parameters[0];
    Transaction tx=graphDb.beginTx();
    try {
      ret=transaction.execute();
      tx.success();
      logger.log(Level.FINEST,"Transaction successfull");
    }
 catch (    FrameworkException frameworkException) {
      tx.failure();
      logger.log(Level.WARNING,"Transaction failure",frameworkException);
      exception=frameworkException;
    }
catch (    DeadlockDetectedException ddex) {
      tx.failure();
      logger.log(Level.SEVERE,"Neo4j detected a deadlock!",ddex.getMessage());
    }
 finally {
      long transactionKey=nextLong();
      EntityContext.setSecurityContext(securityContext);
      EntityContext.setTransactionKey(transactionKey);
      try {
        tx.finish();
      }
 catch (      Throwable t) {
        exception=EntityContext.getFrameworkException(transactionKey);
      }
      EntityContext.removeTransactionKey();
      EntityContext.removeSecurityContext();
    }
  }
 else   if ((parameters.length > 0) && (parameters[0] instanceof BatchTransaction)) {
    BatchTransaction transaction=(BatchTransaction)parameters[0];
    Transaction tx=graphDb.beginTx();
    try {
      ret=transaction.execute(tx);
      tx.success();
      logger.log(Level.FINEST,"Transaction successfull");
    }
 catch (    FrameworkException frameworkException) {
      tx.failure();
      logger.log(Level.WARNING,"Transaction failure",frameworkException);
      exception=frameworkException;
    }
catch (    DeadlockDetectedException ddex) {
      tx.failure();
      logger.log(Level.SEVERE,"Neo4j detected a deadlock!",ddex.getMessage());
    }
 finally {
      long transactionKey=nextLong();
      EntityContext.setSecurityContext(securityContext);
      EntityContext.setTransactionKey(transactionKey);
      try {
        tx.finish();
      }
 catch (      Throwable t) {
        exception=EntityContext.getFrameworkException(transactionKey);
      }
      EntityContext.removeTransactionKey();
      EntityContext.removeSecurityContext();
    }
  }
  if (exception != null) {
    throw exception;
  }
  return ret;
}
