{
  final Queue<AbstractNode> propagationQueue=changeSet.getPropagationQueue();
  final Set<AbstractNode> propagationSet=new LinkedHashSet<AbstractNode>();
  propagationSet.addAll(propagationQueue);
  if (!propagationQueue.isEmpty()) {
    do {
      final AbstractNode node=propagationQueue.poll();
      if (!propagationSet.contains(node)) {
        propagationSet.addAll(node.getNodesForModificationPropagation());
      }
    }
 while (!propagationQueue.isEmpty());
  }
  propagateModification(securityContext,propagationSet);
  afterOwnerModification(securityContext,changeSet.getOwnerModifiedNodes());
  afterSecurityModification(securityContext,changeSet.getSecurityModifiedNodes());
  afterLocationModification(securityContext,changeSet.getLocationModifiedNodes());
  afterDeletion(securityContext,changeSet.getDeletedNodes());
  afterDeletion(securityContext,changeSet.getDeletedRelationships());
  afterModification(securityContext,changeSet.getModifiedNodes());
  afterModification(securityContext,changeSet.getModifiedRelationships());
  afterCreation(securityContext,changeSet.getCreatedNodes());
  afterCreation(securityContext,changeSet.getCreatedRelationships());
}
