{
  Index<Node> index=(Index<Node>)arguments.get(NodeService.NodeIndex.keyword.name());
  String lowerTerm=null;
  String upperTerm=null;
  String type=null;
  int count=-1;
  if (parameters.length > 0 && parameters[0] instanceof Class) {
    type=((Class)parameters[0]).getSimpleName();
  }
  if (parameters.length > 1 && parameters[1] instanceof String) {
    lowerTerm=(String)parameters[1];
  }
  if (parameters.length > 2 && parameters[2] instanceof String) {
    upperTerm=(String)parameters[2];
  }
  if (type != null) {
    Query typeQuery=new TermQuery(new Term("type",type));
    Query actualQuery=null;
    if (lowerTerm != null && upperTerm != null) {
      Query dateQuery=new TermRangeQuery("createdDate",lowerTerm,upperTerm,true,false);
      BooleanQuery booleanQuery=new BooleanQuery();
      booleanQuery.add(dateQuery,BooleanClause.Occur.MUST);
      booleanQuery.add(typeQuery,BooleanClause.Occur.MUST);
      actualQuery=booleanQuery;
    }
 else {
      actualQuery=typeQuery;
    }
    long start=System.currentTimeMillis();
    IndexHits hits=index.query(actualQuery);
    count=hits.size();
    long end=System.currentTimeMillis();
    logger.log(Level.FINE,"Counted {0} entities in {1} ms.",new Object[]{count,(end - start)});
    hits.close();
  }
  return count;
}
