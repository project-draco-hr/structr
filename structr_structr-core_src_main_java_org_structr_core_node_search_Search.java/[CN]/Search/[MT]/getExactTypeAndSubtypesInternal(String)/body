{
  List<SearchAttribute> attrs=new LinkedList<SearchAttribute>();
  ModuleService moduleService=Services.getService(ModuleService.class);
  Map<String,Class> entities=moduleService.getCachedNodeEntities();
  Class parentClass=entities.get(searchString);
  if (parentClass == null) {
    Set<Class> classesForInterface=moduleService.getClassesForInterface(EntityContext.normalizeEntityName(searchString));
    if (classesForInterface != null) {
      for (      Class clazz : classesForInterface) {
        attrs.addAll(getExactTypeAndSubtypesInternal(clazz.getSimpleName()));
      }
    }
    return attrs;
  }
  for (  Map.Entry<String,Class> entity : entities.entrySet()) {
    Class entityClass=entity.getValue();
    if (parentClass.isAssignableFrom(entityClass)) {
      attrs.add(Search.orExactType(entity.getKey()));
    }
  }
  return attrs;
}
