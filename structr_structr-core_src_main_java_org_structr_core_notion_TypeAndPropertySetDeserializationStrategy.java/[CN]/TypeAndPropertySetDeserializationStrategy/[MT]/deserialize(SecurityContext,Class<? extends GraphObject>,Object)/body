{
  if (source instanceof JsonInput) {
    PropertySet attributes=PropertySet.convertFromInput(securityContext,type,((JsonInput)source).getAttributes());
    List<SearchAttribute> attrs=new LinkedList<SearchAttribute>();
    for (    Entry<PropertyKey,Object> entry : attributes.entrySet()) {
      attrs.add(Search.andExactProperty(entry.getKey(),entry.getValue().toString()));
    }
    Result result=Services.command(securityContext,SearchNodeCommand.class).execute(attrs);
    if (result.size() == 1) {
      GraphObject obj=result.get(0);
      if (!type.isAssignableFrom(obj.getClass())) {
        throw new FrameworkException(type.getSimpleName(),new TypeToken(AbstractNode.base,type.getSimpleName()));
      }
      return result.get(0);
    }
    throw new FrameworkException(type.getSimpleName(),new PropertiesNotFoundToken(AbstractNode.base,attributes));
  }
  return null;
}
