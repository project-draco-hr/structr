{
  if (source instanceof PropertySet) {
    Map<String,Object> attributes=new LinkedHashMap<String,Object>();
    List<SearchAttribute> attrs=new LinkedList<SearchAttribute>();
    GraphObject typeInstance=null;
    try {
      typeInstance=type.newInstance();
    }
 catch (    Throwable t) {
    }
    for (    Entry<String,Object> entry : ((PropertySet)source).getAttributes().entrySet()) {
      String value=(String)entry.getValue();
      PropertyKey key=typeInstance != null ? typeInstance.getPropertyKeyForName(entry.getKey()) : new Property(entry.getKey());
      attrs.add(Search.andExactProperty(key,value));
      attributes.put(key.name(),value);
    }
    Result result=(Result)Services.command(securityContext,SearchNodeCommand.class).execute(null,false,false,attrs);
    if (result.size() == 1) {
      GraphObject obj=result.get(0);
      if (!type.isAssignableFrom(obj.getClass())) {
        throw new FrameworkException(type.getSimpleName(),new TypeToken(AbstractNode.base,type.getSimpleName()));
      }
      return result.get(0);
    }
    throw new FrameworkException(type.getSimpleName(),new PropertiesNotFoundToken(AbstractNode.base,attributes));
  }
  return null;
}
