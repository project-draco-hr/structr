{
  results=typedIdConstraint.process(results,request);
  if (results != null) {
    String sourceType=typedIdConstraint.getTypeConstraint().getType();
    String targetType=typeConstraint.getType();
    DirectedRelationship staticRel=EntityContext.getRelation(sourceType,targetType);
    if (staticRel != null) {
      LinkedList<GraphObject> transformedResults=new LinkedList<GraphObject>();
      for (      GraphObject obj : results) {
        if (staticRel.getDirection().equals(Direction.INCOMING)) {
          List<StructrRelationship> rels=obj.getRelationships(staticRel.getRelType(),staticRel.getDirection());
          for (          StructrRelationship rel : rels) {
            transformedResults.add(rel.getStartNode());
          }
        }
 else {
          List<StructrRelationship> rels=obj.getRelationships(staticRel.getRelType(),staticRel.getDirection());
          for (          StructrRelationship rel : rels) {
            transformedResults.add(rel.getEndNode());
          }
        }
      }
      return transformedResults;
    }
  }
  throw new IllegalPathException();
}
