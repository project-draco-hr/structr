{
  if (type.endsWith("s")) {
    logger.log(Level.FINEST,"Removing trailing plural 's' from type {0}",type);
    type=type.substring(0,type.length() - 1);
  }
  if (result == null) {
    List<SearchAttribute> searchAttributes=new LinkedList<SearchAttribute>();
    User user=new SuperUser();
    AbstractNode topNode=null;
    boolean includeDeleted=false;
    boolean publicOnly=false;
    if (type != null) {
      searchAttributes.add(new TextualSearchAttribute("type",type,SearchOperator.OR));
      List results=(List)Services.command(SearchNodeCommand.class).execute(user,topNode,includeDeleted,publicOnly,searchAttributes);
      if (!results.isEmpty()) {
        return new Result(results);
      }
    }
  }
 else {
    logger.log(Level.WARNING,"Received results from predecessor, this query is probably not optimized!");
    for (Iterator<GraphObject> it=result.getResults().iterator(); it.hasNext(); ) {
      if (!type.equalsIgnoreCase(it.next().getType())) {
        it.remove();
      }
    }
    return result;
  }
  throw new NoResultsException();
}
