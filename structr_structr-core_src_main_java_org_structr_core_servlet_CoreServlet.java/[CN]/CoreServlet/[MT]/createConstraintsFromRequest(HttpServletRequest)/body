{
  RootResourceConstraint rootConstraint=new RootResourceConstraint();
  ResourceConstraint<AbstractNode> currentConstraint=rootConstraint;
  String path=request.getPathInfo();
  if (path != null) {
    String[] pathParts=path.split("[/]+");
    for (int i=0; i < pathParts.length; i++) {
      String part=pathParts[i].trim();
      if (part.length() > 0) {
        for (        Entry<Pattern,Class> entry : constraints.entrySet()) {
          Pattern pattern=entry.getKey();
          Class type=entry.getValue();
          Matcher matcher=pattern.matcher(pathParts[i]);
          if (matcher.matches()) {
            try {
              ResourceConstraint constraint=(ResourceConstraint)type.newInstance();
              if (constraint.acceptUriPart(part)) {
                logger.log(Level.INFO,"{0} matched, adding constraint of type {1} for part {2}",new Object[]{pattern.pattern(),type.getName(),part});
                currentConstraint.setChild(constraint);
                currentConstraint=constraint;
                break;
              }
            }
 catch (            Throwable t) {
              logger.log(Level.WARNING,"Error instantiating constraint class",t);
            }
          }
        }
      }
    }
    String sortKey=request.getParameter(REQUEST_PARAMETER_SORT_KEY);
    if (sortKey != null) {
      String sortOrder=request.getParameter(REQUEST_PARAMETER_SORT_ORDER);
      if (sortOrder == null) {
        sortOrder=DEFAULT_VALUE_SORT_ORDER;
      }
      SortConstraint sortConstraint=new SortConstraint(sortKey,sortOrder);
      currentConstraint.setChild(sortConstraint);
      currentConstraint=sortConstraint;
    }
    String pageSizeParameter=request.getParameter(REQUEST_PARAMETER_PAGE_SIZE);
    if (pageSizeParameter != null) {
      String pageParameter=request.getParameter(REQUEST_PARAMETER_PAGE_NUMBER);
      int pageSize=parseInt(pageSizeParameter,DEFAULT_VALUE_PAGE_SIZE);
      int page=parseInt(pageParameter,1);
      PagingConstraint pagingConstraint=new PagingConstraint(page,pageSize);
      if (pageSize <= 0) {
        throw new IllegalPathException();
      }
      currentConstraint.setChild(pagingConstraint);
      currentConstraint=pagingConstraint;
    }
  }
  return rootConstraint;
}
