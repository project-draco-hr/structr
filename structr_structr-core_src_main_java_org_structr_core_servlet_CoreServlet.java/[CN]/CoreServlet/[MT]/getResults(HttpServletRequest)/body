{
  RootResourceConstraint rootConstraint=new RootResourceConstraint();
  ResourceConstraint<AbstractNode> currentConstraint=rootConstraint;
  PagingConstraint pagingConstraint=null;
  String sortOrder=null;
  String sortKey=null;
  String path=request.getPathInfo();
  if (path != null) {
    String[] pathParts=path.split("[/]+");
    for (int i=0; i < pathParts.length; i++) {
      String part=pathParts[i].trim();
      if (part.length() > 0) {
        for (        Entry<Matcher,Class> entry : constraints.entrySet()) {
          Matcher matcher=entry.getKey();
          Class type=entry.getValue();
          matcher.reset(pathParts[i]);
          if (matcher.matches()) {
            try {
              ResourceConstraint constraint=(ResourceConstraint)type.newInstance();
              if (constraint.acceptUriPart(part)) {
                logger.log(Level.INFO,"{0} matched, adding constraint of type {1} for part {2}",new Object[]{matcher.pattern(),type.getName(),part});
                currentConstraint.setChild(constraint);
                currentConstraint=constraint;
                break;
              }
            }
 catch (            Throwable t) {
              logger.log(Level.WARNING,"Error instantiating constraint class",t);
            }
          }
        }
      }
    }
    sortKey=request.getParameter(REQUEST_PARAMETER_SORT_KEY);
    if (sortKey != null) {
      sortOrder=request.getParameter(REQUEST_PARAMETER_SORT_ORDER);
      if (sortOrder == null) {
        sortOrder=DEFAULT_VALUE_SORT_ORDER;
      }
      SortConstraint sortConstraint=new SortConstraint(sortKey,sortOrder);
      currentConstraint.setChild(sortConstraint);
      currentConstraint=sortConstraint;
    }
    String pageSizeParameter=request.getParameter(REQUEST_PARAMETER_PAGE_SIZE);
    if (pageSizeParameter != null) {
      String pageParameter=request.getParameter(REQUEST_PARAMETER_PAGE_NUMBER);
      int pageSize=parseInt(pageSizeParameter,DEFAULT_VALUE_PAGE_SIZE);
      int page=parseInt(pageParameter,1);
      pagingConstraint=new PagingConstraint(page,pageSize);
      if (pageSize <= 0) {
        throw new IllegalPathException();
      }
      currentConstraint.setChild(pagingConstraint);
      currentConstraint=pagingConstraint;
    }
  }
  Result<AbstractNode> results=rootConstraint.getNestedResults(request);
  if (pagingConstraint != null) {
    results.setPage(pagingConstraint.getPage());
    results.setPageSize(pagingConstraint.getPageSize());
    results.setPageCount(pagingConstraint.getPageCount());
    results.setResultCount(pagingConstraint.getResultCount());
  }
 else {
    results.setResultCount(results.getResults().size());
  }
  results.setSortOrder(sortOrder);
  results.setSortKey(sortKey);
  return results;
}
