{
  String propertyFormatParameter=this.getInitParameter(SERVLET_PARAMETER_PROPERTY_FORMAT);
  PropertyFormat propertyFormat=PropertyFormat.NestedKeyValueType;
  if (propertyFormatParameter != null) {
    try {
      propertyFormat=PropertyFormat.valueOf(propertyFormatParameter);
      logger.log(Level.INFO,"Setting property format to {0}",propertyFormatParameter);
    }
 catch (    Throwable t) {
      logger.log(Level.WARNING,"Cannot use property format {0}, unknown format.",propertyFormatParameter);
    }
  }
  this.constraintMap=new LinkedHashMap<Pattern,Class>();
  this.gson=new GsonBuilder().setPrettyPrinting().registerTypeAdapter(PropertySet.class,new PropertySetGSONAdapter(propertyFormat)).registerTypeAdapter(Result.class,new ResultGSONAdapter(propertyFormat)).create();
  constraintMap.put(Pattern.compile("[0-9]+"),IdConstraint.class);
  constraintMap.put(Pattern.compile("search"),SearchConstraint.class);
  constraintMap.put(Pattern.compile("out"),RelationshipConstraint.class);
  constraintMap.put(Pattern.compile("in"),RelationshipConstraint.class);
  constraintMap.put(Pattern.compile("start"),RelationshipNodeConstraint.class);
  constraintMap.put(Pattern.compile("end"),RelationshipNodeConstraint.class);
  constraintMap.put(Pattern.compile("[a-z_]+"),TypeConstraint.class);
}
