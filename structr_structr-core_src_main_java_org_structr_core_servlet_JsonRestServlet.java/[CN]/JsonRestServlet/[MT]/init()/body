{
  PropertyFormat propertyFormat=initializePropertyFormat();
  this.constraintMap=new LinkedHashMap<Pattern,Class>();
  this.propertyView=new ThreadLocalPropertyView();
  this.resultGsonAdapter=new ResultGSONAdapter(propertyFormat,propertyView);
  this.propertySetAdapter=new PropertySetGSONAdapter(propertyFormat);
  this.gson=new GsonBuilder().setPrettyPrinting().serializeNulls().registerTypeAdapter(PropertySet.class,propertySetAdapter).registerTypeAdapter(Result.class,resultGsonAdapter).create();
  constraintMap.put(Pattern.compile("[0-9]+"),IdConstraint.class);
  constraintMap.put(Pattern.compile("in"),RelationshipConstraint.class);
  constraintMap.put(Pattern.compile("out"),RelationshipConstraint.class);
  constraintMap.put(Pattern.compile("start"),RelationshipNodeConstraint.class);
  constraintMap.put(Pattern.compile("end"),RelationshipNodeConstraint.class);
  constraintMap.put(Pattern.compile("public"),ViewFilterConstraint.class);
  constraintMap.put(Pattern.compile("protected"),ViewFilterConstraint.class);
  constraintMap.put(Pattern.compile("private"),ViewFilterConstraint.class);
  constraintMap.put(Pattern.compile("owner"),ViewFilterConstraint.class);
  constraintMap.put(Pattern.compile("admin"),ViewFilterConstraint.class);
  constraintMap.put(Pattern.compile("[a-z_]+"),TypeConstraint.class);
}
