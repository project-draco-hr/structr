{
  final List<? extends GraphObject> results=doGet(listeners);
  if (results != null && !results.isEmpty()) {
    Boolean success=(Boolean)Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        ErrorBuffer errorBuffer=new ErrorBuffer();
        boolean success=true;
        for (        GraphObject obj : results) {
          if (mayDelete(listeners,obj,errorBuffer)) {
            if (obj instanceof AbstractNode) {
              List<StructrRelationship> rels=((AbstractNode)obj).getRelationships();
              for (              StructrRelationship rel : rels) {
                success&=rel.delete();
              }
            }
            success&=obj.delete();
          }
        }
        if (!success) {
          throw new IllegalArgumentException(errorBuffer.toString());
        }
        return success;
      }
    }
);
    if (success != null && success.booleanValue() == true) {
      return new RestMethodResult(HttpServletResponse.SC_OK);
    }
  }
  throw new NotFoundException();
}
