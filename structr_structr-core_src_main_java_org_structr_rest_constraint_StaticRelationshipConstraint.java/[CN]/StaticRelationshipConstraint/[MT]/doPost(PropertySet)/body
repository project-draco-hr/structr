{
  final AbstractNode sourceNode=typedIdConstraint.getIdConstraint().getNode();
  final AbstractNode newNode=typeConstraint.createNode(propertySet);
  final DirectedRelationship rel=EntityContext.getRelation(sourceNode.getClass(),newNode.getClass());
  if (rel != null) {
    final RelationshipType relType=rel.getRelType();
    StructrTransaction transaction=new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        return Services.command(securityContext,CreateRelationshipCommand.class).execute(sourceNode,newNode,relType);
      }
    }
;
    Services.command(securityContext,TransactionCommand.class).execute(transaction);
    if (transaction.getCause() != null) {
      throw transaction.getCause();
    }
  }
  throw new IllegalPathException();
}
