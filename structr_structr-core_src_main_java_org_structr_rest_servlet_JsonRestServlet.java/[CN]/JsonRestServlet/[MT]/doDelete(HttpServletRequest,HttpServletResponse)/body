{
  try {
    SecurityContext securityContext=getSecurityContext(request);
    Result result=getResults(securityContext,request);
    if (result != null) {
      final List<GraphObject> results=result.getResults();
      if (results != null && !results.isEmpty()) {
        Boolean success=(Boolean)Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
          @Override public Object execute() throws Throwable {
            boolean success=true;
            for (            GraphObject obj : results) {
              if (mayDelete(obj,request)) {
                success&=obj.delete();
              }
            }
            if (!success) {
              throw new IllegalStateException("Deletion failed, roll back transaction");
            }
            return success;
          }
        }
);
        if (success.booleanValue()) {
          response.setStatus(HttpServletResponse.SC_OK);
          return;
        }
      }
 else {
        throw new NotFoundException();
      }
    }
    response.setStatus(HttpServletResponse.SC_NOT_FOUND);
  }
 catch (  PathException pathException) {
    response.setStatus(pathException.getStatus());
  }
catch (  JsonSyntaxException jsex) {
    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
  }
catch (  JsonParseException jpex) {
    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
  }
catch (  Throwable t) {
    response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
  }
}
