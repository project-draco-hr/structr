{
  try {
    request.setCharacterEncoding("UTF-8");
    SecurityContext securityContext=getSecurityContext(request);
    propertyView.set(PropertyView.Public);
    double queryTimeStart=System.nanoTime();
    List<ResourceConstraint> chain=parsePath(securityContext,request);
    ResourceConstraint resourceConstraint=optimizeConstraintChain(chain);
    double queryTimeEnd=System.nanoTime();
    Result result=new Result(resourceConstraint.doGet(graphObjectListeners));
    if (result != null) {
      DecimalFormat decimalFormat=new DecimalFormat("0.000000000",DecimalFormatSymbols.getInstance(Locale.ENGLISH));
      result.setQueryTime(decimalFormat.format((queryTimeEnd - queryTimeStart) / 1000000000.0));
      response.setContentType("application/json; charset=utf-8");
      Writer writer=response.getWriter();
      gson.toJson(result,writer);
      writer.flush();
      writer.close();
      response.setStatus(HttpServletResponse.SC_OK);
    }
 else {
      logger.log(Level.WARNING,"Result was null!");
      response.setStatus(HttpServletResponse.SC_NO_CONTENT);
    }
  }
 catch (  MessageException msgException) {
    response.setStatus(msgException.getStatus());
    response.setContentLength(msgException.getMessage().length());
    response.setContentType("text/plain; charset=UTF-8");
    response.getWriter().append(msgException.getMessage());
    response.getWriter().flush();
    response.getWriter().close();
  }
catch (  IllegalArgumentException illegalArgumentException) {
    handleValidationError(illegalArgumentException,response);
  }
catch (  PathException pathException) {
    response.setStatus(pathException.getStatus());
  }
catch (  JsonSyntaxException jsex) {
    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
  }
catch (  JsonParseException jpex) {
    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
  }
catch (  Throwable t) {
    logger.log(Level.WARNING,"Exception in GET",t);
    response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
  }
}
