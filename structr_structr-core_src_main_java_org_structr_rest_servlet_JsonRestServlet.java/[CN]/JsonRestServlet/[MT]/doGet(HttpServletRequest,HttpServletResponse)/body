{
  try {
    logRequest("GET",request);
    request.setCharacterEncoding("UTF-8");
    response.setContentType("application/json; charset=utf-8");
    SecurityContext securityContext=getSecurityContext(request);
    propertyView.set(defaultPropertyView);
    double queryTimeStart=System.nanoTime();
    ResourceConstraint resourceConstraint=addSortingAndPaging(request,securityContext,optimizeConstraintChain(parsePath(securityContext,request)));
    double queryTimeEnd=System.nanoTime();
    Result result=new Result(resourceConstraint.doGet(),resourceConstraint.isCollectionResource());
    if (result != null) {
      DecimalFormat decimalFormat=new DecimalFormat("0.000000000",DecimalFormatSymbols.getInstance(Locale.ENGLISH));
      result.setQueryTime(decimalFormat.format((queryTimeEnd - queryTimeStart) / 1000000000.0));
      Writer writer=response.getWriter();
      gson.toJson(result,writer);
      writer.append("\n");
      writer.flush();
      writer.close();
      response.setStatus(HttpServletResponse.SC_OK);
    }
 else {
      logger.log(Level.WARNING,"Result was null!");
      int code=HttpServletResponse.SC_NO_CONTENT;
      response.setStatus(code);
      response.getWriter().append(jsonError(code,"Result was null!"));
      response.getWriter().flush();
      response.getWriter().close();
    }
  }
 catch (  MessageException msgException) {
    int code=msgException.getStatus();
    response.setStatus(code);
    response.getWriter().append(jsonMsg(msgException.getMessage()));
    response.getWriter().flush();
    response.getWriter().close();
  }
catch (  IllegalArgumentException illegalArgumentException) {
    handleValidationError(illegalArgumentException,response);
  }
catch (  PathException pathException) {
    int code=pathException.getStatus();
    response.setStatus(code);
    response.getWriter().append(jsonError(code,pathException.getMessage()));
  }
catch (  JsonSyntaxException jsex) {
    logger.log(Level.WARNING,"JsonSyntaxException in GET",jsex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in GET: " + jsex.getMessage()));
  }
catch (  JsonParseException jpex) {
    logger.log(Level.WARNING,"JsonParseException in GET",jpex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in GET: " + jpex.getMessage()));
  }
catch (  Throwable t) {
    logger.log(Level.WARNING,"Exception in GET",t);
    int code=HttpServletResponse.SC_INTERNAL_SERVER_ERROR;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in GET: " + t.getMessage()));
  }
}
