{
  PropertyFormat propertyFormat=initializePropertyFormat();
  this.constraintMap=new LinkedHashMap<Pattern,Class>();
  this.propertyView=new ThreadLocalPropertyView();
  this.resultGsonAdapter=new ResultGSONAdapter(propertyFormat,propertyView);
  this.propertySetAdapter=new PropertySetGSONAdapter(propertyFormat);
  this.gson=new GsonBuilder().setPrettyPrinting().serializeNulls().registerTypeAdapter(PropertySet.class,propertySetAdapter).registerTypeAdapter(Result.class,resultGsonAdapter).create();
  String externalProviderName=this.getInitParameter(SERVLET_PARAMETER_CONSTRAINT_PROVIDER);
  if (externalProviderName != null) {
    String[] parts=externalProviderName.split("[, ]+");
    for (    String part : parts) {
      try {
        logger.log(Level.INFO,"Injecting constraints from provider {0}",part);
        Class providerClass=Class.forName(part);
        ResourceConstraintProvider provider=(ResourceConstraintProvider)providerClass.newInstance();
        constraintMap.putAll(provider.getConstraints());
      }
 catch (      Throwable t) {
        logger.log(Level.WARNING,"Unable to inject external resource constraints",t);
      }
    }
  }
}
