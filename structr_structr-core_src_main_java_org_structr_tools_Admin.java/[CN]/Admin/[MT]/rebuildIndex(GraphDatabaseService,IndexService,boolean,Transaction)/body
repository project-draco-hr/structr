{
  int nodeCounter=0;
  int propertyCounter=0;
  for (  Node n : Traversal.description().breadthFirst().relationships(RelType.HAS_CHILD,Direction.OUTGOING).traverse(db.getReferenceNode()).nodes()) {
    nodeCounter++;
    System.out.println(nodeCounter + ": Node " + n+ " found.");
    for (    String propertyKey : n.getPropertyKeys()) {
      propertyCounter++;
      if (!test) {
        ix.removeIndex(n,propertyKey);
        System.out.println(propertyCounter + ": Property " + propertyKey+ " removed from index.");
        ix.index(n,propertyKey,n.getProperty(propertyKey));
        System.out.println(propertyKey + " reindexed.");
      }
 else {
        System.out.println("Without test switch, property " + propertyKey + " would have been removed from index.");
        System.out.println("Without test switch, " + propertyKey + " would have been reindexed.");
      }
    }
    if (nodeCounter % 1000 == 0) {
      tx.success();
      tx.finish();
      tx=db.beginTx();
      System.out.println("##### Committed to database after " + nodeCounter + " nodes.");
    }
  }
  System.out.println("Processed " + propertyCounter + " properties of "+ nodeCounter+ " nodes ");
}
