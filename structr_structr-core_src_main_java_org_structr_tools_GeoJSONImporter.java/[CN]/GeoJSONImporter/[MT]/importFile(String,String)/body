{
  EditableLayerImpl layer=(EditableLayerImpl)spatialDatabase.getOrCreateLayer(layerName,WKBGeometryEncoder.class,EditableLayerImpl.class);
  long startTime=System.currentTimeMillis();
  File jsonFile=null;
  try {
    jsonFile=new File(dataset);
  }
 catch (  Exception e) {
    try {
      jsonFile=new File(dataset + ".json");
    }
 catch (    Exception e2) {
      throw new IllegalArgumentException("Failed to access the geoJSON file at either '" + dataset + "' or '"+ dataset+ ".json'",e);
    }
  }
  GeometryJSON gjson=new GeometryJSON();
  Reader reader=GeoJSONUtil.toReader(jsonFile);
  GeometryCollection geoCollection=gjson.readGeometryCollection(reader);
  Geometry g=gjson.read(reader);
  FeatureJSON fjson=new FeatureJSON();
  CoordinateReferenceSystem crs=fjson.readCRS(jsonFile);
  Integer geometryType=SpatialDatabaseService.convertJtsClassToGeometryType(g.getClass());
  Transaction tx=database.beginTx();
  try {
    if (crs != null) {
      layer.setCoordinateReferenceSystem(crs);
    }
    if (geometryType != null) {
      layer.setGeometryType(geometryType);
    }
    layer.add(g);
    tx.success();
  }
  finally {
    tx.finish();
  }
  long stopTime=System.currentTimeMillis();
  log("info | elapsed time in seconds: " + (1.0 * (stopTime - startTime) / 1000));
}
