{
  String packageName="";
  if (StringUtils.isNotBlank(pagesPackage)) {
    packageName=pagesPackage + ".";
  }
  String className="";
  String path=pagePath.substring(0,pagePath.lastIndexOf("."));
  Class excludePageClass=getExcludesPageClass(path);
  if (excludePageClass != null) {
    return excludePageClass;
  }
  if (path.indexOf("/") != -1) {
    StringTokenizer tokenizer=new StringTokenizer(path,"/");
    while (tokenizer.hasMoreTokens()) {
      String token=tokenizer.nextToken();
      if (tokenizer.hasMoreTokens()) {
        packageName=packageName + token + ".";
      }
 else {
        className=token;
      }
    }
  }
 else {
    className=path;
  }
  StringTokenizer tokenizer=new StringTokenizer(className,"_-");
  className="";
  while (tokenizer.hasMoreTokens()) {
    String token=tokenizer.nextToken();
    token=Character.toUpperCase(token.charAt(0)) + token.substring(1);
    className+=token;
  }
  className=packageName + className;
  Class pageClass=null;
  try {
    pageClass=ClickUtils.classForName(className);
    if (!Page.class.isAssignableFrom(pageClass)) {
      String msg="Automapped page class " + className + " is not a subclass of org.apache.click.Page";
      throw new RuntimeException(msg);
    }
  }
 catch (  ClassNotFoundException cnfe) {
    boolean classFound=false;
    if (!className.endsWith("Page")) {
      String classNameWithPage=className + "Page";
      try {
        pageClass=ClickUtils.classForName(classNameWithPage);
        if (!Page.class.isAssignableFrom(pageClass)) {
          String msg="Automapped page class " + classNameWithPage + " is not a subclass of org.apache.click.Page";
          throw new RuntimeException(msg);
        }
        classFound=true;
      }
 catch (      ClassNotFoundException cnfe2) {
      }
    }
    if (!classFound) {
      if (logService.isDebugEnabled()) {
        logService.debug(pagePath + " -> CLASS NOT FOUND");
      }
      if (logService.isTraceEnabled()) {
        logService.trace("class not found: " + className);
      }
    }
  }
  return pageClass;
}
