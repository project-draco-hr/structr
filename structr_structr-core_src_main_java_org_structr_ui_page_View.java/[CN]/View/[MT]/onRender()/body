{
  SecurityContext securityContext=CurrentRequest.getSecurityContext();
  AbstractNode nodeToRender=getNodeByIdOrPath(getNodeId());
  if (nodeToRender == null) {
    logger.log(Level.FINE,"Node {0} not found",getNodeId());
    getContext().getResponse().setStatus(HttpServletResponse.SC_NOT_FOUND);
    setForward("/not-found.htm");
  }
 else {
    if (!securityContext.isVisible(nodeToRender)) {
      logger.log(Level.FINE,"Hidden page requested ({0})",getNodeId());
      getContext().getResponse().setStatus(HttpServletResponse.SC_NOT_FOUND);
      setForward("/not-found.htm");
      return;
    }
    if (!securityContext.isAllowed(nodeToRender,Permission.Read)) {
      logger.log(Level.FINE,"Secure page requested ({0})",getNodeId());
      getContext().getResponse().setStatus(HttpServletResponse.SC_FORBIDDEN);
      setForward("/not-authorized.html");
      return;
    }
    String editUrl=null;
    if (editNodeId != null) {
      AbstractNode editNode=getNodeByIdOrPath(editNodeId);
      editUrl=getContext().getRequest().getContextPath().concat(getContext().getPagePath(getEditPageClass(editNode))).concat("?").concat(NODE_ID_KEY).concat("=").concat(editNodeId.toString()).concat("&").concat(RENDER_MODE_KEY).concat("=").concat(INLINE_MODE);
    }
    try {
      StructrOutputStream outputStream=new StructrOutputStream(getContext().getResponse());
      nodeToRender.renderNode(outputStream,nodeToRender,editUrl,editNodeId);
      getContext().getResponse().getOutputStream().flush();
    }
 catch (    Throwable t) {
      logger.log(Level.WARNING,"Exception while rendering to output stream: {0}",t);
    }
  }
}
