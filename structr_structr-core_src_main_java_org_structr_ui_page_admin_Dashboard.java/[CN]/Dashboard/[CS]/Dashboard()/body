{
  super();
  activitiesTable.addColumn(new Column(Activity.OWNER_KEY,"User"));
  activitiesTable.addColumn(new Column(Activity.NODE_ID_KEY));
  activitiesTable.addColumn(new Column(Activity.NAME_KEY));
  activitiesTable.addColumn(new Column(Activity.SESSION_ID_KEY));
  activitiesTable.addColumn(new Column(Activity.TYPE_KEY));
  Column startTimestampColumn=new Column(Activity.START_TIMESTAMP_KEY,"Start");
  startTimestampColumn.setFormat("{0,date,medium} {0,time,medium}");
  activitiesTable.addColumn(startTimestampColumn);
  Column endTimestampColumn=new Column(Activity.END_TIMESTAMP_KEY,"End");
  endTimestampColumn.setFormat("{0,date,medium} {0,time,medium}");
  activitiesTable.addColumn(endTimestampColumn);
  activitiesTable.addColumn(new Column(Activity.ACTIVITY_TEXT_KEY));
  activitiesTable.setSortedColumn(Activity.START_TIMESTAMP_KEY);
  activitiesTable.setSortable(true);
  activitiesTable.setSortedAscending(false);
  activitiesTable.setPageSize(15);
  activitiesTable.setHoverRows(true);
  activitiesTable.setShowBanner(true);
  activitiesTable.setClass(TABLE_CLASS);
  servicesTable.addColumn(new Column("Name"));
  servicesTable.addColumn(new Column("isRunning","Running"));
  servicesTable.setSortable(true);
  servicesTable.setClass(TABLE_CLASS);
  initValuesTable.addColumn(new Column("key","Parameter"));
  initValuesTable.addColumn(new Column("value","Value"));
  initValuesTable.setSortable(true);
  initValuesTable.setClass(TABLE_CLASS);
  runtimeValuesTable.addColumn(new Column("key","Parameter"));
  runtimeValuesTable.addColumn(new Column("value","Value"));
  runtimeValuesTable.setSortable(true);
  runtimeValuesTable.setClass(TABLE_CLASS);
  modulesTable.addColumn(new Column("toString","Name"));
  modulesTable.setSortable(true);
  modulesTable.setClass(TABLE_CLASS);
  Column iconCol=new Column("iconSrc","Icon");
  iconCol.setDecorator(new Decorator(){
    @Override public String render(    Object row,    Context context){
      NodeClassEntry nce=(NodeClassEntry)row;
      String iconSrc=contextPath + nce.getIconSrc();
      return "<img src=\"" + iconSrc + "\" alt=\""+ iconSrc+ "\" width=\"16\" height=\"16\">";
    }
  }
);
  registeredClassesTable.addColumn(iconCol);
  registeredClassesTable.addColumn(new Column("name","Name"));
  registeredClassesTable.addColumn(new Column("count","Count"));
  registeredClassesTable.setSortable(true);
  registeredClassesTable.setSortedColumn("name");
  registeredClassesTable.setPageSize(15);
  registeredClassesTable.setHoverRows(true);
  registeredClassesTable.setShowBanner(true);
  registeredClassesTable.setClass(TABLE_CLASS);
  allNodesTable.addColumn(new Column(AbstractNode.NODE_ID_KEY));
  allNodesTable.addColumn(new Column(AbstractNode.NAME_KEY));
  allNodesTable.addColumn(new Column(AbstractNode.TYPE_KEY));
  allNodesTable.addColumn(new Column(AbstractNode.POSITION_KEY));
  allNodesTable.addColumn(new Column(AbstractNode.PUBLIC_KEY));
  allNodesTable.addColumn(new Column(AbstractNode.OWNER_KEY));
  allNodesTable.addColumn(new Column(AbstractNode.CREATED_BY_KEY));
  allNodesTable.addColumn(new Column(AbstractNode.CREATED_DATE_KEY));
  allNodesTable.addColumn(new Column("allProperties"));
  allNodesTable.setSortable(true);
  allNodesTable.setPageSize(15);
  allNodesTable.setHoverRows(true);
  allNodesTable.setShowBanner(true);
  allNodesTable.setClass(TABLE_CLASS);
}
