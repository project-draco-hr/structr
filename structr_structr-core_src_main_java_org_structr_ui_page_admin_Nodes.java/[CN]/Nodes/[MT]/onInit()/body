{
  super.onInit();
  if (showTreeAllowed) {
    nodeTreePanel=new Panel("nodeTreePanel","/panel/node-tree-panel.htm");
  }
  if (createNodeAllowed) {
    Select nodeTypeField=new Select(AbstractNode.TYPE_KEY,"Select Node Type",false);
    nodeTypeField.add(new Option("","--- Select Node Type ---"));
    List<String> nodeTypes=new LinkedList<String>(((Map<String,Class>)Services.command(GetEntitiesCommand.class).execute()).keySet());
    Collections.sort(nodeTypes);
    for (    String className : nodeTypes) {
      Option o=new Option(className);
      nodeTypeField.add(o);
    }
    newNodeForm.add(nodeTypeField);
    newNodeForm.add(new TextField("name",true));
    newNodeForm.add(new LongField(AbstractNode.POSITION_KEY,false));
    newNodeForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
    newNodeForm.add(new TextField(TARGET_NODE_ID_KEY,true));
    newNodeForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
    newNodeForm.setListener(this,"onCreateNode");
    newNodeForm.add(new Submit("createNewNode"," Create new node ",this,"onCreateNode"));
    newNodePanel=new Panel("newNodePanel","/panel/new-node-panel.htm");
    copyNodeForm.add(new TextField(SOURCE_NODE_ID_KEY,true));
    copyNodeForm.add(new TextField(TARGET_NODE_ID_KEY,true));
    copyNodeForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
    copyNodeForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
    copyNodeForm.setListener(this,"onCopyNode");
    copyNodeForm.add(new Submit("copyNode"," Copy node ",this,"onCopyNode"));
    copyNodePanel=new Panel("copyNodePanel","/panel/copy-node-panel.htm");
    FileField uploadField1=new FileField("file1",false);
    FileField uploadField2=new FileField("file2",false);
    FileField uploadField3=new FileField("file3",false);
    FileField uploadField4=new FileField("file4",false);
    FileField uploadField5=new FileField("file5",false);
    FileField uploadField6=new FileField("file6",false);
    FileField uploadField7=new FileField("file7",false);
    FileField uploadField8=new FileField("file8",false);
    FileField uploadField9=new FileField("file9",false);
    FileField uploadField10=new FileField("file10",false);
    uploadForm.add(uploadField1);
    uploadForm.add(uploadField2);
    uploadForm.add(uploadField3);
    uploadForm.add(uploadField4);
    uploadForm.add(uploadField5);
    uploadForm.add(uploadField6);
    uploadForm.add(uploadField7);
    uploadForm.add(uploadField8);
    uploadForm.add(uploadField9);
    uploadForm.add(uploadField10);
    uploadForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
    uploadForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
    uploadForm.add(new Submit("createFileNode"," Upload file(s)",this,"onUpload"));
    uploadPanel=new Panel("uploadPanel","/panel/upload-panel.htm");
    extractNodeForm.add(new TextField(TARGET_NODE_ID_KEY,false));
    extractNodeForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
    extractNodeForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
    extractNodeForm.add(new Submit("extractNode"," Extract node ",this,"onExtractNode"));
    extractNodePanel=new Panel("extractNodePanel","/panel/extract-node-panel.htm");
  }
  if (deleteNodeAllowed) {
    deleteNodeForm.add(new Checkbox(RECURSIVE_KEY,false));
    deleteNodeForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
    deleteNodeForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
    deleteNodeForm.add(new Submit("deleteNode"," Delete node ",this,"onDeleteNode"));
    deleteNodePanel=new Panel("deleteNodePanel","/panel/delete-node-panel.htm");
    moveNodeForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
    moveNodeForm.add(new TextField(TARGET_NODE_ID_KEY,true));
    moveNodeForm.add(new TextField(PARENT_NODE_ID_KEY,""));
    moveNodeForm.add(new TextField(SOURCE_NODE_ID_KEY,""));
    moveNodeForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
    moveNodeForm.setListener(this,"onMoveNode");
    moveNodeForm.add(new Submit("moveNode"," Move node ",this,"onMoveNode"));
    moveNodePanel=new Panel("moveNodePanel","/panel/move-node-panel.htm");
  }
  if (addRelationshipAllowed) {
    newRelationshipForm.add(new TextField(SOURCE_NODE_ID_KEY,true));
    newRelationshipForm.add(new TextField(TARGET_NODE_ID_KEY,true));
    newRelationshipForm.add(new TextField(REL_TYPE_KEY,true));
    newRelationshipForm.add(new TextField(REL_POSITION_KEY,false));
    newRelationshipForm.add(new TextField(TARGET_SLOT_NAME_KEY,false));
    newRelationshipForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
    newRelationshipForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
    newRelationshipForm.setListener(this,"onCreateRelationship");
    newRelationshipForm.add(new Submit("createNewRelationship"," Create new relationship ",this,"onCreateRelationship"));
    newRelationshipPanel=new Panel("newRelationshipPanel","/panel/new-relationship-panel.htm");
  }
  FieldSet fieldSet=new FieldSet("property");
  fieldSet.add(new TextField(KEY_KEY)).setRequired(true);
  fieldSet.add(new TextField(VALUE_KEY)).setRequired(true);
  setPropertyForm.add(fieldSet);
  setPropertyForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
  setPropertyForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
  setPropertyForm.add(new Submit("setProperty"," Set property ",this,"onSetProperty"));
  propertiesTable=new FormTable("propertiesTable",form);
  propertiesTable.setClass(TABLE_CLASS);
  FieldColumn column=new FieldColumn(KEY_KEY,new TextField());
  column.getField().setRequired(true);
  propertiesTable.addColumn(column);
  column=new FieldColumn(VALUE_KEY,new TextField());
  column.getField().setRequired(true);
  propertiesTable.addColumn(column);
  deleteLink.setImageSrc("/images/table-delete.png");
  deleteLink.setTitle("Delete property");
  deleteLink.setParameter(NODE_ID_KEY,nodeId);
  deleteLink.setAttribute("onclick","return window.confirm('Do you really want to delete this property?');");
  Column actionColumn=new Column("Action");
  actionColumn.setTextAlign("center");
  AbstractLink[] links=new AbstractLink[]{deleteLink};
  actionColumn.setDecorator(new LinkDecorator(propertiesTable,links,KEY_KEY));
  actionColumn.setSortable(false);
  propertiesTable.addColumn(actionColumn);
  propertiesTable.getForm().add(new Submit("updateProperty","Update properties",this,"onUpdateProperties"));
  fieldSet=new FieldSet("properties");
  form.add(fieldSet);
  fieldSet.add(propertiesTable);
  propertiesTable.getForm().add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
  propertiesTable.getForm().add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
  IntegerField pageSizeField=new IntegerField("pageSize",true);
  pageSizeField.setInteger(DEFAULT_PAGESIZE);
  pageSizeField.setMinValue(DEFAULT_PAGER_MIN);
  pageSizeField.setMaxValue(DEFAULT_PAGER_MAX);
  pagerForm.add(pageSizeField);
  navigationForm.add(new HiddenField(NODE_ID_KEY,nodeId != null ? nodeId : ""));
  navigationForm.add(new HiddenField(RENDER_MODE_KEY,renderMode != null ? renderMode : ""));
  navigationForm.add(new Submit("back"," Back ",this,"onBack"));
  if (parentNodeId != null) {
    deleteNodeForm.add(new HiddenField(PARENT_NODE_ID_KEY,parentNodeId));
  }
  notificationPanel=new Panel("notificationPanel","/panel/notification-panel.htm");
}
