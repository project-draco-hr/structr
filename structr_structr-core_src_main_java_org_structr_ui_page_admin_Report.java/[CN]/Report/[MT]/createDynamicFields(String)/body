{
  Class<AbstractNode> c=(Class<AbstractNode>)Services.command(securityContext,GetEntityClassCommand.class).execute(resultType);
  if (c != null) {
    Set<String> fields=EntityContext.getPropertySet(c,PropertyView.All);
    AbstractNode o=new CustomTypeNode();
    try {
      o=(AbstractNode)c.newInstance();
    }
 catch (    Throwable t) {
      logger.log(Level.SEVERE,null,t);
    }
    if (fields != null) {
      for (      String fieldName : fields) {
        if (AbstractNode.Key.type.name().equals(fieldName)) {
          continue;
        }
        TextField text=new TextField(fieldName);
        text.bindRequestValue();
        propertyFields.add(text);
        Checkbox check=new Checkbox(checkBoxName(fieldName),"");
        check.bindRequestValue();
        propertyFields.add(check);
        String fieldValue=reportForm.getFieldValue(fieldName);
        if (fieldValue != null && !(fieldValue.isEmpty())) {
          searchAttributes.add(new TextualSearchAttribute(fieldName,fieldValue,SearchOperator.AND));
        }
        Field field=propertyFields.getField(checkBoxName(fieldName));
        Checkbox checkbox=null;
        if (field instanceof Checkbox) {
          checkbox=(Checkbox)field;
        }
        if (checkbox.isChecked()) {
          Column col;
          col=new Column(fieldName);
          reportTable.addColumn(col);
          columns.add(col);
        }
        reportForm.add(propertyFields);
      }
    }
  }
}
