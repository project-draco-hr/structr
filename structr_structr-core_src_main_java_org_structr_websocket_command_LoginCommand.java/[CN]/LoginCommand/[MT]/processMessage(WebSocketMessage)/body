{
  String username=webSocketData.getData().get("username");
  String password=webSocketData.getData().get("password");
  if (username != null && password != null) {
    List<SearchAttribute> attrs=new LinkedList<SearchAttribute>();
    attrs.add(Search.andExactProperty(AbstractNode.Key.name.name(),username));
    attrs.add(Search.andExactType("User"));
    List<AbstractNode> results=(List<AbstractNode>)Services.command(SecurityContext.getSuperUserInstance(),SearchNodeCommand.class).execute(null,false,false,attrs);
    if (!results.isEmpty()) {
      int resultCount=results.size();
      if (resultCount == 1) {
        User user=(User)results.get(0);
        if (DigestUtils.sha512Hex(password).equals(user.getProperty(User.Key.password))) {
          String token=StructrWebSocket.secureRandomString();
          user.setProperty(User.Key.sessionId,token);
          webSocketData.getData().clear();
          webSocketData.setToken(token);
          this.getWebSocket().setAuthenticated(token);
          this.getWebSocket().send(webSocketData,false);
        }
      }
    }
  }
  return false;
}
