{
  try {
    AbstractNode node;
    try {
      createNodeCommand.execute();
      fail("Should have raised an org.neo4j.graphdb.NotInTransactionException");
    }
 catch (    org.neo4j.graphdb.NotInTransactionException e) {
    }
    final Map<String,Object> props=new HashMap<String,Object>();
    props.put(AbstractNode.Key.type.name(),"UnknownTestType????L??");
    try {
      createNodeCommand.execute();
      fail("Should have raised an org.neo4j.graphdb.NotInTransactionException");
    }
 catch (    org.neo4j.graphdb.NotInTransactionException e) {
    }
    node=(AbstractNode)transactionCommand.execute(new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        return (AbstractNode)createNodeCommand.execute(props);
      }
    }
);
    assertTrue(node != null);
    assertTrue(node instanceof GenericNode);
  }
 catch (  FrameworkException ex) {
    Logger.getLogger(GraphObjectOperationsTest.class.getName()).log(Level.SEVERE,null,ex);
  }
}
