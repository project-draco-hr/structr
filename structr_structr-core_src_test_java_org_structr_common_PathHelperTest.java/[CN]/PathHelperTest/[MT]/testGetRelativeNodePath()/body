{
  System.out.println("getNewRelativePath");
  String basePath="/a/b";
  String newPath="/a/b/c";
  String expResult="c";
  String result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/b/c";
  newPath="/a/b/c";
  expResult=".";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/b/c";
  newPath="/a/b";
  expResult="..";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/b/c/";
  newPath="/a/b";
  expResult="..";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/b/c";
  newPath="/a/b/x";
  expResult="../x";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/b/c";
  newPath="/a";
  expResult="../..";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a";
  newPath="/a/b/c";
  expResult="b/c";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/";
  newPath="/a/b/c";
  expResult="a/b/c";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/";
  newPath="/";
  expResult=".";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/";
  newPath="";
  expResult="";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/x/b";
  newPath="/a/b/x";
  expResult="../../b/x";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/../b";
  newPath="/a/b";
  expResult="../a/b";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
  basePath="/a/b/../../x";
  newPath="/a/b";
  expResult="../a/b";
  result=PathHelper.getRelativeNodePath(basePath,newPath);
  assertEquals(expResult,result);
}
