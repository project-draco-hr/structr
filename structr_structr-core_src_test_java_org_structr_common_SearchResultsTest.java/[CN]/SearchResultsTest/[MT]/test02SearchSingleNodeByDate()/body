{
  try {
    PropertySet props=new PropertySet();
    PropertyKey key=TestOne.aDate;
    Date date=new Date();
    String type=TestOne.class.getSimpleName();
    props.put(key,date);
    AbstractNode node=createTestNode(type,props);
    boolean includeDeletedAndHidden=true;
    boolean publicOnly=false;
    List<SearchAttribute> searchAttributes=new LinkedList<SearchAttribute>();
    searchAttributes.add(new TextualSearchAttribute(AbstractNode.type,type,SearchOperator.AND));
    searchAttributes.add(new FilterSearchAttribute(key,date,SearchOperator.AND));
    Result result=searchNodeCommand.execute(includeDeletedAndHidden,publicOnly,searchAttributes);
    assertEquals(1,result.size());
    assertTrue(result.get(0).equals(node));
  }
 catch (  FrameworkException ex) {
    logger.log(Level.SEVERE,ex.toString());
    fail("Unexpected exception");
  }
}
