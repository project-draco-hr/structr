{
  String currentUrl=(String)StructrContext.getAttribute(StructrContext.CURRENT_NODE_PATH);
  String myNodeUrl=getNodePath(user);
  while (currentUrl.endsWith("/")) {
    currentUrl=currentUrl.substring(0,currentUrl.length() - 1);
  }
  if (myNodeUrl.equals(currentUrl)) {
    List<InteractiveNode> dataSources=getDataSources();
    Map<String,Slot> slots=getSlots();
    boolean executionSuccessful=false;
    boolean slotsSuccessful=true;
    if (slots != null) {
      for (      InteractiveNode source : dataSources) {
        String name=source.getMappedName();
        if (slots.containsKey(name)) {
          Slot slot=slots.get(name);
          if (slot.getParameterType().equals(source.getParameterType())) {
            Object value=source.getValue();
            boolean accepted=slot.accepts(value);
            if (accepted) {
              values.put(name,value);
            }
            boolean errorCondition=(slot.isMandatory() && accepted);
            source.setErrorCondition(errorCondition);
            logger.log(Level.INFO,"sourceName: {0}, mappedName: {1}, value: {2}, mandatory: {3}, errorCondition: {4}",new Object[]{source.getName(),source.getMappedName(),value,slot.isMandatory(),errorCondition});
            slotsSuccessful&=errorCondition;
          }
 else {
            logger.log(Level.INFO,"Parameter type mismatch: expected {0}, found {1}",new Object[]{slot.getParameterType(),source.getParameterType()});
          }
        }
 else {
          logger.log(Level.INFO,"Slot not found {0}",name);
        }
      }
    }
    if (slotsSuccessful) {
      executionSuccessful=execute(out,startNode,editUrl,editNodeId,user);
    }
    logger.log(Level.FINE,"slotsSuccessful: {0}, executionSuccessful: {1}",new Object[]{slotsSuccessful,executionSuccessful});
    if (executionSuccessful) {
      AbstractNode successTarget=getSuccessTarget();
      if (successTarget != null) {
        StructrContext.redirect(user,successTarget);
      }
    }
 else {
      AbstractNode failureTarget=getFailureTarget();
      if (failureTarget != null) {
        StructrContext.redirect(user,failureTarget);
      }
    }
  }
}
