{
  String usernameFromSession=CurrentSession.getGlobalUsername();
  Boolean alreadyLoggedIn=usernameFromSession != null;
  if (alreadyLoggedIn) {
    return (true);
  }
  Boolean sessionBlocked=getSessionBlockedValue().get();
  if (Boolean.TRUE.equals(sessionBlocked)) {
    getErrorMessageValue().set("Too many login attempts, session is blocked for login");
    return (false);
  }
  String username=(String)getValue(Key.username.name());
  String password=(String)getValue(Key.password.name());
  String antiRobot=(String)getValue(Key.antiRobot.name());
  if (StringUtils.isNotEmpty(antiRobot)) {
    return (false);
  }
  if (StringUtils.isEmpty(username)) {
    setErrorValue(Key.username.name(),"You must enter a username");
    countLoginFailure(getMaxErrors(),getDelayThreshold(),getDelayTime());
    return (false);
  }
  if (StringUtils.isEmpty(password)) {
    setErrorValue(Key.password.name(),"You must enter a password");
    countLoginFailure(getMaxErrors(),getDelayThreshold(),getDelayTime());
    return (false);
  }
  User loginUser=(User)Services.command(FindUserCommand.class).execute(username);
  getErrorMessageValue().set(LOGIN_FAILURE_TEXT);
  if (loginUser == null) {
    logger.log(Level.INFO,"No user found for name {0}",loginUser);
    countLoginFailure(getMaxErrors(),getDelayThreshold(),getDelayTime());
    return (false);
  }
  if (loginUser.isBlocked()) {
    logger.log(Level.INFO,"User {0} is blocked",loginUser);
    countLoginFailure(getMaxErrors(),getDelayThreshold(),getDelayTime());
    return (false);
  }
  String encryptedPasswordValue=DigestUtils.sha512Hex(password);
  if (!encryptedPasswordValue.equals(loginUser.getEncryptedPassword())) {
    logger.log(Level.INFO,"Wrong password for user {0}",loginUser);
    countLoginFailure(getMaxErrors(),getDelayThreshold(),getDelayTime());
    return (false);
  }
  CurrentSession.setGlobalUsername(loginUser.getName());
  CurrentSession.setUser(loginUser);
  long sessionId=SessionMonitor.registerUserSession(CurrentSession.getSession());
  SessionMonitor.logActivity(sessionId,"Login");
  CurrentSession.setAttribute(SessionMonitor.SESSION_ID,sessionId);
  getSessionBlockedValue().set(false);
  getLoginAttemptsValue().set(0);
  getErrorMessageValue().set(null);
  getOkMessageValue().set("Login successful.");
  return (true);
}
