{
  if (out.getSecurityContext().getUser() != null) {
    return (true);
  }
  Boolean sessionBlocked=getSessionBlockedValue().get(out.getRequest());
  if (Boolean.TRUE.equals(sessionBlocked)) {
    getErrorMessageValue().set(out.getRequest(),"Too many login attempts, session is blocked for login");
    return (false);
  }
  String username=(String)getValue(out.getRequest(),USERNAME_FIELD_NAME);
  String password=(String)getValue(out.getRequest(),PASSWORD_FIELD_NAME);
  String antiRobot=(String)getValue(out.getRequest(),ANTI_ROBOT_FIELD_NAME);
  if (StringUtils.isNotEmpty(antiRobot)) {
    return (false);
  }
  if (StringUtils.isEmpty(username)) {
    setErrorValue(out.getRequest(),USERNAME_FIELD_NAME,"You must enter a username");
    return (false);
  }
  if (StringUtils.isEmpty(password)) {
    setErrorValue(out.getRequest(),PASSWORD_FIELD_NAME,"You must enter a password");
    return (false);
  }
  try {
    out.getSecurityContext().doLogin(username,password);
  }
 catch (  AuthenticationException aex) {
    getErrorMessageValue().set(out.getRequest(),LOGIN_FAILURE_TEXT);
    countLoginFailure(out.getRequest(),out.getRequest().getSession(),getMaxErrors(),getDelayThreshold(),getDelayTime());
    return false;
  }
  getSessionBlockedValue().set(out.getRequest(),false);
  getLoginAttemptsValue().set(out.getRequest(),0);
  getErrorMessageValue().set(out.getRequest(),null);
  getOkMessageValue().set(out.getRequest(),"Login successful.");
  return (true);
}
