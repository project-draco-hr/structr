{
  AbstractNode ret=(AbstractNode)Services.command(securityContext,TransactionCommand.class).execute(new StructrTransaction(){
    @Override public Object execute() throws Throwable {
      List<NodeAttribute> attributes=new LinkedList<NodeAttribute>();
      attributes.add(new NodeAttribute(AbstractNode.Key.type.name(),type));
      AbstractNode newNode=(AbstractNode)Services.command(securityContext,CreateNodeCommand.class).execute(attributes);
      if (newNode != null) {
        if (parentNode != null) {
          Command createRelationship=Services.command(securityContext,CreateRelationshipCommand.class);
          createRelationship.execute(parentNode,newNode,RelType.HAS_CHILD);
        }
        return (newNode);
      }
      return (null);
    }
  }
);
  return (ret);
}
