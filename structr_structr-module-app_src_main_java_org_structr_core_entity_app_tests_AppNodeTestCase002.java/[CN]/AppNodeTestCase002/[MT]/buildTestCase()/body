{
  AbstractNode templates=createNode(this,"Folder","Templates");
  Template blogTemplate=(Template)createNode(templates,"Template","BlogTemplate");
  blogTemplate.setContent(getBlogTemplateContent());
  Template pageTemplate=(Template)createNode(templates,"Template","PageTemplate");
  pageTemplate.setContent(getPageTemplateContent());
  Template textFieldTemplate=(Template)createNode(templates,"Template","TextFieldTemplate");
  textFieldTemplate.setContent(getTextFieldTemplateContent());
  Template submitButtonTemplate=(Template)createNode(templates,"Template","SubmitTemplate");
  submitButtonTemplate.setContent(getSubmitTemplateContent());
  Template textAreaTemplate=(Template)createNode(templates,"Template","TextAreaTemplate");
  textAreaTemplate.setContent(getTextAreaTemplateContent());
  Template blogAdminTemplate=(Template)createNode(templates,"Template","BlogAdminTemplate");
  blogAdminTemplate.setContent(getBlogAdminTemplateContent());
  Template addCommentTemplate=(Template)createNode(templates,"Template","AddCommentTemplate");
  addCommentTemplate.setContent(getAddCommentTemplateContent());
  Template commentTemplate=(Template)createNode(templates,"Template","CommentTemplate");
  commentTemplate.setContent(getCommentTemplateContent());
  AbstractNode blogPage=createNode(this,"HomePage","blog",pageTemplate);
  HtmlSource blogPageContent=(HtmlSource)createNode(blogPage,"HtmlSource","content");
  blogPageContent.setContent("%{list}");
  AppList blogPageList=(AppList)createNode(blogPageContent,"AppList","list",blogTemplate);
  AppNodeView blogPageNodeView=(AppNodeView)createNode(blogPageList,"AppNodeView","view",commentTemplate);
  blogPageNodeView.setProperty("followRelationship","HAS_CHILD");
  AbstractNode adminPage=createNode(this,"Page","admin",pageTemplate);
  AppList adminPageList=(AppList)createNode(adminPage,"AppList","list",blogAdminTemplate);
  AbstractNode editorPage=createNode(this,"Page","editor",pageTemplate);
  AbstractNode editorForm=createNode(editorPage,"AppForm","form");
  AbstractNode editorFormLoader=createNode(editorForm,"AppNodeLoader","loader");
  editorFormLoader.setProperty("idSource","id");
  AbstractNode editorContentField=createNode(editorForm,"TextField","content",textAreaTemplate);
  createNode(editorForm,"SubmitButton","submit",submitButtonTemplate);
  AbstractNode editorFormActions=createNode(editorForm,"AppActionContainer","actions");
  AbstractNode editorFormCreator=createNode(editorFormActions,"AppNodeCreator","save");
  editorFormCreator.setProperty("targetType","DataNode");
  AbstractNode addCommentPage=createNode(this,"Page","addComment",pageTemplate);
  HtmlSource addCommentContentContainer=(HtmlSource)createNode(addCommentPage,"HtmlSource","content");
  addCommentContentContainer.setContent("%{view}\n%{form}");
  AbstractNode addCommentNodeView=createNode(addCommentContentContainer,"AppNodeView","view",addCommentTemplate);
  addCommentNodeView.setProperty("idSource","id");
  AbstractNode addCommentChildView=createNode(addCommentNodeView,"AppNodeView","childView",commentTemplate);
  addCommentChildView.setProperty("followRelationship","HAS_CHILD");
  AbstractNode addCommentForm=createNode(addCommentContentContainer,"AppForm","form");
  AbstractNode addCommentFormLoader=createNode(addCommentForm,"AppNodeLoader","loader");
  addCommentFormLoader.setProperty("idSource","id");
  AbstractNode addCommentCommentField=createNode(addCommentForm,"TextField","comment",textFieldTemplate);
  createNode(addCommentForm,"SubmitButton","submit",submitButtonTemplate);
  AbstractNode addCommentActions=createNode(addCommentForm,"AppActionContainer","actions");
  AbstractNode addCommentCreator=createNode(addCommentActions,"AppNodeCreator","save");
  addCommentCreator.setProperty("targetType","DataNode");
  AbstractNode addCommentLinker=createNode(addCommentActions,"AppRelationshipCreator","link");
  addCommentLinker.setProperty("targetRelType","HAS_CHILD");
  AbstractNode blogEntries=createNode(this,"Folder","BlogEntries");
  AbstractNode system=createNode(this,"Folder","System");
  AbstractNode timestamp=createNode(system,"AppTimestamp","timestamp");
  linkNodes(blogPageList,blogEntries,RelType.DATA);
  linkNodes(adminPageList,blogEntries,RelType.DATA);
  linkNodes(editorFormLoader,editorContentField,RelType.DATA);
  linkNodes(editorFormLoader,editorFormCreator,RelType.DATA);
  linkNodes(editorContentField,editorFormCreator,RelType.DATA);
  linkNodes(timestamp,editorFormCreator,RelType.DATA);
  linkNodes(editorFormCreator,blogEntries,RelType.CREATE_DESTINATION);
  linkNodes(editorFormActions,editorPage,RelType.ERROR_DESTINATION);
  linkNodes(editorFormActions,blogPage,RelType.SUCCESS_DESTINATION);
  linkNodes(addCommentNodeView,blogEntries,RelType.DATA);
  linkNodes(addCommentFormLoader,addCommentCommentField,RelType.DATA);
  linkNodes(addCommentCommentField,addCommentCreator,RelType.DATA);
  linkNodes(addCommentFormLoader,addCommentLinker,RelType.DATA).setProperty("targetSlotName","startNode");
  linkNodes(addCommentCreator,addCommentLinker,RelType.DATA).setProperty("targetSlotName","endNode");
  linkNodes(addCommentActions,addCommentPage,RelType.ERROR_DESTINATION);
  linkNodes(addCommentActions,blogPage,RelType.SUCCESS_DESTINATION);
}
