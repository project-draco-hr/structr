{
  AbstractNode system=createNode(this,"Folder","sys");
  AbstractNode charts=createNode(this,"Folder","charts");
  AbstractNode pageTemplate=createNode(system,"Template","template");
  pageTemplate.setProperty("content",createPageTemplateContent());
  AbstractNode dataType=createNode(system,"NodeType","DataType");
  dataType.setProperty("_location","java.lang.String");
  dataType.setProperty("_car","java.lang.String");
  AbstractNode barType=createNode(system,"NodeType","BarType");
  barType.setProperty("_valueProperty","java.lang.String");
  barType.setProperty("_valueAxisLabel","java.lang.String");
  barType.setProperty("_categoryProperty","java.lang.String");
  barType.setProperty("_categoryAxisLabel","java.lang.String");
  barType.setProperty("_recursive","java.lang.Boolean");
  barType.setProperty("_orientation","java.lang.String");
  barType.setProperty("_width","java.lang.Integer");
  barType.setProperty("_height","java.lang.Integer");
  AbstractNode pieType=createNode(system,"NodeType","PieType");
  pieType.setProperty("_valueProperty","java.lang.String");
  pieType.setProperty("_recursive","java.lang.Boolean");
  pieType.setProperty("_width","java.lang.Integer");
  pieType.setProperty("_height","java.lang.Integer");
  AbstractNode data=createNode(this,"Folder","data");
  for (int i=0; i < 50; i++) {
    String name="test" + (i < 10 ? "0" : "") + i;
    AbstractNode node=createNode(data,"DataNode",name);
    linkNodes(node,dataType,RelType.CREATE_DESTINATION.TYPE);
    double rand1=Math.random();
    double rand2=Math.random();
    if (rand1 <= 0.333) {
      node.setProperty("location","Dortmund");
    }
 else     if (rand1 > 0.666) {
      node.setProperty("location","Berlin");
    }
 else {
      node.setProperty("location","Frankfurt");
    }
    if (rand2 <= 0.333) {
      node.setProperty("car","Golf");
    }
 else     if (rand2 > 0.666) {
      node.setProperty("car","Volvo");
    }
 else {
      node.setProperty("car","Audi");
    }
  }
  AbstractNode page=createNode(this,"Page","index");
  linkNodes(page,pageTemplate,RelType.USE_TEMPLATE);
  AbstractNode htmlSource=createNode(page,"HtmlSource","content");
  htmlSource.setProperty("content",createHtmlSourceContent());
  AbstractNode pieChart=createNode(charts,"PieChart","pieChart");
  pieChart.setProperty(Chart.Key.width,400);
  pieChart.setProperty(Chart.Key.height,400);
  pieChart.setProperty(AbstractPieChart.Key.recursive,true);
  pieChart.setProperty(AbstractPieChart.Key.valueProperty,"location");
  AbstractNode barChart=createNode(charts,"BarChart","barChart");
  barChart.setProperty(Chart.Key.width,600);
  barChart.setProperty(Chart.Key.height,400);
  barChart.setProperty(CategoryChart.Key.recursive,true);
  barChart.setProperty(CategoryChart.Key.valueProperty,"location");
  barChart.setProperty(CategoryChart.Key.categoryProperty,"car");
  barChart.setProperty(CategoryChart.Key.orientation,"vertical");
  AbstractNode areaChart=createNode(charts,"AreaChart","areaChart");
  areaChart.setProperty(Chart.Key.width,600);
  areaChart.setProperty(Chart.Key.height,400);
  areaChart.setProperty(CategoryChart.Key.recursive,true);
  areaChart.setProperty(CategoryChart.Key.valueProperty,"location");
  areaChart.setProperty(CategoryChart.Key.categoryProperty,"car");
  areaChart.setProperty(CategoryChart.Key.orientation,"vertical");
  AbstractNode stackedAreaChart=createNode(charts,"StackedAreaChart","stackedAreaChart");
  stackedAreaChart.setProperty(Chart.Key.width,600);
  stackedAreaChart.setProperty(Chart.Key.height,400);
  stackedAreaChart.setProperty(CategoryChart.Key.recursive,true);
  stackedAreaChart.setProperty(CategoryChart.Key.valueProperty,"location");
  stackedAreaChart.setProperty(CategoryChart.Key.categoryProperty,"car");
  stackedAreaChart.setProperty(CategoryChart.Key.orientation,"vertical");
  AbstractNode lineChart=createNode(charts,"LineChart","lineChart");
  lineChart.setProperty(Chart.Key.width,600);
  lineChart.setProperty(Chart.Key.height,400);
  lineChart.setProperty(CategoryChart.Key.recursive,true);
  lineChart.setProperty(CategoryChart.Key.valueProperty,"location");
  lineChart.setProperty(CategoryChart.Key.categoryProperty,"car");
  lineChart.setProperty(CategoryChart.Key.orientation,"vertical");
  linkNodes(pieChart,data,RelType.DATA);
  linkNodes(pieChart,pieType,RelType.TYPE);
  linkNodes(barChart,data,RelType.DATA);
  linkNodes(barChart,barType,RelType.TYPE);
  linkNodes(areaChart,data,RelType.DATA);
  linkNodes(areaChart,barType,RelType.TYPE);
  linkNodes(stackedAreaChart,data,RelType.DATA);
  linkNodes(stackedAreaChart,barType,RelType.TYPE);
  linkNodes(lineChart,data,RelType.DATA);
  linkNodes(lineChart,barType,RelType.TYPE);
  this.setProperty("type","Folder");
}
