{
  DefaultCategoryDataset dataSet=new DefaultCategoryDataset();
  String categoryAxisLabel=currentNode.getCategroyAxisLabel();
  String valueAxisLabel=currentNode.getValueAxisLabel();
  String categoryPropertyName=currentNode.getStringProperty(CategoryChart.Key.categoryProperty);
  String valuePropertyName=currentNode.getStringProperty(CategoryChart.Key.valueProperty);
  boolean recursive=currentNode.getRecursive();
  int width=currentNode.getWidth();
  int height=currentNode.getHeight();
  PlotOrientation orientation=PlotOrientation.HORIZONTAL;
  if (currentNode.getOrientation() != null) {
    String orientationFromNode=currentNode.getOrientation();
    if ("vertical".equals(orientationFromNode))     orientation=PlotOrientation.VERTICAL;
    if ("horizontal".equals(orientationFromNode))     orientation=PlotOrientation.HORIZONTAL;
  }
  for (  StructrRelationship rel : currentNode.getOutgoingDataRelationships()) {
    AbstractNode endNode=rel.getEndNode();
    for (    AbstractNode child : endNode.getDirectChildNodes()) {
      collectData(categoryPropertyName,valuePropertyName,child,dataSet,recursive);
    }
  }
  CategoryAxis domainAxis=new CategoryAxis(categoryAxisLabel);
  currentNode.configureCategoryAxis(domainAxis);
  ValueAxis valueAxis=new NumberAxis(valueAxisLabel);
  currentNode.configureValueAxis(valueAxis);
  CategoryItemRenderer renderer=currentNode.getCategoryItemRenderer();
  CategoryPlot plot=new CategoryPlot(dataSet,domainAxis,valueAxis,renderer);
  plot.setBackgroundPaint(Color.WHITE);
  plot.setOrientation(orientation);
  currentNode.configurePlot(plot);
  JFreeChart chart=new JFreeChart(plot);
  chart.setBorderVisible(false);
  chart.setBackgroundPaint(Color.WHITE);
  currentNode.configureChart(chart);
  writeImage(out,chart.createBufferedImage(width,height));
}
