{
  TextStyle2D textStyle=(TextStyle2D)styleFactory.createStyle(feature,symbolizer,scaleRange);
  LabelCacheItem item=new LabelCacheItem(layerId,textStyle,shape,label);
  item.setPriority(priorityValue);
  item.setSpaceAround(getIntOption(symbolizer,SPACE_AROUND_KEY,DEFAULT_SPACE_AROUND));
  item.setMaxDisplacement(getIntOption(symbolizer,MAX_DISPLACEMENT_KEY,DEFAULT_MAX_DISPLACEMENT));
  item.setMinGroupDistance(getIntOption(symbolizer,MIN_GROUP_DISTANCE_KEY,DEFAULT_MIN_GROUP_DISTANCE));
  item.setRepeat(getIntOption(symbolizer,LABEL_REPEAT_KEY,DEFAULT_LABEL_REPEAT));
  item.setLabelAllGroup(getBooleanOption(symbolizer,LABEL_ALL_GROUP_KEY,DEFAULT_LABEL_ALL_GROUP));
  item.setRemoveGroupOverlaps(getBooleanOption(symbolizer,"removeOverlaps",DEFAULT_REMOVE_OVERLAPS));
  item.setAllowOverruns(getBooleanOption(symbolizer,ALLOW_OVERRUNS_KEY,DEFAULT_ALLOW_OVERRUNS));
  item.setFollowLineEnabled(getBooleanOption(symbolizer,FOLLOW_LINE_KEY,DEFAULT_FOLLOW_LINE));
  double maxAngleDelta=getDoubleOption(symbolizer,MAX_ANGLE_DELTA_KEY,DEFAULT_MAX_ANGLE_DELTA);
  item.setMaxAngleDelta(Math.toRadians(maxAngleDelta));
  item.setAutoWrap(getIntOption(symbolizer,AUTO_WRAP_KEY,DEFAULT_AUTO_WRAP));
  item.setForceLeftToRightEnabled(getBooleanOption(symbolizer,FORCE_LEFT_TO_RIGHT_KEY,DEFAULT_FORCE_LEFT_TO_RIGHT));
  item.setConflictResolutionEnabled(getBooleanOption(symbolizer,CONFLICT_RESOLUTION_KEY,DEFAULT_CONFLICT_RESOLUTION));
  item.setGoodnessOfFit(getDoubleOption(symbolizer,GOODNESS_OF_FIT_KEY,DEFAULT_GOODNESS_OF_FIT));
  item.setPolygonAlign((PolygonAlignOptions)getEnumOption(symbolizer,POLYGONALIGN_KEY,DEFAULT_POLYGONALIGN));
  item.setGraphicsResize(getGraphicResize(symbolizer));
  item.setGraphicMargin(getGraphicMargin(symbolizer));
  return item;
}
