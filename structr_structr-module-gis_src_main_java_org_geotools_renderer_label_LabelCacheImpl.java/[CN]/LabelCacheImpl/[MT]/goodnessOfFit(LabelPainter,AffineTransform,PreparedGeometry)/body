{
  if (representativeGeom.getGeometry() instanceof Point) {
    return 1.0;
  }
  if (representativeGeom.getGeometry() instanceof LineString) {
    return 1.0;
  }
  if (representativeGeom.getGeometry() instanceof Polygon) {
    Rectangle2D glyphBounds=painter.getFullLabelBounds();
    try {
      int count=0;
      int n=10;
      Coordinate c=new Coordinate();
      Point pp=gf.createPoint(c);
      double[] gp=new double[2];
      double[] tp=new double[2];
      for (int i=1; i < (painter.getLineCount() + 1); i++) {
        gp[1]=glyphBounds.getY() + ((double)glyphBounds.getHeight()) * (((double)i) / (painter.getLineCount() + 1));
        for (int j=1; j < (n + 1); j++) {
          gp[0]=glyphBounds.getX() + ((double)glyphBounds.getWidth()) * (((double)j) / (n + 1));
          transform.transform(gp,0,tp,0,1);
          c.x=tp[0];
          c.y=tp[1];
          pp.geometryChanged();
          if (representativeGeom.contains(pp)) {
            count++;
          }
        }
      }
      return ((double)count) / (n * painter.getLineCount());
    }
 catch (    Exception e) {
      Geometry g=representativeGeom.getGeometry();
      g.geometryChanged();
      Envelope ePoly=g.getEnvelopeInternal();
      Envelope eglyph=toEnvelope(transform.createTransformedShape(glyphBounds).getBounds2D());
      Envelope inter=intersection(ePoly,eglyph);
      if (inter != null) {
        return (inter.getWidth() * inter.getHeight()) / (eglyph.getWidth() * eglyph.getHeight());
      }
 else {
        return 0.0;
      }
    }
  }
  return 0.0;
}
