{
  final Object grid=gridPropertyName.evaluate(content);
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.fine(new StringBuffer("rendering Raster for feature ").append(content.toString()).append(" - ").append(grid).toString());
  }
  GridCoverage2D coverage=null;
  try {
    final GridCoverageRenderer gcr=new GridCoverageRenderer(destinationCRS,originalMapExtent,screenSize,worldToScreen,java2dHints);
    if (grid instanceof GridCoverage) {
      gcr.paint(graphics,(GridCoverage2D)grid,symbolizer);
    }
 else     if (grid instanceof AbstractGridCoverage2DReader) {
      final Parameter<GridGeometry2D> readGG=new Parameter<GridGeometry2D>(AbstractGridFormat.READ_GRIDGEOMETRY2D);
      readGG.setValue(new GridGeometry2D(new GridEnvelope2D(screenSize),mapExtent));
      final AbstractGridCoverage2DReader reader=(AbstractGridCoverage2DReader)grid;
      final Object params=paramsPropertyName.evaluate(content);
      if (params != null) {
        GeneralParameterValue[] readParams=(GeneralParameterValue[])params;
        final int length=readParams.length;
        if (length > 0) {
          final String name=AbstractGridFormat.READ_GRIDGEOMETRY2D.getName().toString();
          int i=0;
          for (; i < length; i++) {
            if (readParams[i].getDescriptor().getName().toString().equalsIgnoreCase(name)) {
              break;
            }
          }
          if (i < length) {
            ((Parameter)readParams[i]).setValue(readGG);
            coverage=(GridCoverage2D)reader.read(readParams);
          }
 else {
            GeneralParameterValue[] readParams2=new GeneralParameterValue[length + 1];
            System.arraycopy(readParams,0,readParams2,0,length);
            readParams2[length]=readGG;
            coverage=(GridCoverage2D)reader.read(readParams2);
          }
        }
 else {
          coverage=(GridCoverage2D)reader.read(new GeneralParameterValue[]{readGG});
        }
      }
 else {
        coverage=(GridCoverage2D)reader.read(new GeneralParameterValue[]{readGG});
      }
      try {
        if (coverage != null) {
          gcr.paint(graphics,coverage,symbolizer);
        }
      }
  finally {
        if (coverage != null) {
          coverage.dispose(true);
        }
      }
    }
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine("Raster rendered");
    }
  }
 catch (  FactoryException e) {
    LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    fireErrorEvent(e);
  }
catch (  TransformException e) {
    LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    fireErrorEvent(e);
  }
catch (  NoninvertibleTransformException e) {
    LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    fireErrorEvent(e);
  }
catch (  IllegalArgumentException e) {
    LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    fireErrorEvent(e);
  }
catch (  IOException e) {
    LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    fireErrorEvent(e);
  }
}
