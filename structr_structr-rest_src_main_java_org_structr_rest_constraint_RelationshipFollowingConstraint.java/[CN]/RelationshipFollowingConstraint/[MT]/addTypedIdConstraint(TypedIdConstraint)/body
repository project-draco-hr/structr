{
  logger.log(Level.FINE,"Adding id {0} to id set",typedIdConstraint.getIdConstraint().getUriPart());
  IdConstraint idConstraint=typedIdConstraint.getIdConstraint();
  if (idConstraint instanceof UuidConstraint) {
    if (!idSet.add(((UuidConstraint)idConstraint).getUriPart())) {
      throw new IllegalPathException();
    }
  }
 else {
    if (!idSet.add(idConstraint.getId())) {
      throw new IllegalPathException();
    }
  }
  uriParts.add(typedIdConstraint.getUriPart());
  String type1=lastConstraint.getTypeConstraint().getType();
  String type2=typedIdConstraint.getTypeConstraint().getType();
  String typeOrProperty=typedIdConstraint.getTypeConstraint().getRawType();
  DirectedRelationship rel=EntityContext.getRelation(type1,typeOrProperty);
  if (rel == null) {
    rel=EntityContext.getRelation(type1,type2);
  }
  if (rel != null) {
    if (!visitedRelationships.contains(rel)) {
      traversalDescription=traversalDescription.relationships(rel.getRelType(),rel.getDirection());
      visitedRelationships.add(rel);
    }
  }
 else {
    logger.log(Level.INFO,"No relationship defined between {0} and {1}, illegal path",new Object[]{type1,typeOrProperty});
    throw new IllegalPathException();
  }
  lastConstraint=typedIdConstraint;
}
