{
  final Iterable<? extends GraphObject> results=doGet();
  if (results != null) {
    StructrTransaction transaction=new StructrTransaction(){
      @Override public Object execute() throws Throwable {
        ErrorBuffer errorBuffer=new ErrorBuffer();
        boolean error=false;
        for (        GraphObject obj : results) {
          for (          Entry<String,Object> attr : propertySet.entrySet()) {
            try {
              obj.setProperty(attr.getKey(),attr.getValue());
            }
 catch (            Throwable t) {
              errorBuffer.add(t.getMessage());
              error=true;
            }
          }
        }
        if (error) {
          throw new IllegalArgumentException(errorBuffer.toString());
        }
        return null;
      }
    }
;
    Services.command(securityContext,TransactionCommand.class).execute(transaction);
    if (transaction.getCause() != null) {
      throw transaction.getCause();
    }
    return new RestMethodResult(HttpServletResponse.SC_OK);
  }
  throw new IllegalPathException();
}
