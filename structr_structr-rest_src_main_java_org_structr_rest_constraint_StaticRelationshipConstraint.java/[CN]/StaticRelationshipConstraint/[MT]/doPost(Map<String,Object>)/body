{
  StructrTransaction transaction=new StructrTransaction(){
    @Override public Object execute() throws FrameworkException {
      AbstractNode sourceNode=typedIdConstraint.getIdConstraint().getNode();
      DirectedRelationship rel=EntityContext.getDirectedRelationship(sourceNode.getClass(),typeConstraint.getRawType());
      if (rel != null) {
        Adapter<Object,GraphObject> adapter=rel.getNotion().getAdapterForSetter(securityContext);
        for (        Entry<String,Object> entry : propertySet.entrySet()) {
          Object value=entry.getValue();
          if (value instanceof Collection) {
            Collection collection=(Collection)value;
            for (            Object obj : collection) {
              GraphObject otherNode=adapter.adapt(obj);
              if (otherNode != null) {
                rel.createRelationship(securityContext,sourceNode,otherNode);
              }
            }
          }
 else {
            GraphObject otherNode=adapter.adapt(value);
            if (otherNode != null) {
              rel.createRelationship(securityContext,sourceNode,otherNode);
            }
          }
        }
      }
      return null;
    }
  }
;
  Services.command(securityContext,TransactionCommand.class).execute(transaction);
  return new RestMethodResult(HttpServletResponse.SC_OK);
}
