{
  List<SearchAttribute> searchAttributes=new LinkedList<SearchAttribute>();
  AbstractNode topNode=null;
  boolean includeDeletedAndHidden=false;
  boolean publicOnly=false;
  if (rawType != null) {
    searchAttributes.add(Search.andExactTypeAndSubtypes(EntityContext.normalizeEntityName(rawType)));
    hasSearchableAttributes(searchAttributes);
    List<GraphObject> results=(List<GraphObject>)Services.command(securityContext,SearchNodeCommand.class).execute(topNode,includeDeletedAndHidden,publicOnly,searchAttributes);
    if (!results.isEmpty()) {
      return results;
    }
  }
 else {
    logger.log(Level.WARNING,"type was null");
  }
  return Collections.emptyList();
}
