{
  final Result<GraphObject> result=doGet(null,false,NodeFactory.DEFAULT_PAGE_SIZE,NodeFactory.DEFAULT_PAGE,null);
  final List<GraphObject> results=result.getResults();
  if (results != null && !results.isEmpty()) {
    final Class type=results.get(0).getClass();
    final PropertyMap properties=PropertyMap.inputTypeToJavaType(securityContext,type,propertySet);
    final StructrTransaction transaction=new StructrTransaction(){
      @Override public Object execute() throws FrameworkException {
        for (        final GraphObject obj : results) {
          for (          final Entry<PropertyKey,Object> attr : properties.entrySet()) {
            obj.setProperty(attr.getKey(),attr.getValue());
          }
        }
        return null;
      }
    }
;
    Services.command(securityContext,TransactionCommand.class).execute(transaction);
    return new RestMethodResult(HttpServletResponse.SC_OK);
  }
  throw new IllegalPathException();
}
