{
  boolean hasSearchableAttributes=false;
  if (rawType != null && request != null && !request.getParameterMap().isEmpty()) {
    final boolean looseSearch=parseInteger(request.getParameter(JsonRestServlet.REQUEST_PARAMETER_LOOSE_SEARCH)) == 1;
    Set<String> searchableProperties=null;
    if (looseSearch) {
      searchableProperties=EntityContext.getSearchableProperties(rawType,NodeService.NodeIndex.fulltext.name());
    }
 else {
      searchableProperties=EntityContext.getSearchableProperties(rawType,NodeService.NodeIndex.keyword.name());
    }
    if (searchableProperties != null) {
      checkForIllegalSearchKeys(request,searchableProperties);
      for (      final String key : searchableProperties) {
        String searchValue=request.getParameter(key);
        if (searchValue != null) {
          if (looseSearch) {
            if (searchValue.contains("\"")) {
              searchValue=searchValue.replaceAll("[\"]+","");
            }
            if (searchValue.contains("'")) {
              searchValue=searchValue.replaceAll("[']+","");
            }
            searchAttributes.add(Search.andProperty(key,searchValue));
          }
 else {
            if (StringUtils.startsWith(searchValue,"[") && StringUtils.endsWith(searchValue,"]")) {
              final String strippedValue=StringUtils.stripEnd(StringUtils.stripStart(searchValue,"["),"]");
              searchAttributes.add(Search.andMatchExactValues(key,strippedValue,SearchOperator.OR));
            }
 else             if (StringUtils.startsWith(searchValue,"(") && StringUtils.endsWith(searchValue,")")) {
              final String strippedValue=StringUtils.stripEnd(StringUtils.stripStart(searchValue,"("),")");
              searchAttributes.add(Search.andMatchExactValues(key,strippedValue,SearchOperator.AND));
            }
 else {
              searchAttributes.add(Search.andExactProperty(key,searchValue));
            }
          }
          hasSearchableAttributes=true;
        }
      }
    }
  }
  return hasSearchableAttributes;
}
