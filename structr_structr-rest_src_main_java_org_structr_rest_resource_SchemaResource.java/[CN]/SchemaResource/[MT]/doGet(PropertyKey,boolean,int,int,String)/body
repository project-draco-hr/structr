{
  List<GraphObjectMap> resultList=new LinkedList<GraphObjectMap>();
  ModuleService moduleService=(ModuleService)Services.getService(ModuleService.class);
  for (  String rawType : moduleService.getCachedNodeEntityTypes()) {
    Class type=EntityContext.getEntityClassForRawType(rawType);
    GraphObjectMap schema=new GraphObjectMap();
    resultList.add(schema);
    String url="/".concat(CaseHelper.toUnderscore(rawType,true));
    schema.setProperty(new Property("url"),url);
    schema.setProperty(new Property("type"),rawType);
    schema.setProperty(new Property("flags"),SecurityContext.getResourceFlags(rawType));
    Map<String,Map<String,Object>> views=new TreeMap<String,Map<String,Object>>();
    Set<String> propertyViews=EntityContext.getPropertyViews();
    schema.setProperty(new Property("views"),views);
    for (    String view : propertyViews) {
      Map<String,Object> propertyConverterMap=new TreeMap<String,Object>();
      Set<PropertyKey> properties=EntityContext.getPropertySet(type,view);
      if (!"all".equals(view) && !properties.isEmpty()) {
        for (        PropertyKey property : properties) {
          StringBuilder converterPlusValue=new StringBuilder();
          PropertyConverter databaseConverter=property.databaseConverter(securityContext,null);
          PropertyConverter inputConverter=property.inputConverter(securityContext);
          converterPlusValue.append("(");
          if (databaseConverter != null) {
            converterPlusValue.append(" databaseConverter: ");
            converterPlusValue.append(databaseConverter.getClass().getName());
            converterPlusValue.append(" ");
          }
          if (inputConverter != null) {
            converterPlusValue.append(" inputConverter: ");
            converterPlusValue.append(inputConverter.getClass().getName());
            converterPlusValue.append(" ");
          }
          converterPlusValue.append(")");
          propertyConverterMap.put(property.name(),converterPlusValue.toString());
        }
        views.put(view,propertyConverterMap);
      }
    }
  }
  return new Result(resultList,resultList.size(),false,false);
}
