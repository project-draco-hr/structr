{
  Resource pagedSortedResource=finalResource;
  Class type=finalResource.getEntityClass();
  if (type != null) {
    Transformation<List<? extends GraphObject>> transformation=EntityContext.getViewTransformation(type,propertyView.get(securityContext));
    if (transformation != null) {
      pagedSortedResource=pagedSortedResource.tryCombineWith(new TransformationResource(securityContext,transformation));
    }
  }
  String sortKey=request.getParameter(REQUEST_PARAMETER_SORT_KEY);
  if (sortKey != null) {
    String sortOrder=request.getParameter(REQUEST_PARAMETER_SORT_ORDER);
    if (sortOrder == null) {
      sortOrder=DEFAULT_VALUE_SORT_ORDER;
    }
    pagedSortedResource=pagedSortedResource.tryCombineWith(new SortResource(securityContext,sortKey,sortOrder));
  }
  String pageSizeParameter=request.getParameter(REQUEST_PARAMETER_PAGE_SIZE);
  if (pageSizeParameter != null) {
    String pageParameter=request.getParameter(REQUEST_PARAMETER_PAGE_NUMBER);
    int pageSize=parseInt(pageSizeParameter,DEFAULT_VALUE_PAGE_SIZE);
    int page=parseInt(pageParameter,1);
    if (pageSize <= 0) {
      throw new IllegalPathException();
    }
    pagedSortedResource=pagedSortedResource.tryCombineWith(new PagingResource(securityContext,page,pageSize));
  }
  return pagedSortedResource;
}
