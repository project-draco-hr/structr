{
  ResourceConstraint pagedSortedConstraint=finalConstraint;
  String sortKey=request.getParameter(REQUEST_PARAMETER_SORT_KEY);
  if (sortKey != null) {
    String sortOrder=request.getParameter(REQUEST_PARAMETER_SORT_ORDER);
    if (sortOrder == null) {
      sortOrder=DEFAULT_VALUE_SORT_ORDER;
    }
    pagedSortedConstraint=pagedSortedConstraint.tryCombineWith(new SortConstraint(securityContext,sortKey,sortOrder));
  }
  String pageSizeParameter=request.getParameter(REQUEST_PARAMETER_PAGE_SIZE);
  if (pageSizeParameter != null) {
    String pageParameter=request.getParameter(REQUEST_PARAMETER_PAGE_NUMBER);
    int pageSize=parseInt(pageSizeParameter,DEFAULT_VALUE_PAGE_SIZE);
    int page=parseInt(pageParameter,1);
    if (pageSize <= 0) {
      throw new IllegalPathException();
    }
    pagedSortedConstraint=pagedSortedConstraint.tryCombineWith(new PagingConstraint(securityContext,page,pageSize));
  }
  return pagedSortedConstraint;
}
