{
  try {
    logRequest("OPTIONS",request);
    request.setCharacterEncoding("UTF-8");
    response.setContentType("application/json; charset=UTF-8");
    SecurityContext securityContext=getSecurityContext(request);
    List<ResourceConstraint> chain=parsePath(securityContext,request);
    ResourceConstraint resourceConstraint=optimizeConstraintChain(chain);
    RestMethodResult result=resourceConstraint.doOptions();
    result.commitResponse(gson,response);
  }
 catch (  IllegalArgumentException illegalArgumentException) {
    handleValidationError(illegalArgumentException,response);
  }
catch (  FrameworkException frameworkException) {
    int code=frameworkException.getStatus();
    response.setStatus(code);
    response.getWriter().append(jsonError(code,frameworkException.getMessage()));
  }
catch (  JsonSyntaxException jsex) {
    logger.log(Level.WARNING,"JsonSyntaxException in OPTIONS",jsex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in OPTIONS: " + jsex.getMessage()));
  }
catch (  JsonParseException jpex) {
    logger.log(Level.WARNING,"JsonParseException in OPTIONS",jpex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in OPTIONS: " + jpex.getMessage()));
  }
catch (  Throwable t) {
    logger.log(Level.WARNING,"Exception in OPTIONS",t);
    int code=HttpServletResponse.SC_INTERNAL_SERVER_ERROR;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in OPTIONS: " + t.getMessage()));
  }
}
