{
  try {
    request.setCharacterEncoding("UTF-8");
    response.setContentType("application/json; charset=UTF-8");
    final PropertySet propertySet=gson.fromJson(request.getReader(),PropertySet.class);
    SecurityContext securityContext=getSecurityContext(request);
    if (securityContext != null) {
      List<Resource> chain=parsePath(securityContext,request);
      Resource resourceConstraint=optimizeConstraintChain(chain);
      Map<String,Object> properties=convertPropertySetToMap(propertySet);
      RestMethodResult result=resourceConstraint.doPut(properties);
      result.commitResponse(gson,response);
    }
 else {
      RestMethodResult result=new RestMethodResult(HttpServletResponse.SC_FORBIDDEN);
      result.commitResponse(gson,response);
    }
  }
 catch (  FrameworkException frameworkException) {
    response.setStatus(frameworkException.getStatus());
    gson.toJson(frameworkException,response.getWriter());
    response.getWriter().println();
    response.getWriter().flush();
    response.getWriter().close();
  }
catch (  JsonSyntaxException jsex) {
    logger.log(Level.WARNING,"JsonSyntaxException in PUT",jsex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in PUT: " + jsex.getMessage()));
  }
catch (  JsonParseException jpex) {
    logger.log(Level.WARNING,"JsonParseException in PUT",jpex);
    int code=HttpServletResponse.SC_BAD_REQUEST;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in PUT: " + jpex.getMessage()));
  }
catch (  Throwable t) {
    logger.log(Level.WARNING,"Exception in PUT",t);
    int code=HttpServletResponse.SC_INTERNAL_SERVER_ERROR;
    response.setStatus(code);
    response.getWriter().append(jsonError(code,"JsonSyntaxException in PUT: " + t.getMessage()));
  }
}
