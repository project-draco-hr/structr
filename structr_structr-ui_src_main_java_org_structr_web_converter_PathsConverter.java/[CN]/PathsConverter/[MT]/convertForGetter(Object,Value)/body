{
  AbstractNode startNode=(AbstractNode)currentObject;
  TraversalDescription localDesc=Traversal.description().depthFirst().uniqueness(Uniqueness.NODE_PATH).relationships(RelType.CONTAINS,Direction.INCOMING);
  Set<String> treeAddresses=new HashSet<String>();
  for (  Path path : localDesc.traverse(startNode.getNode())) {
    String pageId=(String)path.endNode().getProperty("uuid");
    String treeAddress="";
    boolean isConnected=false;
    for (    Relationship r : path.relationships()) {
      isConnected=true;
      if (!r.hasProperty(pageId)) {
        isConnected=false;
        break;
      }
      Integer pos=Integer.parseInt(r.getProperty(pageId).toString());
      treeAddress="_" + pos + treeAddress;
    }
    if (isConnected) {
      treeAddresses.add(pageId + treeAddress);
      logger.log(Level.FINE,"{0}{1}",new Object[]{pageId,treeAddress});
    }
  }
  return treeAddresses;
}
