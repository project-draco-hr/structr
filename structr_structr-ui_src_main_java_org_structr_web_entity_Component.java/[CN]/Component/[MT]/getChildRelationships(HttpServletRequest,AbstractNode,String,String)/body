{
  List<AbstractRelationship> rels=new LinkedList<AbstractRelationship>();
  for (  AbstractRelationship abstractRelationship : node.getOutgoingRelationships(RelType.CONTAINS)) {
    Relationship rel=abstractRelationship.getRelationship();
    if ((pageId == null) || ((pageId != null) && rel.hasProperty(pageId)) || rel.hasProperty("*")) {
      AbstractNode endNode=abstractRelationship.getEndNode();
      if (endNode == null || (endNode instanceof Component && !isVisible(request,endNode,abstractRelationship,componentId))) {
        continue;
      }
      if ((componentId != null) && ((endNode instanceof Content) || (endNode instanceof Component))) {
        if (endNode instanceof Content && endNode.getProperty(Content.dataKey) == null) {
          rels.add(abstractRelationship);
        }
 else         if (componentId.equals(abstractRelationship.getProperty(Component.componentId))) {
          rels.add(abstractRelationship);
        }
      }
 else {
        rels.add(abstractRelationship);
      }
    }
  }
  if (pageId != null) {
    Collections.sort(rels,new Comparator<AbstractRelationship>(){
      @Override public int compare(      AbstractRelationship o1,      AbstractRelationship o2){
        Long pos1=getPosition(o1,pageId);
        Long pos2=getPosition(o2,pageId);
        return pos1.compareTo(pos2);
      }
    }
);
  }
  return rels;
}
