{
  AbstractNode node=startNode;
  String[] parts=refKey.split("[\\.]+");
  String referenceKey=parts[parts.length - 1];
  for (int i=0; (i < parts.length) && (node != null); i++) {
    String part=parts[i];
    if ("request".equals(part.toLowerCase())) {
      HttpServletRequest request=securityContext.getRequest();
      if (request != null) {
        return StringUtils.defaultString(request.getParameter(referenceKey));
      }
    }
    if ("component".equals(part.toLowerCase())) {
      node=getNodeById(securityContext,componentId);
      continue;
    }
    if ("resource".equals(part.toLowerCase())) {
      node=getNodeById(securityContext,pageId);
      continue;
    }
    if ("page".equals(part.toLowerCase())) {
      node=page;
      continue;
    }
    if ("link".equals(part.toLowerCase())) {
      for (      AbstractRelationship rel : node.getRelationships(RelType.LINK,Direction.OUTGOING)) {
        node=rel.getEndNode();
        break;
      }
      continue;
    }
    if ("parent".equals(part.toLowerCase())) {
      for (      AbstractRelationship rel : node.getRelationships(RelType.CONTAINS,Direction.INCOMING)) {
        if (rel.getProperty(pageId) != null) {
          node=rel.getStartNode();
          break;
        }
      }
      continue;
    }
    if ("owner".equals(part.toLowerCase())) {
      for (      AbstractRelationship rel : node.getRelationships(RelType.OWNS,Direction.INCOMING)) {
        node=rel.getStartNode();
        break;
      }
      continue;
    }
    if ("data".equals(part.toLowerCase())) {
      node=viewComponent;
      continue;
    }
    if ("root".equals(part.toLowerCase())) {
      List<Page> pages=getPages(securityContext,viewComponent);
      if (pages.isEmpty()) {
        continue;
      }
      node=pages.get(0);
      continue;
    }
    if ("result_size".equals(part.toLowerCase())) {
      Set<Page> pages=HtmlServlet.getResultPages(securityContext,(Page)page);
      if (!pages.isEmpty()) {
        return pages.size();
      }
      return 0;
    }
    if ("rest_result".equals(part.toLowerCase())) {
      HttpServletRequest request=securityContext.getRequest();
      if (request != null) {
        return StringUtils.defaultString((String)request.getAttribute(HtmlServlet.REST_RESPONSE));
      }
      return 0;
    }
  }
  if (node != null) {
    return node.getProperty(referenceKey);
  }
  return null;
}
