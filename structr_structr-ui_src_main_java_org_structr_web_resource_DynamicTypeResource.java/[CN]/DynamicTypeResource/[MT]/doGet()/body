{
  List<SearchAttribute> searchAttributes=new LinkedList<SearchAttribute>();
  AbstractNode topNode=null;
  boolean includeDeleted=false;
  boolean publicOnly=false;
  if (rawType != null) {
    searchAttributes.add(Search.andExactProperty(HtmlElement.UiKey.structrclass.name(),EntityContext.normalizeEntityName(rawType)));
    hasSearchableAttributes(rawType,request,searchAttributes);
    List<GraphObject> results=(List<GraphObject>)Services.command(securityContext,SearchNodeCommand.class).execute(topNode,includeDeleted,publicOnly,searchAttributes);
    if (!results.isEmpty()) {
      return results;
    }
  }
  return super.doGet();
}
