{
  List<AbstractNode> possibleEntryPoints=(List<AbstractNode>)request.getAttribute(POSSIBLE_ENTRY_POINTS);
  if (CollectionUtils.isNotEmpty(possibleEntryPoints)) {
    return possibleEntryPoints;
  }
  if (uuid.length() > 0) {
    logger.log(Level.FINE,"Requested id: {0}",uuid);
    List<SearchAttribute> searchAttrs=new LinkedList<SearchAttribute>();
    searchAttrs.add(Search.andExactUuid(uuid));
    SearchAttributeGroup group=new SearchAttributeGroup(SearchOperator.AND);
    group.add(Search.orExactType(Page.class.getSimpleName()));
    group.add(Search.orExactType(Component.class.getSimpleName()));
    group.add(Search.orExactTypeAndSubtypes(File.class.getSimpleName()));
    searchAttrs.add(group);
    Result results=searchNodesAsSuperuser.execute(searchAttrs);
    logger.log(Level.FINE,"{0} results",results.size());
    request.setAttribute(POSSIBLE_ENTRY_POINTS,results.getResults());
    return (List<AbstractNode>)results.getResults();
  }
  return Collections.EMPTY_LIST;
}
