{
  String localComponentId=componentId;
  String content=null;
  String tag=null;
  AbstractRelationship link=null;
  if (node != null) {
    String structrClass=node.getStringProperty(Component.UiKey.structrclass);
    if ((structrClass != null) && structrClass.equals(EntityContext.normalizeEntityName(searchClass)) && (attrs != null)) {
      for (      NodeAttribute attr : attrs) {
        String key=attr.getKey();
        Object val=attr.getValue();
        if (!val.equals(node.getProperty(key))) {
          return;
        }
      }
    }
    String id=node.getStringProperty("uuid");
    for (int d=0; d < depth; d++) {
      System.out.print(" ");
    }
    if (node instanceof Content) {
      content=(((Content)node).getPropertyWithVariableReplacement(resourceId,componentId,Content.UiKey.content.name()));
      List<AbstractRelationship> links=node.getOutgoingLinkRelationships();
      if ((links != null) && !links.isEmpty()) {
        link=links.get(0);
      }
    }
    if (node instanceof Component) {
      localComponentId=node.getStringProperty(AbstractNode.Key.uuid);
    }
    if (link != null) {
      buffer.append("<a href=\"").append(link.getEndNode().getName()).append("\">");
    }
    tag=node.getStringProperty("tag");
    if (edit && inBody && (node instanceof Content)) {
      buffer.delete(buffer.length() - 1,buffer.length());
      buffer.append(" structr_content_id=\"").append(id).append("\">");
    }
    if (StringUtils.isNotBlank(tag)) {
      if (tag.equals("body")) {
        inBody=true;
      }
      buffer.append("<").append(tag);
      if (edit && (id != null)) {
        if (depth == 1) {
          buffer.append(" structr_resource_id='").append(resourceId).append("'");
        }
        if (!(node instanceof Content)) {
          buffer.append(" structr_element_id=\"").append(id).append("\"");
          buffer.append(" structr_type=\"").append(node.getType()).append("\"");
          buffer.append(" structr_name=\"").append(node.getName()).append("\"");
        }
      }
      if (node instanceof HtmlElement) {
        HtmlElement htmlElement=(HtmlElement)node;
        for (        String attribute : EntityContext.getPropertySet(node.getClass(),PropertyView.Html)) {
          try {
            String value=htmlElement.getPropertyWithVariableReplacement(resourceId,localComponentId,attribute);
            if ((value != null) && StringUtils.isNotBlank(value)) {
              String key=attribute.substring(PropertyView.Html.length());
              buffer.append(" ").append(key).append("=\"").append(value).append("\"");
            }
          }
 catch (          Throwable t) {
            t.printStackTrace();
          }
        }
      }
      buffer.append(">");
    }
    if (content != null) {
      buffer.append(content);
    }
  }
  List<AbstractRelationship> rels=Component.getChildRelationships(node,resourceId,localComponentId);
  for (  AbstractRelationship rel : rels) {
    AbstractNode subNode=rel.getEndNode();
    getContent(resourceId,localComponentId,buffer,subNode,depth + 1,inBody,searchClass,attrs);
  }
  if (StringUtils.isNotBlank(tag) && !(ArrayUtils.contains(html5VoidTags,tag))) {
    buffer.append("</").append(tag).append(">");
  }
  if (link != null) {
    buffer.append("</a>");
  }
}
