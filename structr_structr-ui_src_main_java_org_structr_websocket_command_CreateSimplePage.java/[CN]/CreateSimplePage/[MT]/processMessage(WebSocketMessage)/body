{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  createNode=Services.command(securityContext,CreateNodeCommand.class);
  createRel=Services.command(securityContext,CreateRelationshipCommand.class);
  StructrTransaction transaction=new StructrTransaction(){
    @Override public Object execute() throws FrameworkException {
      Page page=(Page)createElement(null,Page.class.getSimpleName(),0,null);
      page.setProperty(Page.UiKey.contentType,"text/html");
      Html html=(Html)createElement(page,Html.class.getSimpleName(),0,page);
      Head head=(Head)createElement(page,Head.class.getSimpleName(),0,html);
      Body body=(Body)createElement(page,Body.class.getSimpleName(),1,html);
      Title title=(Title)createElement(page,Title.class.getSimpleName(),0,head);
      Content content=(Content)createElement(page,Content.class.getSimpleName(),0,title);
      content.setProperty(Content.UiKey.content,"Page Title");
      H1 h1=(H1)createElement(page,H1.class.getSimpleName(),0,body);
      Content h1Content=(Content)createElement(page,Content.class.getSimpleName(),0,h1);
      h1Content.setProperty(Content.UiKey.content,"Page Title");
      Div div=(Div)createElement(page,Div.class.getSimpleName(),1,body);
      Content divContent=(Content)createElement(page,Content.class.getSimpleName(),0,div);
      divContent.setProperty(Content.UiKey.content,"Body Text");
      return page;
    }
  }
;
  try {
    Services.command(securityContext,TransactionCommand.class).execute(transaction);
  }
 catch (  FrameworkException fex) {
    logger.log(Level.WARNING,"Could not create node.",fex);
    getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
  }
}
