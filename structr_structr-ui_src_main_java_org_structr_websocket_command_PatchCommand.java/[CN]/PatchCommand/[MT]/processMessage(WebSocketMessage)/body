{
  AbstractNode node=getNode(webSocketData.getId());
  Map<String,Object> properties=webSocketData.getData();
  String patch=(String)properties.get("patch");
  if (node != null) {
    diff_match_patch dmp=new diff_match_patch();
    String oldText=node.getStringProperty(Content.UiKey.content);
    LinkedList<Patch> patches=(LinkedList<Patch>)dmp.patch_fromText(patch);
    Object[] results=dmp.patch_apply(patches,oldText);
    try {
      node.setProperty(Content.UiKey.content,results[0].toString());
    }
 catch (    Throwable t) {
      logger.log(Level.WARNING,"Could not apply patch {0}",patch);
      getWebSocket().send(MessageBuilder.status().code(400).build(),true);
    }
  }
 else {
    logger.log(Level.WARNING,"Node with uuid {0} not found.",webSocketData.getId());
    getWebSocket().send(MessageBuilder.status().code(404).build(),true);
  }
}
