{
  super.onInit();
  menuItem=(MenuItem)node;
  final Page linkTargetNode=menuItem.getLinkedPage();
  linkTargetSelect.setDataProvider(new DataProvider(){
    @Override public List<Option> getData(){
      List<Option> options=new ArrayList<Option>();
      List<StructrNode> nodes=null;
      if (linkTargetNode != null) {
        nodes=linkTargetNode.getSiblingNodes(user);
      }
 else {
        Command searchNode=Services.createCommand(SearchNodeCommand.class);
        List<SearchAttribute> searchAttrs=new ArrayList<SearchAttribute>();
        searchAttrs.add(new SearchAttribute(StructrNode.TYPE_KEY,Page.class.getSimpleName(),SearchOperator.OR));
        nodes=(List<StructrNode>)searchNode.execute(null,null,true,false,searchAttrs);
      }
      if (nodes != null) {
        Collections.sort(nodes);
        options.add(Option.EMPTY_OPTION);
        for (        StructrNode n : nodes) {
          if (n instanceof Page) {
            Option opt=new Option(n.getId(),n.getName());
            options.add(opt);
          }
        }
      }
      return options;
    }
  }
);
}
