{
  StructrTransaction transaction=new StructrTransaction(){
    @Override public Object execute() throws FrameworkException {
      return Services.command(SecurityContext.getSuperUserInstance(),CreateNodeCommand.class).execute(webSocketData.getData());
    }
  }
;
  try {
    AbstractNode newNode=(AbstractNode)Services.command(SecurityContext.getSuperUserInstance(),TransactionCommand.class).execute(transaction);
    if (newNode instanceof File) {
      File fileNode=(File)newNode;
      String uuid=newNode.getStringProperty(AbstractNode.Key.uuid);
      String directory=uuid.substring(0,1) + "/" + uuid.substring(1,2)+ "/"+ uuid.substring(2,3)+ "/"+ uuid.substring(3,4);
      fileNode.setRelativeFilePath(directory + "/" + uuid);
      getWebSocket().handleFileCreation((File)newNode);
    }
  }
 catch (  FrameworkException fex) {
    logger.log(Level.WARNING,"Could not create node.",fex);
    getWebSocket().send(MessageBuilder.status().code(fex.getStatus()).message(fex.getMessage()).build(),true);
  }
}
