{
  SecurityContext securityContext=SecurityContext.getSuperUserInstance();
  String username=(String)webSocketData.getData().get("username");
  String password=(String)webSocketData.getData().get("password");
  User user=null;
  if ((username != null) && (password != null)) {
    try {
      StructrWebSocket socket=this.getWebSocket();
      Authenticator auth=(Authenticator)Services.command(securityContext,AuthenticatorCommand.class).execute(socket.getConfig());
      user=auth.doLogin(securityContext,socket.getRequest(),username,password);
      if (user != null) {
        String token=StructrWebSocket.secureRandomString();
        user.setProperty(User.Key.sessionId,token);
        webSocketData.getData().clear();
        webSocketData.setToken(token);
        this.getWebSocket().setAuthenticated(token,user);
        this.getWebSocket().send(webSocketData,false);
      }
    }
 catch (    AuthenticationException e) {
      logger.log(Level.INFO,"Could not login {0} with {1}",new Object[]{username,password});
      this.getWebSocket().send(MessageBuilder.status().code(403).build(),true);
    }
catch (    FrameworkException fex) {
      logger.log(Level.WARNING,"Unable to execute command",fex);
    }
  }
}
