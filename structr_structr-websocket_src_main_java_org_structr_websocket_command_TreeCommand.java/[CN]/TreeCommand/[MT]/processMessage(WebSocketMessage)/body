{
  final SecurityContext securityContext=getWebSocket().getSecurityContext();
  AbstractNode rootNode=getNode(webSocketData.getId());
  TraversalDescription localDesc=Traversal.description().depthFirst().uniqueness(Uniqueness.NODE_GLOBAL).expand(new ResourceExpander(rootNode.getStringProperty(AbstractNode.Key.uuid.name())));
  final NodeFactory factory=new NodeFactory(securityContext);
  final TreeNode root=new TreeNode(null);
  localDesc=localDesc.evaluator(new Evaluator(){
    @Override public Evaluation evaluate(    Path path){
      Node node=path.endNode();
      if (node.hasProperty(AbstractNode.Key.type.name())) {
        try {
          TreeNode newTreeNode=new TreeNode(factory.createNode(node));
          Relationship rel=path.lastRelationship();
          if (rel != null) {
            Node parentNode=rel.getStartNode();
            TreeNode parentTreeNode=root.getNode((String)parentNode.getProperty("uuid"));
            if (parentTreeNode == null) {
              root.addChild(newTreeNode);
              logger.log(Level.FINEST,"New tree node: {0} --> {1}",new Object[]{newTreeNode,root});
              logger.log(Level.FINE,"New tree node: {0} --> {1}",new Object[]{newTreeNode.getData().getName(),"root"});
            }
 else {
              parentTreeNode.addChild(newTreeNode);
              logger.log(Level.FINEST,"New tree node: {0} --> {1}",new Object[]{newTreeNode,parentTreeNode});
              logger.log(Level.FINE,"New tree node: {0} --> {1}",new Object[]{newTreeNode.getData().getName(),parentTreeNode.getData().getName()});
            }
          }
 else {
            root.addChild(newTreeNode);
            logger.log(Level.FINE,"Added {0} to root",newTreeNode);
          }
          return Evaluation.INCLUDE_AND_CONTINUE;
        }
 catch (        FrameworkException fex) {
          logger.log(Level.WARNING,"Unable to instantiate node",fex);
        }
      }
      return Evaluation.EXCLUDE_AND_CONTINUE;
    }
  }
);
  for (  Node node : localDesc.traverse(rootNode.getNode()).nodes()) {
  }
  webSocketData.setResultTree(root);
  getWebSocket().send(webSocketData,true);
}
